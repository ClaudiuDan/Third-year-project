src,trg
"red shirt swinging . swinging shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( swinging [ shirt ] ) newline"
"people ride red . people ride ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ ride ] = red newline print ( people [ ride ] ) newline"
"while sing music . while sing ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ sing ] = music newline print ( while [ sing ] ) newline"
"third look guy . third look ?","if entities . find ( third ) ! = None : newline newtab entities [ third ] [ look ] = guy newline print ( third [ look ] ) newline"
"top be number . top be ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ be ] = number newline print ( top [ be ] ) newline"
"woman spin out . out spin ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ spin ] = woman newline print ( out [ spin ] ) newline"
"driver be blindfolded . blindfolded be ?","if entities . find ( driver ) ! = None : newline newtab entities [ driver ] [ be ] = driver newline print ( blindfolded [ be ] ) newline"
"cow lie half . half lie ?","if entities . find ( cow ) ! = None : newline newtab entities [ cow ] [ lie ] = cow newline print ( half [ lie ] ) newline"
"hair get ready . ready get ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ get ] = hair newline print ( ready [ get ] ) newline"
"man wear all . all wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( all [ wear ] ) newline"
"man wear black . black wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( black [ wear ] ) newline"
"red cross legged . legged cross ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ cross ] = red newline print ( legged [ cross ] ) newline"
"top ride bike . top ride ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ ride ] = bike newline print ( top [ ride ] ) newline"
"pit cook french . pit cook ?","if entities . find ( pit ) ! = None : newline newtab entities [ pit ] [ cook ] = french newline print ( pit [ cook ] ) newline"
"boy be swinging . swinging be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( swinging [ be ] ) newline"
"girl wear ice . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = ice newline print ( girl [ wear ] ) newline"
"people stand center . people stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = center newline print ( people [ stand ] ) newline"
"kid be visible . visible be ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ be ] = kid newline print ( visible [ be ] ) newline"
"men be staring . staring be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( staring [ be ] ) newline"
"man wear jeans . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = jeans newline print ( man [ wear ] ) newline"
"man drive range . man drive ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ drive ] = range newline print ( man [ drive ] ) newline"
"helmet be intimate . intimate be ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ be ] = helmet newline print ( intimate [ be ] ) newline"
"men lean out . out lean ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ lean ] = men newline print ( out [ lean ] ) newline"
"boy slide white . white slide ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ slide ] = boy newline print ( white [ slide ] ) newline"
"neon color uniform . uniform color ?","if entities . find ( neon ) ! = None : newline newtab entities [ neon ] [ color ] = neon newline print ( uniform [ color ] ) newline"
"sunglasses be painted . painted be ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ be ] = sunglasses newline print ( painted [ be ] ) newline"
"girl stand next . next stand ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ stand ] = girl newline print ( next [ stand ] ) newline"
"beard play an . beard play ?","if entities . find ( beard ) ! = None : newline newtab entities [ beard ] [ play ] = an newline print ( beard [ play ] ) newline"
"kid look man . kid look ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ look ] = man newline print ( kid [ look ] ) newline"
"ball run next . next run ?","if entities . find ( ball ) ! = None : newline newtab entities [ ball ] [ run ] = ball newline print ( next [ run ] ) newline"
"girl be short . short be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( short [ be ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"dog be white . white be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( white [ be ] ) newline"
"dog fetch water . dog fetch ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ fetch ] = water newline print ( dog [ fetch ] ) newline"
"people be next . next be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( next [ be ] ) newline"
"men sit while . men sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = while newline print ( men [ sit ] ) newline"
"dog be parasailing . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = parasailing newline print ( dog [ be ] ) newline"
"vendor smile child . vendor smile ?","if entities . find ( vendor ) ! = None : newline newtab entities [ vendor ] [ smile ] = child newline print ( vendor [ smile ] ) newline"
"dog jump next . next jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = dog newline print ( next [ jump ] ) newline"
"orange shirt swinging . swinging shirt ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ shirt ] = orange newline print ( swinging [ shirt ] ) newline"
"man sky blue . blue sky ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sky ] = man newline print ( blue [ sky ] ) newline"
"man be staring . staring be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( staring [ be ] ) newline"
"paper hat construction . paper hat ?","if entities . find ( paper ) ! = None : newline newtab entities [ paper ] [ hat ] = construction newline print ( paper [ hat ] ) newline"
"two bucket two . two bucket ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ bucket ] = two newline print ( two [ bucket ] ) newline"
"man be green . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = green newline print ( man [ be ] ) newline"
"woman wear striped . striped wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( striped [ wear ] ) newline"
"boy lay face . boy lay ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ lay ] = face newline print ( boy [ lay ] ) newline"
"foot catch fish . foot catch ?","if entities . find ( foot ) ! = None : newline newtab entities [ foot ] [ catch ] = fish newline print ( foot [ catch ] ) newline"
"ladder lean out . out lean ?","if entities . find ( ladder ) ! = None : newline newtab entities [ ladder ] [ lean ] = ladder newline print ( out [ lean ] ) newline"
"son be next . next be ?","if entities . find ( son ) ! = None : newline newtab entities [ son ] [ be ] = son newline print ( next [ be ] ) newline"
"green coat point . green coat ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ coat ] = point newline print ( green [ coat ] ) newline"
"man be contested . contested be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( contested [ be ] ) newline"
"hand be growling . hand be ?","if entities . find ( hand ) ! = None : newline newtab entities [ hand ] [ be ] = growling newline print ( hand [ be ] ) newline"
"person wear sandal . person wear ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ wear ] = sandal newline print ( person [ wear ] ) newline"
"man sit guy . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = guy newline print ( man [ sit ] ) newline"
"dog be some . some be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( some [ be ] ) newline"
"red shirt who . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = who newline print ( red [ shirt ] ) newline"
"jean shirt next . next shirt ?","if entities . find ( jean ) ! = None : newline newtab entities [ jean ] [ shirt ] = jean newline print ( next [ shirt ] ) newline"
"structure celebrate some . some celebrate ?","if entities . find ( structure ) ! = None : newline newtab entities [ structure ] [ celebrate ] = structure newline print ( some [ celebrate ] ) newline"
"red shirt staring . staring shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( staring [ shirt ] ) newline"
"table eat food . table eat ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ eat ] = food newline print ( table [ eat ] ) newline"
"he make funny . funny make ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ make ] = he newline print ( funny [ make ] ) newline"
"booth occupy table . booth occupy ?","if entities . find ( booth ) ! = None : newline newtab entities [ booth ] [ occupy ] = table newline print ( booth [ occupy ] ) newline"
"pedestrian be taste . pedestrian be ?","if entities . find ( pedestrian ) ! = None : newline newtab entities [ pedestrian ] [ be ] = taste newline print ( pedestrian [ be ] ) newline"
"art exhibit booth . art exhibit ?","if entities . find ( art ) ! = None : newline newtab entities [ art ] [ exhibit ] = booth newline print ( art [ exhibit ] ) newline"
"sun shine bright . bright shine ?","if entities . find ( sun ) ! = None : newline newtab entities [ sun ] [ shine ] = sun newline print ( bright [ shine ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"boy share white . white share ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ share ] = boy newline print ( white [ share ] ) newline"
"boy be asleep . asleep be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( asleep [ be ] ) newline"
"diner clean out . out clean ?","if entities . find ( diner ) ! = None : newline newtab entities [ diner ] [ clean ] = diner newline print ( out [ clean ] ) newline"
"while do handstand . while do ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ do ] = handstand newline print ( while [ do ] ) newline"
"dog be nature . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = nature newline print ( dog [ be ] ) newline"
"red dress opponent . red dress ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ dress ] = opponent newline print ( red [ dress ] ) newline"
"man wear white . white wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( white [ wear ] ) newline"
"jacket run side . jacket run ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ run ] = side newline print ( jacket [ run ] ) newline"
"orange work out . out work ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ work ] = orange newline print ( out [ work ] ) newline"
"person hang out . out hang ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ hang ] = person newline print ( out [ hang ] ) newline"
"picture show many . many show ?","if entities . find ( picture ) ! = None : newline newtab entities [ picture ] [ show ] = picture newline print ( many [ show ] ) newline"
"plaid shirt who . plaid shirt ?","if entities . find ( plaid ) ! = None : newline newtab entities [ plaid ] [ shirt ] = who newline print ( plaid [ shirt ] ) newline"
"player be sick . sick be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = player newline print ( sick [ be ] ) newline"
"runner be two . runner be ?","if entities . find ( runner ) ! = None : newline newtab entities [ runner ] [ be ] = two newline print ( runner [ be ] ) newline"
"legs try out . out try ?","if entities . find ( legs ) ! = None : newline newtab entities [ legs ] [ try ] = legs newline print ( out [ try ] ) newline"
"kid stand side . kid stand ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ stand ] = side newline print ( kid [ stand ] ) newline"
"while squat while . while squat ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ squat ] = while newline print ( while [ squat ] ) newline"
"person be many . many be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = person newline print ( many [ be ] ) newline"
"red swim underwater . underwater swim ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ swim ] = red newline print ( underwater [ swim ] ) newline"
"people walk arm . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = arm newline print ( people [ walk ] ) newline"
"while talk while . while talk ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ talk ] = while newline print ( while [ talk ] ) newline"
"cowboy wear orange . cowboy wear ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ wear ] = orange newline print ( cowboy [ wear ] ) newline"
"man be rock . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = rock newline print ( man [ be ] ) newline"
"while hide white . white hide ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hide ] = while newline print ( white [ hide ] ) newline"
"girl be ready . ready be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( ready [ be ] ) newline"
"onlooker watch six . onlooker watch ?","if entities . find ( onlooker ) ! = None : newline newtab entities [ onlooker ] [ watch ] = six newline print ( onlooker [ watch ] ) newline"
"woman wear white . white wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( white [ wear ] ) newline"
"male be teaching . male be ?","if entities . find ( male ) ! = None : newline newtab entities [ male ] [ be ] = teaching newline print ( male [ be ] ) newline"
"or sing while . or sing ?","if entities . find ( or ) ! = None : newline newtab entities [ or ] [ sing ] = while newline print ( or [ sing ] ) newline"
"people cross legged . legged cross ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ cross ] = people newline print ( legged [ cross ] ) newline"
"son be baby . son be ?","if entities . find ( son ) ! = None : newline newtab entities [ son ] [ be ] = baby newline print ( son [ be ] ) newline"
"couple be way . couple be ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ be ] = way newline print ( couple [ be ] ) newline"
"dog be three . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = three newline print ( dog [ be ] ) newline"
"kid be laughing . laughing be ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ be ] = kid newline print ( laughing [ be ] ) newline"
"man iron white . white iron ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ iron ] = man newline print ( white [ iron ] ) newline"
"red shirt hike . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = hike newline print ( red [ shirt ] ) newline"
"woman be next . next be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( next [ be ] ) newline"
"two seat audience . two seat ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ seat ] = audience newline print ( two [ seat ] ) newline"
"orange net two . orange net ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ net ] = two newline print ( orange [ net ] ) newline"
"cap talk while . cap talk ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ talk ] = while newline print ( cap [ talk ] ) newline"
"leash walk next . next walk ?","if entities . find ( leash ) ! = None : newline newtab entities [ leash ] [ walk ] = leash newline print ( next [ walk ] ) newline"
"while hold foreign . foreign hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = while newline print ( foreign [ hold ] ) newline"
"blouse sit alone . alone sit ?","if entities . find ( blouse ) ! = None : newline newtab entities [ blouse ] [ sit ] = blouse newline print ( alone [ sit ] ) newline"
"bench peel white . white peel ?","if entities . find ( bench ) ! = None : newline newtab entities [ bench ] [ peel ] = bench newline print ( white [ peel ] ) newline"
"baby eat ice . baby eat ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ eat ] = ice newline print ( baby [ eat ] ) newline"
"green shirt next . next shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = green newline print ( next [ shirt ] ) newline"
"man climb wall . man climb ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ climb ] = wall newline print ( man [ climb ] ) newline"
"dog be ecstatic . ecstatic be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( ecstatic [ be ] ) newline"
"man stand face . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = face newline print ( man [ stand ] ) newline"
"brown shirt rock . brown shirt ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ shirt ] = rock newline print ( brown [ shirt ] ) newline"
"ice block party . ice block ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ block ] = party newline print ( ice [ block ] ) newline"
"brochure try some . some try ?","if entities . find ( brochure ) ! = None : newline newtab entities [ brochure ] [ try ] = brochure newline print ( some [ try ] ) newline"
"contraption involve object . contraption involve ?","if entities . find ( contraption ) ! = None : newline newtab entities [ contraption ] [ involve ] = object newline print ( contraption [ involve ] ) newline"
"dog play bumper . dog play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = bumper newline print ( dog [ play ] ) newline"
"rock get air . rock get ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ get ] = air newline print ( rock [ get ] ) newline"
"woman make an . woman make ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ make ] = an newline print ( woman [ make ] ) newline"
"rug enjoy it . rug enjoy ?","if entities . find ( rug ) ! = None : newline newtab entities [ rug ] [ enjoy ] = it newline print ( rug [ enjoy ] ) newline"
"couple look men . couple look ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ look ] = men newline print ( couple [ look ] ) newline"
"cellphone wear jeans . cellphone wear ?","if entities . find ( cellphone ) ! = None : newline newtab entities [ cellphone ] [ wear ] = jeans newline print ( cellphone [ wear ] ) newline"
"sweatshirt listen white . white listen ?","if entities . find ( sweatshirt ) ! = None : newline newtab entities [ sweatshirt ] [ listen ] = sweatshirt newline print ( white [ listen ] ) newline"
"jacket be sleeping . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = sleeping newline print ( jacket [ be ] ) newline"
"dog be sleeping . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = sleeping newline print ( dog [ be ] ) newline"
"dog be fun . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = fun newline print ( dog [ be ] ) newline"
"woman wear orange . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = orange newline print ( woman [ wear ] ) newline"
"food stand or . food stand ?","if entities . find ( food ) ! = None : newline newtab entities [ food ] [ stand ] = or newline print ( food [ stand ] ) newline"
"kid run two . kid run ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ run ] = two newline print ( kid [ run ] ) newline"
"men lean out . out lean ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ lean ] = men newline print ( out [ lean ] ) newline"
"woman sit alone . alone sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( alone [ sit ] ) newline"
"dog dig out . out dig ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ dig ] = dog newline print ( out [ dig ] ) newline"
"people look kitchen . people look ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ look ] = kitchen newline print ( people [ look ] ) newline"
"room be laughing . laughing be ?","if entities . find ( room ) ! = None : newline newtab entities [ room ] [ be ] = room newline print ( laughing [ be ] ) newline"
"male play musical . musical play ?","if entities . find ( male ) ! = None : newline newtab entities [ male ] [ play ] = male newline print ( musical [ play ] ) newline"
"eyeglasses be ballet . eyeglasses be ?","if entities . find ( eyeglasses ) ! = None : newline newtab entities [ eyeglasses ] [ be ] = ballet newline print ( eyeglasses [ be ] ) newline"
"boy be laughing . laughing be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( laughing [ be ] ) newline"
"car talk next . next talk ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ talk ] = car newline print ( next [ talk ] ) newline"
"table eat out . out eat ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ eat ] = table newline print ( out [ eat ] ) newline"
"boy kick position . boy kick ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ kick ] = position newline print ( boy [ kick ] ) newline"
"man wear black . black wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( black [ wear ] ) newline"
"board advertise white . white advertise ?","if entities . find ( board ) ! = None : newline newtab entities [ board ] [ advertise ] = board newline print ( white [ advertise ] ) newline"
"boy be raining . raining be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( raining [ be ] ) newline"
"drainage ditch next . next ditch ?","if entities . find ( drainage ) ! = None : newline newtab entities [ drainage ] [ ditch ] = drainage newline print ( next [ ditch ] ) newline"
"man be three . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = three newline print ( man [ be ] ) newline"
"while hold umbrella . while hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = umbrella newline print ( while [ hold ] ) newline"
"child run while . child run ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ run ] = while newline print ( child [ run ] ) newline"
"hair wear an . hair wear ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ wear ] = an newline print ( hair [ wear ] ) newline"
"dog stand center . dog stand ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ stand ] = center newline print ( dog [ stand ] ) newline"
"man be clustered . clustered be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( clustered [ be ] ) newline"
"brown short use . brown short ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ short ] = use newline print ( brown [ short ] ) newline"
"rider raise another . another raise ?","if entities . find ( rider ) ! = None : newline newtab entities [ rider ] [ raise ] = rider newline print ( another [ raise ] ) newline"
"sweater be two . sweater be ?","if entities . find ( sweater ) ! = None : newline newtab entities [ sweater ] [ be ] = two newline print ( sweater [ be ] ) newline"
"man identify white . white identify ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ identify ] = man newline print ( white [ identify ] ) newline"
"worker be many . many be ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ be ] = worker newline print ( many [ be ] ) newline"
"green shirt an . green shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = an newline print ( green [ shirt ] ) newline"
"woman play various . various play ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ play ] = woman newline print ( various [ play ] ) newline"
"smoke come tackler . smoke come ?","if entities . find ( smoke ) ! = None : newline newtab entities [ smoke ] [ come ] = tackler newline print ( smoke [ come ] ) newline"
"man dress man . man dress ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ dress ] = man newline print ( man [ dress ] ) newline"
"green hat hard . hard hat ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ hat ] = green newline print ( hard [ hat ] ) newline"
"snowboarder take some . some take ?","if entities . find ( snowboarder ) ! = None : newline newtab entities [ snowboarder ] [ take ] = snowboarder newline print ( some [ take ] ) newline"
"girl sit next . next sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = girl newline print ( next [ sit ] ) newline"
"costume stand or . costume stand ?","if entities . find ( costume ) ! = None : newline newtab entities [ costume ] [ stand ] = or newline print ( costume [ stand ] ) newline"
"who be sleeping . who be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = sleeping newline print ( who [ be ] ) newline"
"girl stand next . next stand ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ stand ] = girl newline print ( next [ stand ] ) newline"
"gear look while . gear look ?","if entities . find ( gear ) ! = None : newline newtab entities [ gear ] [ look ] = while newline print ( gear [ look ] ) newline"
"people be happy . happy be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( happy [ be ] ) newline"
"cap play acoustic . acoustic play ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ play ] = cap newline print ( acoustic [ play ] ) newline"
"sleeve play acoustic . acoustic play ?","if entities . find ( sleeve ) ! = None : newline newtab entities [ sleeve ] [ play ] = sleeve newline print ( acoustic [ play ] ) newline"
"men be sleeping . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = sleeping newline print ( men [ be ] ) newline"
"woman walk next . next walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = woman newline print ( next [ walk ] ) newline"
"boy be spray . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = spray newline print ( boy [ be ] ) newline"
"while use workout . while use ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ use ] = workout newline print ( while [ use ] ) newline"
"man push some . some push ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ push ] = man newline print ( some [ push ] ) newline"
"dog be blindfolded . blindfolded be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( blindfolded [ be ] ) newline"
"woman ride high . high ride ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ ride ] = woman newline print ( high [ ride ] ) newline"
"guy lay face . guy lay ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ lay ] = face newline print ( guy [ lay ] ) newline"
"girl have tribal . tribal have ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ have ] = girl newline print ( tribal [ have ] ) newline"
"jacket hold foreign . foreign hold ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ hold ] = jacket newline print ( foreign [ hold ] ) newline"
"girl wear red . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = red newline print ( girl [ wear ] ) newline"
"boy wear white . white wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = boy newline print ( white [ wear ] ) newline"
"picture take great . great take ?","if entities . find ( picture ) ! = None : newline newtab entities [ picture ] [ take ] = picture newline print ( great [ take ] ) newline"
"cap be rock . cap be ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ be ] = rock newline print ( cap [ be ] ) newline"
"man look man . man look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = man newline print ( man [ look ] ) newline"
"man wear orange . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = orange newline print ( man [ wear ] ) newline"
"woman slip two . woman slip ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ slip ] = two newline print ( woman [ slip ] ) newline"
"man be prominent . prominent be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( prominent [ be ] ) newline"
"player dress all . all dress ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ dress ] = player newline print ( all [ dress ] ) newline"
"food stand alone . alone stand ?","if entities . find ( food ) ! = None : newline newtab entities [ food ] [ stand ] = food newline print ( alone [ stand ] ) newline"
"dog run while . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = while newline print ( dog [ run ] ) newline"
"man be number . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = number newline print ( man [ be ] ) newline"
"booth wear rain . booth wear ?","if entities . find ( booth ) ! = None : newline newtab entities [ booth ] [ wear ] = rain newline print ( booth [ wear ] ) newline"
"car reflect pond . car reflect ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ reflect ] = pond newline print ( car [ reflect ] ) newline"
"jacket look out . out look ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ look ] = jacket newline print ( out [ look ] ) newline"
"girl walk or . girl walk ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ walk ] = or newline print ( girl [ walk ] ) newline"
"people stand next . next stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( next [ stand ] ) newline"
"girl run event . girl run ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ run ] = event newline print ( girl [ run ] ) newline"
"brown be ready . ready be ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ be ] = brown newline print ( ready [ be ] ) newline"
"woman be referee . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = referee newline print ( woman [ be ] ) newline"
"person wear safety . person wear ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ wear ] = safety newline print ( person [ wear ] ) newline"
"child look man . child look ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ look ] = man newline print ( child [ look ] ) newline"
"pajama be swinging . swinging be ?","if entities . find ( pajama ) ! = None : newline newtab entities [ pajama ] [ be ] = pajama newline print ( swinging [ be ] ) newline"
"summer concert white . white concert ?","if entities . find ( summer ) ! = None : newline newtab entities [ summer ] [ concert ] = summer newline print ( white [ concert ] ) newline"
"while push an . while push ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ push ] = an newline print ( while [ push ] ) newline"
"girl have multiple . multiple have ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ have ] = girl newline print ( multiple [ have ] ) newline"
"people sit next . next sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( next [ sit ] ) newline"
"green grass field . green grass ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ grass ] = field newline print ( green [ grass ] ) newline"
"cyclist be sleeping . cyclist be ?","if entities . find ( cyclist ) ! = None : newline newtab entities [ cyclist ] [ be ] = sleeping newline print ( cyclist [ be ] ) newline"
"man sit side . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = side newline print ( man [ sit ] ) newline"
"horse be swinging . swinging be ?","if entities . find ( horse ) ! = None : newline newtab entities [ horse ] [ be ] = horse newline print ( swinging [ be ] ) newline"
"girl vacuum while . girl vacuum ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ vacuum ] = while newline print ( girl [ vacuum ] ) newline"
"man be dirt . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = dirt newline print ( man [ be ] ) newline"
"workman vest usage . workman vest ?","if entities . find ( workman ) ! = None : newline newtab entities [ workman ] [ vest ] = usage newline print ( workman [ vest ] ) newline"
"people be opening . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = opening newline print ( people [ be ] ) newline"
"people pass out . out pass ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ pass ] = people newline print ( out [ pass ] ) newline"
"gray shirt out . out shirt ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ shirt ] = gray newline print ( out [ shirt ] ) newline"
"man be next . next be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( next [ be ] ) newline"
"while be sleeping . while be ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ be ] = sleeping newline print ( while [ be ] ) newline"
"jacket walk hand . jacket walk ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ walk ] = hand newline print ( jacket [ walk ] ) newline"
"red wine while . red wine ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ wine ] = while newline print ( red [ wine ] ) newline"
"woman be group . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = group newline print ( woman [ be ] ) newline"
"people watch while . people watch ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ watch ] = while newline print ( people [ watch ] ) newline"
"girl wear bikini . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = bikini newline print ( girl [ wear ] ) newline"
"people gather paper . people gather ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ gather ] = paper newline print ( people [ gather ] ) newline"
"driver stand next . next stand ?","if entities . find ( driver ) ! = None : newline newtab entities [ driver ] [ stand ] = driver newline print ( next [ stand ] ) newline"
"lady be an . lady be ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ be ] = an newline print ( lady [ be ] ) newline"
"child be both . both be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( both [ be ] ) newline"
"while stand upside . while stand ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ stand ] = upside newline print ( while [ stand ] ) newline"
"green shirt brown . green shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = brown newline print ( green [ shirt ] ) newline"
"microphone stand man . microphone stand ?","if entities . find ( microphone ) ! = None : newline newtab entities [ microphone ] [ stand ] = man newline print ( microphone [ stand ] ) newline"
"boot be three . boot be ?","if entities . find ( boot ) ! = None : newline newtab entities [ boot ] [ be ] = three newline print ( boot [ be ] ) newline"
"he look woman . he look ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ look ] = woman newline print ( he [ look ] ) newline"
"person sit low . low sit ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ sit ] = person newline print ( low [ sit ] ) newline"
"purse be six . purse be ?","if entities . find ( purse ) ! = None : newline newtab entities [ purse ] [ be ] = six newline print ( purse [ be ] ) newline"
"people scramble white . white scramble ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ scramble ] = people newline print ( white [ scramble ] ) newline"
"man shave head . man shave ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ shave ] = head newline print ( man [ shave ] ) newline"
"man hold out . out hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = man newline print ( out [ hold ] ) newline"
"woman wear jacket . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = jacket newline print ( woman [ wear ] ) newline"
"dog run side . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = side newline print ( dog [ run ] ) newline"
"sport shop next . next shop ?","if entities . find ( sport ) ! = None : newline newtab entities [ sport ] [ shop ] = sport newline print ( next [ shop ] ) newline"
"symphony surround one . one surround ?","if entities . find ( symphony ) ! = None : newline newtab entities [ symphony ] [ surround ] = symphony newline print ( one [ surround ] ) newline"
"child bond time . child bond ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ bond ] = time newline print ( child [ bond ] ) newline"
"red shirt wave . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = wave newline print ( red [ shirt ] ) newline"
"cap be child . cap be ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ be ] = child newline print ( cap [ be ] ) newline"
"man fish game . man fish ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ fish ] = game newline print ( man [ fish ] ) newline"
"table drink straight . straight drink ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ drink ] = table newline print ( straight [ drink ] ) newline"
"dog run fast . fast run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( fast [ run ] ) newline"
"men be person . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = person newline print ( men [ be ] ) newline"
"girl hold green . girl hold ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ hold ] = green newline print ( girl [ hold ] ) newline"
"people stand next . next stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( next [ stand ] ) newline"
"men be rock . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = rock newline print ( men [ be ] ) newline"
"tan shirt swinging . swinging shirt ?","if entities . find ( tan ) ! = None : newline newtab entities [ tan ] [ shirt ] = tan newline print ( swinging [ shirt ] ) newline"
"gentleman use binocular . binocular use ?","if entities . find ( gentleman ) ! = None : newline newtab entities [ gentleman ] [ use ] = gentleman newline print ( binocular [ use ] ) newline"
"man come close . close come ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ come ] = man newline print ( close [ come ] ) newline"
"dog be laughing . laughing be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( laughing [ be ] ) newline"
"girl dress out . out dress ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ dress ] = girl newline print ( out [ dress ] ) newline"
"cheerleader be both . both be ?","if entities . find ( cheerleader ) ! = None : newline newtab entities [ cheerleader ] [ be ] = cheerleader newline print ( both [ be ] ) newline"
"girl draw colorful . colorful draw ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ draw ] = girl newline print ( colorful [ draw ] ) newline"
"cloth trade white . white trade ?","if entities . find ( cloth ) ! = None : newline newtab entities [ cloth ] [ trade ] = cloth newline print ( white [ trade ] ) newline"
"men be swinging . swinging be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( swinging [ be ] ) newline"
"waiter wait room . waiter wait ?","if entities . find ( waiter ) ! = None : newline newtab entities [ waiter ] [ wait ] = room newline print ( waiter [ wait ] ) newline"
"moon throw another . another throw ?","if entities . find ( moon ) ! = None : newline newtab entities [ moon ] [ throw ] = moon newline print ( another [ throw ] ) newline"
"man draw while . man draw ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ draw ] = while newline print ( man [ draw ] ) newline"
"biker wear camouflage . biker wear ?","if entities . find ( biker ) ! = None : newline newtab entities [ biker ] [ wear ] = camouflage newline print ( biker [ wear ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"arm raise another . another raise ?","if entities . find ( arm ) ! = None : newline newtab entities [ arm ] [ raise ] = arm newline print ( another [ raise ] ) newline"
"man be opening . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = opening newline print ( man [ be ] ) newline"
"sweater be staring . staring be ?","if entities . find ( sweater ) ! = None : newline newtab entities [ sweater ] [ be ] = sweater newline print ( staring [ be ] ) newline"
"snowboarder be teaching . snowboarder be ?","if entities . find ( snowboarder ) ! = None : newline newtab entities [ snowboarder ] [ be ] = teaching newline print ( snowboarder [ be ] ) newline"
"man be neck . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = neck newline print ( man [ be ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"jeans be older . older be ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ be ] = jeans newline print ( older [ be ] ) newline"
"woman exit sign . woman exit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ exit ] = sign newline print ( woman [ exit ] ) newline"
"worker be sword . worker be ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ be ] = sword newline print ( worker [ be ] ) newline"
"market converse while . market converse ?","if entities . find ( market ) ! = None : newline newtab entities [ market ] [ converse ] = while newline print ( market [ converse ] ) newline"
"men stand next . next stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = men newline print ( next [ stand ] ) newline"
"guy wear scuba . guy wear ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ wear ] = scuba newline print ( guy [ wear ] ) newline"
"man smile underwater . underwater smile ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ smile ] = man newline print ( underwater [ smile ] ) newline"
"man be rock . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = rock newline print ( man [ be ] ) newline"
"boy mingle two . boy mingle ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ mingle ] = two newline print ( boy [ mingle ] ) newline"
"man be fun . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = fun newline print ( man [ be ] ) newline"
"helmet ride public . public ride ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ ride ] = helmet newline print ( public [ ride ] ) newline"
"adult be several . several be ?","if entities . find ( adult ) ! = None : newline newtab entities [ adult ] [ be ] = adult newline print ( several [ be ] ) newline"
"jeans draw picture . jeans draw ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ draw ] = picture newline print ( jeans [ draw ] ) newline"
"girl be ready . ready be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( ready [ be ] ) newline"
"couple enjoy sucker . couple enjoy ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ enjoy ] = sucker newline print ( couple [ enjoy ] ) newline"
"girl be turing . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = turing newline print ( girl [ be ] ) newline"
"sand be two . sand be ?","if entities . find ( sand ) ! = None : newline newtab entities [ sand ] [ be ] = two newline print ( sand [ be ] ) newline"
"it fetch water . it fetch ?","if entities . find ( it ) ! = None : newline newtab entities [ it ] [ fetch ] = water newline print ( it [ fetch ] ) newline"
"bikini throw confetti . bikini throw ?","if entities . find ( bikini ) ! = None : newline newtab entities [ bikini ] [ throw ] = confetti newline print ( bikini [ throw ] ) newline"
"end be asleep . asleep be ?","if entities . find ( end ) ! = None : newline newtab entities [ end ] [ be ] = end newline print ( asleep [ be ] ) newline"
"person stand or . person stand ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ stand ] = or newline print ( person [ stand ] ) newline"
"child run man . child run ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ run ] = man newline print ( child [ run ] ) newline"
"woman visit some . some visit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ visit ] = woman newline print ( some [ visit ] ) newline"
"bicyclist ride bike . bicyclist ride ?","if entities . find ( bicyclist ) ! = None : newline newtab entities [ bicyclist ] [ ride ] = bike newline print ( bicyclist [ ride ] ) newline"
"doll sit next . next sit ?","if entities . find ( doll ) ! = None : newline newtab entities [ doll ] [ sit ] = doll newline print ( next [ sit ] ) newline"
"jacket look out . out look ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ look ] = jacket newline print ( out [ look ] ) newline"
"woman talk next . next talk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ talk ] = woman newline print ( next [ talk ] ) newline"
"woman hold an . woman hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = an newline print ( woman [ hold ] ) newline"
"dog be ballet . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = ballet newline print ( dog [ be ] ) newline"
"window look out . out look ?","if entities . find ( window ) ! = None : newline newtab entities [ window ] [ look ] = window newline print ( out [ look ] ) newline"
"man conduct white . white conduct ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ conduct ] = man newline print ( white [ conduct ] ) newline"
"girl be out . out be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( out [ be ] ) newline"
"who be an . who be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = an newline print ( who [ be ] ) newline"
"boy wear an . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = an newline print ( boy [ wear ] ) newline"
"woman crouch next . next crouch ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ crouch ] = woman newline print ( next [ crouch ] ) newline"
"red lipstick white . white lipstick ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ lipstick ] = red newline print ( white [ lipstick ] ) newline"
"orange color striped . striped color ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ color ] = orange newline print ( striped [ color ] ) newline"
"man lean tower . man lean ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ lean ] = tower newline print ( man [ lean ] ) newline"
"horse be sleeping . horse be ?","if entities . find ( horse ) ! = None : newline newtab entities [ horse ] [ be ] = sleeping newline print ( horse [ be ] ) newline"
"boat sail competition . boat sail ?","if entities . find ( boat ) ! = None : newline newtab entities [ boat ] [ sail ] = competition newline print ( boat [ sail ] ) newline"
"child be an . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = an newline print ( child [ be ] ) newline"
"woman pose next . next pose ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ pose ] = woman newline print ( next [ pose ] ) newline"
"red shirt swinging . swinging shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( swinging [ shirt ] ) newline"
"team wait next . next wait ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ wait ] = team newline print ( next [ wait ] ) newline"
"man have it . man have ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ have ] = it newline print ( man [ have ] ) newline"
"man wear white . white wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( white [ wear ] ) newline"
"man carry soap . man carry ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ carry ] = soap newline print ( man [ carry ] ) newline"
"person be busy . busy be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = person newline print ( busy [ be ] ) newline"
"while participate two . while participate ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ participate ] = two newline print ( while [ participate ] ) newline"
"woman compete cyclist . woman compete ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ compete ] = cyclist newline print ( woman [ compete ] ) newline"
"cafe eat delicious . delicious eat ?","if entities . find ( cafe ) ! = None : newline newtab entities [ cafe ] [ eat ] = cafe newline print ( delicious [ eat ] ) newline"
"table eat some . some eat ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ eat ] = table newline print ( some [ eat ] ) newline"
"ice wait next . next wait ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ wait ] = ice newline print ( next [ wait ] ) newline"
"while stand center . while stand ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ stand ] = center newline print ( while [ stand ] ) newline"
"jeans be one . one be ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ be ] = jeans newline print ( one [ be ] ) newline"
"red coat white . white coat ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ coat ] = red newline print ( white [ coat ] ) newline"
"red reach arm . red reach ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ reach ] = arm newline print ( red [ reach ] ) newline"
"dog be out . out be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( out [ be ] ) newline"
"men work hard . hard work ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ work ] = men newline print ( hard [ work ] ) newline"
"men be belongings . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = belongings newline print ( men [ be ] ) newline"
"car bear white . white bear ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ bear ] = car newline print ( white [ bear ] ) newline"
"jacket play various . various play ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ play ] = jacket newline print ( various [ play ] ) newline"
"campsite have bright . bright have ?","if entities . find ( campsite ) ! = None : newline newtab entities [ campsite ] [ have ] = campsite newline print ( bright [ have ] ) newline"
"girl walk belt . girl walk ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ walk ] = belt newline print ( girl [ walk ] ) newline"
"he walk while . he walk ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ walk ] = while newline print ( he [ walk ] ) newline"
"jacket smile next . next smile ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ smile ] = jacket newline print ( next [ smile ] ) newline"
"boy be out . out be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( out [ be ] ) newline"
"while read next . next read ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ read ] = while newline print ( next [ read ] ) newline"
"office wave small . small wave ?","if entities . find ( office ) ! = None : newline newtab entities [ office ] [ wave ] = office newline print ( small [ wave ] ) newline"
"he open it . he open ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ open ] = it newline print ( he [ open ] ) newline"
"man be waist . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = waist newline print ( man [ be ] ) newline"
"men practice trick . men practice ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ practice ] = trick newline print ( men [ practice ] ) newline"
"dog run out . out run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( out [ run ] ) newline"
"people cross guard . people cross ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ cross ] = guard newline print ( people [ cross ] ) newline"
"kid wear stilt . kid wear ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ wear ] = stilt newline print ( kid [ wear ] ) newline"
"bag be sleeping . bag be ?","if entities . find ( bag ) ! = None : newline newtab entities [ bag ] [ be ] = sleeping newline print ( bag [ be ] ) newline"
"boy examine sheet . boy examine ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ examine ] = sheet newline print ( boy [ examine ] ) newline"
"man be teaching . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = teaching newline print ( man [ be ] ) newline"
"dog be opening . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = opening newline print ( dog [ be ] ) newline"
"construction work space . construction work ?","if entities . find ( construction ) ! = None : newline newtab entities [ construction ] [ work ] = space newline print ( construction [ work ] ) newline"
"red cross necklace . red cross ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ cross ] = necklace newline print ( red [ cross ] ) newline"
"people walk guard . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = guard newline print ( people [ walk ] ) newline"
"ladder be sleeping . ladder be ?","if entities . find ( ladder ) ! = None : newline newtab entities [ ladder ] [ be ] = sleeping newline print ( ladder [ be ] ) newline"
"basketball move some . some move ?","if entities . find ( basketball ) ! = None : newline newtab entities [ basketball ] [ move ] = basketball newline print ( some [ move ] ) newline"
"dog chase water . dog chase ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ chase ] = water newline print ( dog [ chase ] ) newline"
"man sit or . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = or newline print ( man [ sit ] ) newline"
"top ride high . high ride ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ ride ] = top newline print ( high [ ride ] ) newline"
"woman sing while . woman sing ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sing ] = while newline print ( woman [ sing ] ) newline"
"three muzzle white . white muzzle ?","if entities . find ( three ) ! = None : newline newtab entities [ three ] [ muzzle ] = three newline print ( white [ muzzle ] ) newline"
"woman miss one . one miss ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ miss ] = woman newline print ( one [ miss ] ) newline"
"red shirt dance . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = dance newline print ( red [ shirt ] ) newline"
"guy look out . out look ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ look ] = guy newline print ( out [ look ] ) newline"
"someone be many . many be ?","if entities . find ( someone ) ! = None : newline newtab entities [ someone ] [ be ] = someone newline print ( many [ be ] ) newline"
"jeans short use . jeans short ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ short ] = use newline print ( jeans [ short ] ) newline"
"jeans be upside . jeans be ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ be ] = upside newline print ( jeans [ be ] ) newline"
"red harness two . red harness ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ harness ] = two newline print ( red [ harness ] ) newline"
"green swing while . green swing ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ swing ] = while newline print ( green [ swing ] ) newline"
"worker lean out . out lean ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ lean ] = worker newline print ( out [ lean ] ) newline"
"men be waist . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = waist newline print ( men [ be ] ) newline"
"car screech white . white screech ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ screech ] = car newline print ( white [ screech ] ) newline"
"boy carry several . several carry ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ carry ] = boy newline print ( several [ carry ] ) newline"
"player slide white . white slide ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ slide ] = player newline print ( white [ slide ] ) newline"
"woman be swinging . swinging be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( swinging [ be ] ) newline"
"helmet ride john . helmet ride ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ ride ] = john newline print ( helmet [ ride ] ) newline"
"toy resemble two . toy resemble ?","if entities . find ( toy ) ! = None : newline newtab entities [ toy ] [ resemble ] = two newline print ( toy [ resemble ] ) newline"
"people wear some . some wear ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ wear ] = people newline print ( some [ wear ] ) newline"
"woman assemble two . woman assemble ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ assemble ] = two newline print ( woman [ assemble ] ) newline"
"hose extend ladder . hose extend ?","if entities . find ( hose ) ! = None : newline newtab entities [ hose ] [ extend ] = ladder newline print ( hose [ extend ] ) newline"
"cloth trade white . white trade ?","if entities . find ( cloth ) ! = None : newline newtab entities [ cloth ] [ trade ] = cloth newline print ( white [ trade ] ) newline"
"people be metalworking . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = metalworking newline print ( people [ be ] ) newline"
"airplane fly disk . airplane fly ?","if entities . find ( airplane ) ! = None : newline newtab entities [ airplane ] [ fly ] = disk newline print ( airplane [ fly ] ) newline"
"orange shirt hard . hard shirt ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ shirt ] = orange newline print ( hard [ shirt ] ) newline"
"men be several . several be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( several [ be ] ) newline"
"while wear yellow . yellow wear ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ wear ] = while newline print ( yellow [ wear ] ) newline"
"snowboarder fly out . out fly ?","if entities . find ( snowboarder ) ! = None : newline newtab entities [ snowboarder ] [ fly ] = snowboarder newline print ( out [ fly ] ) newline"
"woman jump midair . woman jump ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ jump ] = midair newline print ( woman [ jump ] ) newline"
"men play musical . musical play ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ play ] = men newline print ( musical [ play ] ) newline"
"child dress elderly . elderly dress ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ dress ] = child newline print ( elderly [ dress ] ) newline"
"plaid short both . both short ?","if entities . find ( plaid ) ! = None : newline newtab entities [ plaid ] [ short ] = plaid newline print ( both [ short ] ) newline"
"pencil skirt all . all skirt ?","if entities . find ( pencil ) ! = None : newline newtab entities [ pencil ] [ skirt ] = pencil newline print ( all [ skirt ] ) newline"
"child wear blue . blue wear ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wear ] = child newline print ( blue [ wear ] ) newline"
"sand sculpture while . sand sculpture ?","if entities . find ( sand ) ! = None : newline newtab entities [ sand ] [ sculpture ] = while newline print ( sand [ sculpture ] ) newline"
"bike be many . many be ?","if entities . find ( bike ) ! = None : newline newtab entities [ bike ] [ be ] = bike newline print ( many [ be ] ) newline"
"hand walk while . hand walk ?","if entities . find ( hand ) ! = None : newline newtab entities [ hand ] [ walk ] = while newline print ( hand [ walk ] ) newline"
"man wear blue . blue wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( blue [ wear ] ) newline"
"butcher shop mall . butcher shop ?","if entities . find ( butcher ) ! = None : newline newtab entities [ butcher ] [ shop ] = mall newline print ( butcher [ shop ] ) newline"
"woman play soccer . woman play ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ play ] = soccer newline print ( woman [ play ] ) newline"
"people sit man . people sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = man newline print ( people [ sit ] ) newline"
"tattoo be sleeping . tattoo be ?","if entities . find ( tattoo ) ! = None : newline newtab entities [ tattoo ] [ be ] = sleeping newline print ( tattoo [ be ] ) newline"
"woman get air . woman get ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ get ] = air newline print ( woman [ get ] ) newline"
"top hat who . top hat ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ hat ] = who newline print ( top [ hat ] ) newline"
"people appear white . white appear ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ appear ] = people newline print ( white [ appear ] ) newline"
"safety goggle white . white goggle ?","if entities . find ( safety ) ! = None : newline newtab entities [ safety ] [ goggle ] = safety newline print ( white [ goggle ] ) newline"
"people get it . people get ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ get ] = it newline print ( people [ get ] ) newline"
"man perform some . some perform ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ perform ] = man newline print ( some [ perform ] ) newline"
"men be airborne . airborne be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( airborne [ be ] ) newline"
"man wear jersey . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = jersey newline print ( man [ wear ] ) newline"
"boy try two . boy try ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ try ] = two newline print ( boy [ try ] ) newline"
"woman hold two . woman hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = two newline print ( woman [ hold ] ) newline"
"man play some . some play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = man newline print ( some [ play ] ) newline"
"brown shirt swinging . swinging shirt ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ shirt ] = brown newline print ( swinging [ shirt ] ) newline"
"sun shine two . sun shine ?","if entities . find ( sun ) ! = None : newline newtab entities [ sun ] [ shine ] = two newline print ( sun [ shine ] ) newline"
"sweatshirt be out . out be ?","if entities . find ( sweatshirt ) ! = None : newline newtab entities [ sweatshirt ] [ be ] = sweatshirt newline print ( out [ be ] ) newline"
"people be kid . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = kid newline print ( people [ be ] ) newline"
"red be swinging . swinging be ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ be ] = red newline print ( swinging [ be ] ) newline"
"people engage two . people engage ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ engage ] = two newline print ( people [ engage ] ) newline"
"park watch people . park watch ?","if entities . find ( park ) ! = None : newline newtab entities [ park ] [ watch ] = people newline print ( park [ watch ] ) newline"
"people sit net . people sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = net newline print ( people [ sit ] ) newline"
"pad be likely . likely be ?","if entities . find ( pad ) ! = None : newline newtab entities [ pad ] [ be ] = pad newline print ( likely [ be ] ) newline"
"player take picture . player take ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ take ] = picture newline print ( player [ take ] ) newline"
"who be both . both be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( both [ be ] ) newline"
"bike overlook scenic . scenic overlook ?","if entities . find ( bike ) ! = None : newline newtab entities [ bike ] [ overlook ] = bike newline print ( scenic [ overlook ] ) newline"
"boy jump while . boy jump ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ jump ] = while newline print ( boy [ jump ] ) newline"
"woman be ready . ready be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( ready [ be ] ) newline"
"girl be sleeping . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = sleeping newline print ( girl [ be ] ) newline"
"hospital be three . hospital be ?","if entities . find ( hospital ) ! = None : newline newtab entities [ hospital ] [ be ] = three newline print ( hospital [ be ] ) newline"
"brown shirt pet . brown shirt ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ shirt ] = pet newline print ( brown [ shirt ] ) newline"
"while hold an . while hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = an newline print ( while [ hold ] ) newline"
"band perform martial . martial perform ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ perform ] = band newline print ( martial [ perform ] ) newline"
"orange shirt swinging . swinging shirt ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ shirt ] = orange newline print ( swinging [ shirt ] ) newline"
"equipment plug white . white plug ?","if entities . find ( equipment ) ! = None : newline newtab entities [ equipment ] [ plug ] = equipment newline print ( white [ plug ] ) newline"
"woman be several . several be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( several [ be ] ) newline"
"man try some . some try ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ try ] = man newline print ( some [ try ] ) newline"
"baseball hat out . out hat ?","if entities . find ( baseball ) ! = None : newline newtab entities [ baseball ] [ hat ] = baseball newline print ( out [ hat ] ) newline"
"red be four . red be ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ be ] = four newline print ( red [ be ] ) newline"
"person lay next . next lay ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ lay ] = person newline print ( next [ lay ] ) newline"
"muzzle swim pool . muzzle swim ?","if entities . find ( muzzle ) ! = None : newline newtab entities [ muzzle ] [ swim ] = pool newline print ( muzzle [ swim ] ) newline"
"guy wear jacket . guy wear ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ wear ] = jacket newline print ( guy [ wear ] ) newline"
"man be parasailing . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = parasailing newline print ( man [ be ] ) newline"
"costume be an . costume be ?","if entities . find ( costume ) ! = None : newline newtab entities [ costume ] [ be ] = an newline print ( costume [ be ] ) newline"
"people be people . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( people [ be ] ) newline"
"male talk next . next talk ?","if entities . find ( male ) ! = None : newline newtab entities [ male ] [ talk ] = male newline print ( next [ talk ] ) newline"
"man be an . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = an newline print ( man [ be ] ) newline"
"cubicle use an . cubicle use ?","if entities . find ( cubicle ) ! = None : newline newtab entities [ cubicle ] [ use ] = an newline print ( cubicle [ use ] ) newline"
"men play basketball . men play ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ play ] = basketball newline print ( men [ play ] ) newline"
"green shirt swinging . swinging shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = green newline print ( swinging [ shirt ] ) newline"
"subway tunnel while . subway tunnel ?","if entities . find ( subway ) ! = None : newline newtab entities [ subway ] [ tunnel ] = while newline print ( subway [ tunnel ] ) newline"
"child be rock . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = rock newline print ( child [ be ] ) newline"
"bus stop next . next stop ?","if entities . find ( bus ) ! = None : newline newtab entities [ bus ] [ stop ] = bus newline print ( next [ stop ] ) newline"
"child lay upside . child lay ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ lay ] = upside newline print ( child [ lay ] ) newline"
"competition wear white . white wear ?","if entities . find ( competition ) ! = None : newline newtab entities [ competition ] [ wear ] = competition newline print ( white [ wear ] ) newline"
"child sit next . next sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = child newline print ( next [ sit ] ) newline"
"people hold tongs . people hold ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ hold ] = tongs newline print ( people [ hold ] ) newline"
"day shovel deep . deep shovel ?","if entities . find ( day ) ! = None : newline newtab entities [ day ] [ shovel ] = day newline print ( deep [ shovel ] ) newline"
"oak tree white . white tree ?","if entities . find ( oak ) ! = None : newline newtab entities [ oak ] [ tree ] = oak newline print ( white [ tree ] ) newline"
"exercise pose while . exercise pose ?","if entities . find ( exercise ) ! = None : newline newtab entities [ exercise ] [ pose ] = while newline print ( exercise [ pose ] ) newline"
"patron enjoy beer . patron enjoy ?","if entities . find ( patron ) ! = None : newline newtab entities [ patron ] [ enjoy ] = beer newline print ( patron [ enjoy ] ) newline"
"men present various . various present ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ present ] = men newline print ( various [ present ] ) newline"
"people pose next . next pose ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ pose ] = people newline print ( next [ pose ] ) newline"
"three burn mess . three burn ?","if entities . find ( three ) ! = None : newline newtab entities [ three ] [ burn ] = mess newline print ( three [ burn ] ) newline"
"group look pretty . pretty look ?","if entities . find ( group ) ! = None : newline newtab entities [ group ] [ look ] = group newline print ( pretty [ look ] ) newline"
"man wear headphone . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = headphone newline print ( man [ wear ] ) newline"
"woman wear camouflage . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = camouflage newline print ( woman [ wear ] ) newline"
"boy be two . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = two newline print ( boy [ be ] ) newline"
"red shirt guide . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = guide newline print ( red [ shirt ] ) newline"
"girl stand alone . alone stand ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ stand ] = girl newline print ( alone [ stand ] ) newline"
"child stand applause . child stand ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ stand ] = applause newline print ( child [ stand ] ) newline"
"purse walk while . purse walk ?","if entities . find ( purse ) ! = None : newline newtab entities [ purse ] [ walk ] = while newline print ( purse [ walk ] ) newline"
"friend be sleeping . friend be ?","if entities . find ( friend ) ! = None : newline newtab entities [ friend ] [ be ] = sleeping newline print ( friend [ be ] ) newline"
"woman wear sunglasses . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = sunglasses newline print ( woman [ wear ] ) newline"
"gear use plastic . plastic use ?","if entities . find ( gear ) ! = None : newline newtab entities [ gear ] [ use ] = gear newline print ( plastic [ use ] ) newline"
"kid dive foot . kid dive ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ dive ] = foot newline print ( kid [ dive ] ) newline"
"top be girl . top be ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ be ] = girl newline print ( top [ be ] ) newline"
"woman wear yellow . yellow wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( yellow [ wear ] ) newline"
"top look young . top look ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ look ] = young newline print ( top [ look ] ) newline"
"biker be two . biker be ?","if entities . find ( biker ) ! = None : newline newtab entities [ biker ] [ be ] = two newline print ( biker [ be ] ) newline"
"man make food . man make ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ make ] = food newline print ( man [ make ] ) newline"
"hair be spray . hair be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = spray newline print ( hair [ be ] ) newline"
"man wear white . white wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( white [ wear ] ) newline"
"man wear black . black wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( black [ wear ] ) newline"
"woman stand patrol . woman stand ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ stand ] = patrol newline print ( woman [ stand ] ) newline"
"man hold some . some hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = man newline print ( some [ hold ] ) newline"
"he be staring . staring be ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ be ] = he newline print ( staring [ be ] ) newline"
"girl have tribal . tribal have ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ have ] = girl newline print ( tribal [ have ] ) newline"
"boy bust white . white bust ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ bust ] = boy newline print ( white [ bust ] ) newline"
"toddler be extreme . extreme be ?","if entities . find ( toddler ) ! = None : newline newtab entities [ toddler ] [ be ] = toddler newline print ( extreme [ be ] ) newline"
"while record studio . while record ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ record ] = studio newline print ( while [ record ] ) newline"
"people stand camera . people stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = camera newline print ( people [ stand ] ) newline"
"sunglasses be belongings . sunglasses be ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ be ] = belongings newline print ( sunglasses [ be ] ) newline"
"pool shoot basket . pool shoot ?","if entities . find ( pool ) ! = None : newline newtab entities [ pool ] [ shoot ] = basket newline print ( pool [ shoot ] ) newline"
"arm be one . one be ?","if entities . find ( arm ) ! = None : newline newtab entities [ arm ] [ be ] = arm newline print ( one [ be ] ) newline"
"red shirt swinging . swinging shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( swinging [ shirt ] ) newline"
"painting hang rug . painting hang ?","if entities . find ( painting ) ! = None : newline newtab entities [ painting ] [ hang ] = rug newline print ( painting [ hang ] ) newline"
"child wear orange . child wear ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wear ] = orange newline print ( child [ wear ] ) newline"
"while wear black . black wear ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ wear ] = while newline print ( black [ wear ] ) newline"
"flag be sleeping . flag be ?","if entities . find ( flag ) ! = None : newline newtab entities [ flag ] [ be ] = sleeping newline print ( flag [ be ] ) newline"
"corp fort lewis . corp fort ?","if entities . find ( corp ) ! = None : newline newtab entities [ corp ] [ fort ] = lewis newline print ( corp [ fort ] ) newline"
"table drink another . another drink ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ drink ] = table newline print ( another [ drink ] ) newline"
"child write while . child write ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ write ] = while newline print ( child [ write ] ) newline"
"chicken suspend painter . chicken suspend ?","if entities . find ( chicken ) ! = None : newline newtab entities [ chicken ] [ suspend ] = painter newline print ( chicken [ suspend ] ) newline"
"people participate two . people participate ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ participate ] = two newline print ( people [ participate ] ) newline"
"fancy dress young . fancy dress ?","if entities . find ( fancy ) ! = None : newline newtab entities [ fancy ] [ dress ] = young newline print ( fancy [ dress ] ) newline"
"men be many . many be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( many [ be ] ) newline"
"boy jump out . out jump ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ jump ] = boy newline print ( out [ jump ] ) newline"
"dog wear sandal . dog wear ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ wear ] = sandal newline print ( dog [ wear ] ) newline"
"people sit guy . people sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = guy newline print ( people [ sit ] ) newline"
"nan jump high . high jump ?","if entities . find ( nan ) ! = None : newline newtab entities [ nan ] [ jump ] = nan newline print ( high [ jump ] ) newline"
"flower shop bag . flower shop ?","if entities . find ( flower ) ! = None : newline newtab entities [ flower ] [ shop ] = bag newline print ( flower [ shop ] ) newline"
"rabbit stare out . out stare ?","if entities . find ( rabbit ) ! = None : newline newtab entities [ rabbit ] [ stare ] = rabbit newline print ( out [ stare ] ) newline"
"people sit next . next sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( next [ sit ] ) newline"
"people be arm . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = arm newline print ( people [ be ] ) newline"
"tan pant black . black pant ?","if entities . find ( tan ) ! = None : newline newtab entities [ tan ] [ pant ] = tan newline print ( black [ pant ] ) newline"
"bikini pose while . bikini pose ?","if entities . find ( bikini ) ! = None : newline newtab entities [ bikini ] [ pose ] = while newline print ( bikini [ pose ] ) newline"
"girl reach an . girl reach ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ reach ] = an newline print ( girl [ reach ] ) newline"
"dog run while . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = while newline print ( dog [ run ] ) newline"
"man wear jeans . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = jeans newline print ( man [ wear ] ) newline"
"suit be featured . featured be ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ be ] = suit newline print ( featured [ be ] ) newline"
"man be high . high be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( high [ be ] ) newline"
"observer watch people . observer watch ?","if entities . find ( observer ) ! = None : newline newtab entities [ observer ] [ watch ] = people newline print ( observer [ watch ] ) newline"
"ocean wash dirty . dirty wash ?","if entities . find ( ocean ) ! = None : newline newtab entities [ ocean ] [ wash ] = ocean newline print ( dirty [ wash ] ) newline"
"while hike gear . while hike ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hike ] = gear newline print ( while [ hike ] ) newline"
"child be several . several be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( several [ be ] ) newline"
"men stand market . men stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = market newline print ( men [ stand ] ) newline"
"man climb out . out climb ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ climb ] = man newline print ( out [ climb ] ) newline"
"person be still . still be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = person newline print ( still [ be ] ) newline"
"band play monopoly . band play ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ play ] = monopoly newline print ( band [ play ] ) newline"
"player be swinging . swinging be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = player newline print ( swinging [ be ] ) newline"
"business attire swinging . swinging attire ?","if entities . find ( business ) ! = None : newline newtab entities [ business ] [ attire ] = business newline print ( swinging [ attire ] ) newline"
"man be beer . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = beer newline print ( man [ be ] ) newline"
"man wear blue . blue wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( blue [ wear ] ) newline"
"book be purple . purple be ?","if entities . find ( book ) ! = None : newline newtab entities [ book ] [ be ] = book newline print ( purple [ be ] ) newline"
"men be pole . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = pole newline print ( men [ be ] ) newline"
"band be some . some be ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ be ] = band newline print ( some [ be ] ) newline"
"member jump competition . member jump ?","if entities . find ( member ) ! = None : newline newtab entities [ member ] [ jump ] = competition newline print ( member [ jump ] ) newline"
"person take great . great take ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ take ] = person newline print ( great [ take ] ) newline"
"people be dirt . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = dirt newline print ( people [ be ] ) newline"
"suspender be sword . suspender be ?","if entities . find ( suspender ) ! = None : newline newtab entities [ suspender ] [ be ] = sword newline print ( suspender [ be ] ) newline"
"puppy snuggle white . white snuggle ?","if entities . find ( puppy ) ! = None : newline newtab entities [ puppy ] [ snuggle ] = puppy newline print ( white [ snuggle ] ) newline"
"helmet be way . helmet be ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ be ] = way newline print ( helmet [ be ] ) newline"
"woman talk next . next talk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ talk ] = woman newline print ( next [ talk ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"green pant or . green pant ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ pant ] = or newline print ( green [ pant ] ) newline"
"dog run dog . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( dog [ run ] ) newline"
"football fan out . out fan ?","if entities . find ( football ) ! = None : newline newtab entities [ football ] [ fan ] = football newline print ( out [ fan ] ) newline"
"couple cut another . another cut ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ cut ] = couple newline print ( another [ cut ] ) newline"
"man check green . man check ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ check ] = green newline print ( man [ check ] ) newline"
"man lean dog . man lean ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ lean ] = dog newline print ( man [ lean ] ) newline"
"chef prepare some . some prepare ?","if entities . find ( chef ) ! = None : newline newtab entities [ chef ] [ prepare ] = chef newline print ( some [ prepare ] ) newline"
"woman wear hard . hard wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( hard [ wear ] ) newline"
"man be four . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = four newline print ( man [ be ] ) newline"
"player catch an . player catch ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ catch ] = an newline print ( player [ catch ] ) newline"
"men play guitar . men play ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ play ] = guitar newline print ( men [ play ] ) newline"
"man inspect sausage . man inspect ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ inspect ] = sausage newline print ( man [ inspect ] ) newline"
"carriage stroll white . white stroll ?","if entities . find ( carriage ) ! = None : newline newtab entities [ carriage ] [ stroll ] = carriage newline print ( white [ stroll ] ) newline"
"dog jump high . high jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = dog newline print ( high [ jump ] ) newline"
"woman run out . out run ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ run ] = woman newline print ( out [ run ] ) newline"
"seaweed sit alone . alone sit ?","if entities . find ( seaweed ) ! = None : newline newtab entities [ seaweed ] [ sit ] = seaweed newline print ( alone [ sit ] ) newline"
"woman wear black . black wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( black [ wear ] ) newline"
"baby be creative . creative be ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ be ] = baby newline print ( creative [ be ] ) newline"
"woman be sorting . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sorting newline print ( woman [ be ] ) newline"
"fisherman be laughing . laughing be ?","if entities . find ( fisherman ) ! = None : newline newtab entities [ fisherman ] [ be ] = fisherman newline print ( laughing [ be ] ) newline"
"beard walk while . beard walk ?","if entities . find ( beard ) ! = None : newline newtab entities [ beard ] [ walk ] = while newline print ( beard [ walk ] ) newline"
"player prepare various . various prepare ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ prepare ] = player newline print ( various [ prepare ] ) newline"
"table file room . table file ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ file ] = room newline print ( table [ file ] ) newline"
"rider be people . rider be ?","if entities . find ( rider ) ! = None : newline newtab entities [ rider ] [ be ] = people newline print ( rider [ be ] ) newline"
"dog show camaraderie . dog show ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ show ] = camaraderie newline print ( dog [ show ] ) newline"
"child play guitar . child play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = guitar newline print ( child [ play ] ) newline"
"man stand market . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = market newline print ( man [ stand ] ) newline"
"helmet stand face . helmet stand ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ stand ] = face newline print ( helmet [ stand ] ) newline"
"green motorcycle rider . green motorcycle ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ motorcycle ] = rider newline print ( green [ motorcycle ] ) newline"
"protester be people . protester be ?","if entities . find ( protester ) ! = None : newline newtab entities [ protester ] [ be ] = people newline print ( protester [ be ] ) newline"
"men play field . men play ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ play ] = field newline print ( men [ play ] ) newline"
"man watch people . man watch ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ watch ] = people newline print ( man [ watch ] ) newline"
"pestle grind white . white grind ?","if entities . find ( pestle ) ! = None : newline newtab entities [ pestle ] [ grind ] = pestle newline print ( white [ grind ] ) newline"
"team look while . team look ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ look ] = while newline print ( team [ look ] ) newline"
"helmet play acoustic . acoustic play ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ play ] = helmet newline print ( acoustic [ play ] ) newline"
"red shirt clean . clean shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( clean [ shirt ] ) newline"
"green shirt uniform . uniform shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = green newline print ( uniform [ shirt ] ) newline"
"instrument be rock . instrument be ?","if entities . find ( instrument ) ! = None : newline newtab entities [ instrument ] [ be ] = rock newline print ( instrument [ be ] ) newline"
"apron look guy . apron look ?","if entities . find ( apron ) ! = None : newline newtab entities [ apron ] [ look ] = guy newline print ( apron [ look ] ) newline"
"athlete wear white . white wear ?","if entities . find ( athlete ) ! = None : newline newtab entities [ athlete ] [ wear ] = athlete newline print ( white [ wear ] ) newline"
"man dress man . man dress ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ dress ] = man newline print ( man [ dress ] ) newline"
"baseball bat tee . baseball bat ?","if entities . find ( baseball ) ! = None : newline newtab entities [ baseball ] [ bat ] = tee newline print ( baseball [ bat ] ) newline"
"an invert two . an invert ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ invert ] = two newline print ( an [ invert ] ) newline"
"red shirt while . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = while newline print ( red [ shirt ] ) newline"
"team play next . next play ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ play ] = team newline print ( next [ play ] ) newline"
"red bicycle next . next bicycle ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ bicycle ] = red newline print ( next [ bicycle ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"boot be sleeping . boot be ?","if entities . find ( boot ) ! = None : newline newtab entities [ boot ] [ be ] = sleeping newline print ( boot [ be ] ) newline"
"goatee lean tower . goatee lean ?","if entities . find ( goatee ) ! = None : newline newtab entities [ goatee ] [ lean ] = tower newline print ( goatee [ lean ] ) newline"
"man dress all . all dress ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ dress ] = man newline print ( all [ dress ] ) newline"
"young nurse bra . young nurse ?","if entities . find ( young ) ! = None : newline newtab entities [ young ] [ nurse ] = bra newline print ( young [ nurse ] ) newline"
"friend walk bike . friend walk ?","if entities . find ( friend ) ! = None : newline newtab entities [ friend ] [ walk ] = bike newline print ( friend [ walk ] ) newline"
"child play cricket . child play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = cricket newline print ( child [ play ] ) newline"
"skateboarder be next . next be ?","if entities . find ( skateboarder ) ! = None : newline newtab entities [ skateboarder ] [ be ] = skateboarder newline print ( next [ be ] ) newline"
"turban look out . out look ?","if entities . find ( turban ) ! = None : newline newtab entities [ turban ] [ look ] = turban newline print ( out [ look ] ) newline"
"man be visible . visible be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( visible [ be ] ) newline"
"boy be four . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = four newline print ( boy [ be ] ) newline"
"jacket be writer . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = writer newline print ( jacket [ be ] ) newline"
"synthesizer wear an . synthesizer wear ?","if entities . find ( synthesizer ) ! = None : newline newtab entities [ synthesizer ] [ wear ] = an newline print ( synthesizer [ wear ] ) newline"
"gymnast do some . some do ?","if entities . find ( gymnast ) ! = None : newline newtab entities [ gymnast ] [ do ] = gymnast newline print ( some [ do ] ) newline"
"girl sit while . girl sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = while newline print ( girl [ sit ] ) newline"
"he look green . he look ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ look ] = green newline print ( he [ look ] ) newline"
"jacket walk alone . alone walk ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ walk ] = jacket newline print ( alone [ walk ] ) newline"
"woman wear sleeveless . sleeveless wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( sleeveless [ wear ] ) newline"
"orange coat white . white coat ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ coat ] = orange newline print ( white [ coat ] ) newline"
"woman be happy . happy be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( happy [ be ] ) newline"
"while look area . while look ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ look ] = area newline print ( while [ look ] ) newline"
"worker be opening . worker be ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ be ] = opening newline print ( worker [ be ] ) newline"
"customer shop bag . customer shop ?","if entities . find ( customer ) ! = None : newline newtab entities [ customer ] [ shop ] = bag newline print ( customer [ shop ] ) newline"
"costume walk alone . alone walk ?","if entities . find ( costume ) ! = None : newline newtab entities [ costume ] [ walk ] = costume newline print ( alone [ walk ] ) newline"
"jacket stand knee . jacket stand ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ stand ] = knee newline print ( jacket [ stand ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"sunglasses smile big . big smile ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ smile ] = sunglasses newline print ( big [ smile ] ) newline"
"mound throw another . another throw ?","if entities . find ( mound ) ! = None : newline newtab entities [ mound ] [ throw ] = mound newline print ( another [ throw ] ) newline"
"hammock read next . next read ?","if entities . find ( hammock ) ! = None : newline newtab entities [ hammock ] [ read ] = hammock newline print ( next [ read ] ) newline"
"musician hold high . high hold ?","if entities . find ( musician ) ! = None : newline newtab entities [ musician ] [ hold ] = musician newline print ( high [ hold ] ) newline"
"clown ride public . public ride ?","if entities . find ( clown ) ! = None : newline newtab entities [ clown ] [ ride ] = clown newline print ( public [ ride ] ) newline"
"dog be raining . raining be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( raining [ be ] ) newline"
"people train track . people train ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ train ] = track newline print ( people [ train ] ) newline"
"dog be visible . visible be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( visible [ be ] ) newline"
"gold color striped . striped color ?","if entities . find ( gold ) ! = None : newline newtab entities [ gold ] [ color ] = gold newline print ( striped [ color ] ) newline"
"candle dress all . all dress ?","if entities . find ( candle ) ! = None : newline newtab entities [ candle ] [ dress ] = candle newline print ( all [ dress ] ) newline"
"girl give toy . girl give ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ give ] = toy newline print ( girl [ give ] ) newline"
"girl be three . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = three newline print ( girl [ be ] ) newline"
"man stand center . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = center newline print ( man [ stand ] ) newline"
"people walk next . next walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( next [ walk ] ) newline"
"hockey lie body . hockey lie ?","if entities . find ( hockey ) ! = None : newline newtab entities [ hockey ] [ lie ] = body newline print ( hockey [ lie ] ) newline"
"worker hang ten . worker hang ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ hang ] = ten newline print ( worker [ hang ] ) newline"
"people discuss some . some discuss ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ discuss ] = people newline print ( some [ discuss ] ) newline"
"man wear black . black wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( black [ wear ] ) newline"
"woman prepare some . some prepare ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ prepare ] = woman newline print ( some [ prepare ] ) newline"
"man sit while . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = while newline print ( man [ sit ] ) newline"
"wheelchair be swinging . swinging be ?","if entities . find ( wheelchair ) ! = None : newline newtab entities [ wheelchair ] [ be ] = wheelchair newline print ( swinging [ be ] ) newline"
"people dress little . little dress ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ dress ] = people newline print ( little [ dress ] ) newline"
"men be laughing . laughing be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( laughing [ be ] ) newline"
"outfit peek out . out peek ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ peek ] = outfit newline print ( out [ peek ] ) newline"
"woman ride uniform . uniform ride ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ ride ] = woman newline print ( uniform [ ride ] ) newline"
"skier climb an . skier climb ?","if entities . find ( skier ) ! = None : newline newtab entities [ skier ] [ climb ] = an newline print ( skier [ climb ] ) newline"
"boy be baby . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = baby newline print ( boy [ be ] ) newline"
"man be rock . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = rock newline print ( man [ be ] ) newline"
"dog run while . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = while newline print ( dog [ run ] ) newline"
"track surround one . one surround ?","if entities . find ( track ) ! = None : newline newtab entities [ track ] [ surround ] = track newline print ( one [ surround ] ) newline"
"while sit while . while sit ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ sit ] = while newline print ( while [ sit ] ) newline"
"woman be open . open be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( open [ be ] ) newline"
"object be sleeping . object be ?","if entities . find ( object ) ! = None : newline newtab entities [ object ] [ be ] = sleeping newline print ( object [ be ] ) newline"
"man interview white . white interview ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ interview ] = man newline print ( white [ interview ] ) newline"
"while hold wooden . wooden hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = while newline print ( wooden [ hold ] ) newline"
"scooter be colorful . colorful be ?","if entities . find ( scooter ) ! = None : newline newtab entities [ scooter ] [ be ] = scooter newline print ( colorful [ be ] ) newline"
"clown hand out . out hand ?","if entities . find ( clown ) ! = None : newline newtab entities [ clown ] [ hand ] = clown newline print ( out [ hand ] ) newline"
"kid blow air . kid blow ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ blow ] = air newline print ( kid [ blow ] ) newline"
"man be laughing . laughing be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( laughing [ be ] ) newline"
"person wake two . person wake ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ wake ] = two newline print ( person [ wake ] ) newline"
"stroller cross legged . legged cross ?","if entities . find ( stroller ) ! = None : newline newtab entities [ stroller ] [ cross ] = stroller newline print ( legged [ cross ] ) newline"
"vehicle make color . vehicle make ?","if entities . find ( vehicle ) ! = None : newline newtab entities [ vehicle ] [ make ] = color newline print ( vehicle [ make ] ) newline"
"woman hang upside . woman hang ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hang ] = upside newline print ( woman [ hang ] ) newline"
"runner hurdle two . runner hurdle ?","if entities . find ( runner ) ! = None : newline newtab entities [ runner ] [ hurdle ] = two newline print ( runner [ hurdle ] ) newline"
"boy be rock . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = rock newline print ( boy [ be ] ) newline"
"game be nude . game be ?","if entities . find ( game ) ! = None : newline newtab entities [ game ] [ be ] = nude newline print ( game [ be ] ) newline"
"microphone wear santa . microphone wear ?","if entities . find ( microphone ) ! = None : newline newtab entities [ microphone ] [ wear ] = santa newline print ( microphone [ wear ] ) newline"
"cowboy try two . cowboy try ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ try ] = two newline print ( cowboy [ try ] ) newline"
"people be many . many be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( many [ be ] ) newline"
"gray scarf two . gray scarf ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ scarf ] = two newline print ( gray [ scarf ] ) newline"
"teenager sit next . next sit ?","if entities . find ( teenager ) ! = None : newline newtab entities [ teenager ] [ sit ] = teenager newline print ( next [ sit ] ) newline"
"red shirt while . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = while newline print ( red [ shirt ] ) newline"
"rock climb gear . rock climb ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ climb ] = gear newline print ( rock [ climb ] ) newline"
"horse jump while . horse jump ?","if entities . find ( horse ) ! = None : newline newtab entities [ horse ] [ jump ] = while newline print ( horse [ jump ] ) newline"
"dancer perform some . some perform ?","if entities . find ( dancer ) ! = None : newline newtab entities [ dancer ] [ perform ] = dancer newline print ( some [ perform ] ) newline"
"child sit while . child sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = while newline print ( child [ sit ] ) newline"
"couple hug while . couple hug ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ hug ] = while newline print ( couple [ hug ] ) newline"
"red jump high . high jump ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ jump ] = red newline print ( high [ jump ] ) newline"
"girl wear neon . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = neon newline print ( girl [ wear ] ) newline"
"teenager take some . some take ?","if entities . find ( teenager ) ! = None : newline newtab entities [ teenager ] [ take ] = teenager newline print ( some [ take ] ) newline"
"man be warming . warming be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( warming [ be ] ) newline"
"man play accordion . man play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = accordion newline print ( man [ play ] ) newline"
"masonry pyramid white . white pyramid ?","if entities . find ( masonry ) ! = None : newline newtab entities [ masonry ] [ pyramid ] = masonry newline print ( white [ pyramid ] ) newline"
"girl dress man . girl dress ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ dress ] = man newline print ( girl [ dress ] ) newline"
"man play some . some play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = man newline print ( some [ play ] ) newline"
"man be miniature . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = miniature newline print ( man [ be ] ) newline"
"pajama be thursday . pajama be ?","if entities . find ( pajama ) ! = None : newline newtab entities [ pajama ] [ be ] = thursday newline print ( pajama [ be ] ) newline"
"while sit still . still sit ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ sit ] = while newline print ( still [ sit ] ) newline"
"teens be brake . teens be ?","if entities . find ( teens ) ! = None : newline newtab entities [ teens ] [ be ] = brake newline print ( teens [ be ] ) newline"
"man ride bike . man ride ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ ride ] = bike newline print ( man [ ride ] ) newline"
"scout give another . another give ?","if entities . find ( scout ) ! = None : newline newtab entities [ scout ] [ give ] = scout newline print ( another [ give ] ) newline"
"woman wear red . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = red newline print ( woman [ wear ] ) newline"
"woman mark white . white mark ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ mark ] = woman newline print ( white [ mark ] ) newline"
"boy hold shovel . boy hold ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ hold ] = shovel newline print ( boy [ hold ] ) newline"
"instrument include an . instrument include ?","if entities . find ( instrument ) ! = None : newline newtab entities [ instrument ] [ include ] = an newline print ( instrument [ include ] ) newline"
"men be next . next be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( next [ be ] ) newline"
"while use bookstore . while use ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ use ] = bookstore newline print ( while [ use ] ) newline"
"culture attire while . culture attire ?","if entities . find ( culture ) ! = None : newline newtab entities [ culture ] [ attire ] = while newline print ( culture [ attire ] ) newline"
"flag come tackler . flag come ?","if entities . find ( flag ) ! = None : newline newtab entities [ flag ] [ come ] = tackler newline print ( flag [ come ] ) newline"
"dog be arm . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = arm newline print ( dog [ be ] ) newline"
"face be earphone . face be ?","if entities . find ( face ) ! = None : newline newtab entities [ face ] [ be ] = earphone newline print ( face [ be ] ) newline"
"two smile while . two smile ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ smile ] = while newline print ( two [ smile ] ) newline"
"dog stick ball . dog stick ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ stick ] = ball newline print ( dog [ stick ] ) newline"
"man walk out . out walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = man newline print ( out [ walk ] ) newline"
"woman be turing . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = turing newline print ( woman [ be ] ) newline"
"man be swinging . swinging be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( swinging [ be ] ) newline"
"camera line white . white line ?","if entities . find ( camera ) ! = None : newline newtab entities [ camera ] [ line ] = camera newline print ( white [ line ] ) newline"
"dog jump suite . dog jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = suite newline print ( dog [ jump ] ) newline"
"person stand next . next stand ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ stand ] = person newline print ( next [ stand ] ) newline"
"bird be rock . bird be ?","if entities . find ( bird ) ! = None : newline newtab entities [ bird ] [ be ] = rock newline print ( bird [ be ] ) newline"
"he play next . next play ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ play ] = he newline print ( next [ play ] ) newline"
"child be laughing . laughing be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( laughing [ be ] ) newline"
"men be three . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = three newline print ( men [ be ] ) newline"
"child eat out . out eat ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ eat ] = child newline print ( out [ eat ] ) newline"
"woman be swinging . swinging be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( swinging [ be ] ) newline"
"player throw some . some throw ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ throw ] = player newline print ( some [ throw ] ) newline"
"cigarette splash water . cigarette splash ?","if entities . find ( cigarette ) ! = None : newline newtab entities [ cigarette ] [ splash ] = water newline print ( cigarette [ splash ] ) newline"
"cement ramp next . next ramp ?","if entities . find ( cement ) ! = None : newline newtab entities [ cement ] [ ramp ] = cement newline print ( next [ ramp ] ) newline"
"subway lean out . out lean ?","if entities . find ( subway ) ! = None : newline newtab entities [ subway ] [ lean ] = subway newline print ( out [ lean ] ) newline"
"priest carry bag . priest carry ?","if entities . find ( priest ) ! = None : newline newtab entities [ priest ] [ carry ] = bag newline print ( priest [ carry ] ) newline"
"people watch two . people watch ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ watch ] = two newline print ( people [ watch ] ) newline"
"people be swinging . swinging be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( swinging [ be ] ) newline"
"man attempt white . white attempt ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ attempt ] = man newline print ( white [ attempt ] ) newline"
"suit jump backward . backward jump ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ jump ] = suit newline print ( backward [ jump ] ) newline"
"man wear green . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = green newline print ( man [ wear ] ) newline"
"link fence white . white fence ?","if entities . find ( link ) ! = None : newline newtab entities [ link ] [ fence ] = link newline print ( white [ fence ] ) newline"
"chair discuss topic . chair discuss ?","if entities . find ( chair ) ! = None : newline newtab entities [ chair ] [ discuss ] = topic newline print ( chair [ discuss ] ) newline"
"blond be airline . blond be ?","if entities . find ( blond ) ! = None : newline newtab entities [ blond ] [ be ] = airline newline print ( blond [ be ] ) newline"
"brown coat white . white coat ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ coat ] = brown newline print ( white [ coat ] ) newline"
"flower dress stroke . flower dress ?","if entities . find ( flower ) ! = None : newline newtab entities [ flower ] [ dress ] = stroke newline print ( flower [ dress ] ) newline"
"girl sit next . next sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = girl newline print ( next [ sit ] ) newline"
"couple sit woman . couple sit ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ sit ] = woman newline print ( couple [ sit ] ) newline"
"friend jump out . out jump ?","if entities . find ( friend ) ! = None : newline newtab entities [ friend ] [ jump ] = friend newline print ( out [ jump ] ) newline"
"woman look area . woman look ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ look ] = area newline print ( woman [ look ] ) newline"
"person wear gold . person wear ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ wear ] = gold newline print ( person [ wear ] ) newline"
"man wear different . different wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( different [ wear ] ) newline"
"orange vest while . orange vest ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ vest ] = while newline print ( orange [ vest ] ) newline"
"man be two . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = two newline print ( man [ be ] ) newline"
"trunks do some . some do ?","if entities . find ( trunks ) ! = None : newline newtab entities [ trunks ] [ do ] = trunks newline print ( some [ do ] ) newline"
"men sit while . men sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = while newline print ( men [ sit ] ) newline"
"snow be both . both be ?","if entities . find ( snow ) ! = None : newline newtab entities [ snow ] [ be ] = snow newline print ( both [ be ] ) newline"
"woman be hundred . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = hundred newline print ( woman [ be ] ) newline"
"man play hockey . man play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = hockey newline print ( man [ play ] ) newline"
"couple be silly . silly be ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ be ] = couple newline print ( silly [ be ] ) newline"
"blouse be green . blouse be ?","if entities . find ( blouse ) ! = None : newline newtab entities [ blouse ] [ be ] = green newline print ( blouse [ be ] ) newline"
"boy will white . white will ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ will ] = boy newline print ( white [ will ] ) newline"
"red shirt swinging . swinging shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( swinging [ shirt ] ) newline"
"woman look woman . woman look ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ look ] = woman newline print ( woman [ look ] ) newline"
"dog leap stance . dog leap ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ leap ] = stance newline print ( dog [ leap ] ) newline"
"two be black . black be ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ be ] = two newline print ( black [ be ] ) newline"
"hair be three . hair be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = three newline print ( hair [ be ] ) newline"
"microphone speak white . white speak ?","if entities . find ( microphone ) ! = None : newline newtab entities [ microphone ] [ speak ] = microphone newline print ( white [ speak ] ) newline"
"woman dress while . woman dress ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dress ] = while newline print ( woman [ dress ] ) newline"
"or stand center . or stand ?","if entities . find ( or ) ! = None : newline newtab entities [ or ] [ stand ] = center newline print ( or [ stand ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"helmet be high . high be ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ be ] = helmet newline print ( high [ be ] ) newline"
"man be white . white be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( white [ be ] ) newline"
"woman wear striped . striped wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( striped [ wear ] ) newline"
"jeans be two . jeans be ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ be ] = two newline print ( jeans [ be ] ) newline"
"dog jump horse . dog jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = horse newline print ( dog [ jump ] ) newline"
"man wear safety . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = safety newline print ( man [ wear ] ) newline"
"people sit or . people sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = or newline print ( people [ sit ] ) newline"
"kid be swinging . swinging be ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ be ] = kid newline print ( swinging [ be ] ) newline"
"man leap high . high leap ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ leap ] = man newline print ( high [ leap ] ) newline"
"red robe girl . red robe ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ robe ] = girl newline print ( red [ robe ] ) newline"
"woman stand next . next stand ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ stand ] = woman newline print ( next [ stand ] ) newline"
"lady wear wool . lady wear ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ wear ] = wool newline print ( lady [ wear ] ) newline"
"dog run while . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = while newline print ( dog [ run ] ) newline"
"people wait next . next wait ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ wait ] = people newline print ( next [ wait ] ) newline"
"team play different . different play ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ play ] = team newline print ( different [ play ] ) newline"
"girl play long . long play ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ play ] = girl newline print ( long [ play ] ) newline"
"presenter be ready . ready be ?","if entities . find ( presenter ) ! = None : newline newtab entities [ presenter ] [ be ] = presenter newline print ( ready [ be ] ) newline"
"player prepare many . many prepare ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ prepare ] = player newline print ( many [ prepare ] ) newline"
"bird be ecstatic . ecstatic be ?","if entities . find ( bird ) ! = None : newline newtab entities [ bird ] [ be ] = bird newline print ( ecstatic [ be ] ) newline"
"girl be rod . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = rod newline print ( girl [ be ] ) newline"
"boy play an . boy play ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ play ] = an newline print ( boy [ play ] ) newline"
"palm tree while . palm tree ?","if entities . find ( palm ) ! = None : newline newtab entities [ palm ] [ tree ] = while newline print ( palm [ tree ] ) newline"
"onlooker enjoy time . onlooker enjoy ?","if entities . find ( onlooker ) ! = None : newline newtab entities [ onlooker ] [ enjoy ] = time newline print ( onlooker [ enjoy ] ) newline"
"child be laughing . laughing be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( laughing [ be ] ) newline"
"man pluck two . man pluck ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ pluck ] = two newline print ( man [ pluck ] ) newline"
"red hat hard . hard hat ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ hat ] = red newline print ( hard [ hat ] ) newline"
"car move rock . car move ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ move ] = rock newline print ( car [ move ] ) newline"
"dog jump out . out jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = dog newline print ( out [ jump ] ) newline"
"while use computer . while use ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ use ] = computer newline print ( while [ use ] ) newline"
"red skirt all . all skirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ skirt ] = red newline print ( all [ skirt ] ) newline"
"store be sleeping . store be ?","if entities . find ( store ) ! = None : newline newtab entities [ store ] [ be ] = sleeping newline print ( store [ be ] ) newline"
"man stand elbow . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = elbow newline print ( man [ stand ] ) newline"
"dog be two . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = two newline print ( dog [ be ] ) newline"
"student read next . next read ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ read ] = student newline print ( next [ read ] ) newline"
"woman wait female . woman wait ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wait ] = female newline print ( woman [ wait ] ) newline"
"man be spray . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = spray newline print ( man [ be ] ) newline"
"girl sit next . next sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = girl newline print ( next [ sit ] ) newline"
"man be rock . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = rock newline print ( man [ be ] ) newline"
"distance move vehicle . distance move ?","if entities . find ( distance ) ! = None : newline newtab entities [ distance ] [ move ] = vehicle newline print ( distance [ move ] ) newline"
"policeman be sleeping . policeman be ?","if entities . find ( policeman ) ! = None : newline newtab entities [ policeman ] [ be ] = sleeping newline print ( policeman [ be ] ) newline"
"woman be sleeping . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sleeping newline print ( woman [ be ] ) newline"
"he smile baby . he smile ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ smile ] = baby newline print ( he [ smile ] ) newline"
"sidewalk hold an . sidewalk hold ?","if entities . find ( sidewalk ) ! = None : newline newtab entities [ sidewalk ] [ hold ] = an newline print ( sidewalk [ hold ] ) newline"
"girl pose while . girl pose ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ pose ] = while newline print ( girl [ pose ] ) newline"
"lady be ecstatic . ecstatic be ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ be ] = lady newline print ( ecstatic [ be ] ) newline"
"girl sit next . next sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = girl newline print ( next [ sit ] ) newline"
"street repair truck . street repair ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ repair ] = truck newline print ( street [ repair ] ) newline"
"girl watch another . another watch ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ watch ] = girl newline print ( another [ watch ] ) newline"
"boat ride stationary . stationary ride ?","if entities . find ( boat ) ! = None : newline newtab entities [ boat ] [ ride ] = boat newline print ( stationary [ ride ] ) newline"
"bag be unrecognizable . unrecognizable be ?","if entities . find ( bag ) ! = None : newline newtab entities [ bag ] [ be ] = bag newline print ( unrecognizable [ be ] ) newline"
"bicyclist stay cool . cool stay ?","if entities . find ( bicyclist ) ! = None : newline newtab entities [ bicyclist ] [ stay ] = bicyclist newline print ( cool [ stay ] ) newline"
"girl make cloth . girl make ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ make ] = cloth newline print ( girl [ make ] ) newline"
"olympics play ball . olympics play ?","if entities . find ( olympics ) ! = None : newline newtab entities [ olympics ] [ play ] = ball newline print ( olympics [ play ] ) newline"
"player be staring . staring be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = player newline print ( staring [ be ] ) newline"
"girl be full . full be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( full [ be ] ) newline"
"hair be blindfolded . blindfolded be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = hair newline print ( blindfolded [ be ] ) newline"
"dog be sorting . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = sorting newline print ( dog [ be ] ) newline"
"an overturn white . white overturn ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ overturn ] = an newline print ( white [ overturn ] ) newline"
"girl run while . girl run ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ run ] = while newline print ( girl [ run ] ) newline"
"bench mark white . white mark ?","if entities . find ( bench ) ! = None : newline newtab entities [ bench ] [ mark ] = bench newline print ( white [ mark ] ) newline"
"woman look out . out look ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ look ] = woman newline print ( out [ look ] ) newline"
"green shirt brush . green shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = brush newline print ( green [ shirt ] ) newline"
"man dress wardrobe . man dress ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ dress ] = wardrobe newline print ( man [ dress ] ) newline"
"men be several . several be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( several [ be ] ) newline"
"player run greyhound . player run ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ run ] = greyhound newline print ( player [ run ] ) newline"
"dog be swinging . swinging be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( swinging [ be ] ) newline"
"child pose next . next pose ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ pose ] = child newline print ( next [ pose ] ) newline"
"two ski cap . two ski ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ ski ] = cap newline print ( two [ ski ] ) newline"
"class involve object . class involve ?","if entities . find ( class ) ! = None : newline newtab entities [ class ] [ involve ] = object newline print ( class [ involve ] ) newline"
"people walk out . out walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( out [ walk ] ) newline"
"dog tie dyed . dyed tie ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ tie ] = dog newline print ( dyed [ tie ] ) newline"
"woman compete white . white compete ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ compete ] = woman newline print ( white [ compete ] ) newline"
"raincoat stand side . raincoat stand ?","if entities . find ( raincoat ) ! = None : newline newtab entities [ raincoat ] [ stand ] = side newline print ( raincoat [ stand ] ) newline"
"photographer be creative . creative be ?","if entities . find ( photographer ) ! = None : newline newtab entities [ photographer ] [ be ] = photographer newline print ( creative [ be ] ) newline"
"ice cream cone . ice cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = cone newline print ( ice [ cream ] ) newline"
"man throw new . new throw ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ throw ] = man newline print ( new [ throw ] ) newline"
"green grass next . next grass ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ grass ] = green newline print ( next [ grass ] ) newline"
"headphone pose while . headphone pose ?","if entities . find ( headphone ) ! = None : newline newtab entities [ headphone ] [ pose ] = while newline print ( headphone [ pose ] ) newline"
"dog wear sleeveless . sleeveless wear ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ wear ] = dog newline print ( sleeveless [ wear ] ) newline"
"man sit while . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = while newline print ( man [ sit ] ) newline"
"man wear sunglasses . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = sunglasses newline print ( man [ wear ] ) newline"
"bike stop sign . bike stop ?","if entities . find ( bike ) ! = None : newline newtab entities [ bike ] [ stop ] = sign newline print ( bike [ stop ] ) newline"
"people play music . people play ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ play ] = music newline print ( people [ play ] ) newline"
"citizen enjoy some . some enjoy ?","if entities . find ( citizen ) ! = None : newline newtab entities [ citizen ] [ enjoy ] = citizen newline print ( some [ enjoy ] ) newline"
"hiker be swinging . swinging be ?","if entities . find ( hiker ) ! = None : newline newtab entities [ hiker ] [ be ] = hiker newline print ( swinging [ be ] ) newline"
"shopper look out . out look ?","if entities . find ( shopper ) ! = None : newline newtab entities [ shopper ] [ look ] = shopper newline print ( out [ look ] ) newline"
"boy hold white . white hold ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ hold ] = boy newline print ( white [ hold ] ) newline"
"lady be an . lady be ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ be ] = an newline print ( lady [ be ] ) newline"
"player be busy . busy be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = player newline print ( busy [ be ] ) newline"
"kid climb large . large climb ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ climb ] = kid newline print ( large [ climb ] ) newline"
"man be open . open be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( open [ be ] ) newline"
"ice cream vendor . ice cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = vendor newline print ( ice [ cream ] ) newline"
"orange shirt out . out shirt ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ shirt ] = orange newline print ( out [ shirt ] ) newline"
"people watch some . some watch ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ watch ] = people newline print ( some [ watch ] ) newline"
"oar row white . white row ?","if entities . find ( oar ) ! = None : newline newtab entities [ oar ] [ row ] = oar newline print ( white [ row ] ) newline"
"dog run men . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = men newline print ( dog [ run ] ) newline"
"bike race uniform . uniform race ?","if entities . find ( bike ) ! = None : newline newtab entities [ bike ] [ race ] = bike newline print ( uniform [ race ] ) newline"
"people walk out . out walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( out [ walk ] ) newline"
"child be light . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = light newline print ( child [ be ] ) newline"
"men watch colorful . colorful watch ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ watch ] = men newline print ( colorful [ watch ] ) newline"
"cyclone thrill white . white thrill ?","if entities . find ( cyclone ) ! = None : newline newtab entities [ cyclone ] [ thrill ] = cyclone newline print ( white [ thrill ] ) newline"
"chair get picture . chair get ?","if entities . find ( chair ) ! = None : newline newtab entities [ chair ] [ get ] = picture newline print ( chair [ get ] ) newline"
"jacket be an . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = an newline print ( jacket [ be ] ) newline"
"man drive an . man drive ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ drive ] = an newline print ( man [ drive ] ) newline"
"woman hold two . woman hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = two newline print ( woman [ hold ] ) newline"
"panda hat carousing . carousing hat ?","if entities . find ( panda ) ! = None : newline newtab entities [ panda ] [ hat ] = panda newline print ( carousing [ hat ] ) newline"
"man be laughing . laughing be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( laughing [ be ] ) newline"
"man be green . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = green newline print ( man [ be ] ) newline"
"men agitate two . men agitate ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ agitate ] = two newline print ( men [ agitate ] ) newline"
"jacket be teaching . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = teaching newline print ( jacket [ be ] ) newline"
"dog wear bikini . dog wear ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ wear ] = bikini newline print ( dog [ wear ] ) newline"
"baby be full . full be ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ be ] = baby newline print ( full [ be ] ) newline"
"dog be adjacent . adjacent be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( adjacent [ be ] ) newline"
"woman pass some . some pass ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ pass ] = woman newline print ( some [ pass ] ) newline"
"two repair bronze . bronze repair ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ repair ] = two newline print ( bronze [ repair ] ) newline"
"kid be asleep . asleep be ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ be ] = kid newline print ( asleep [ be ] ) newline"
"jersey hold gold . jersey hold ?","if entities . find ( jersey ) ! = None : newline newtab entities [ jersey ] [ hold ] = gold newline print ( jersey [ hold ] ) newline"
"girl dress partner . girl dress ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ dress ] = partner newline print ( girl [ dress ] ) newline"
"christmas tree white . white tree ?","if entities . find ( christmas ) ! = None : newline newtab entities [ christmas ] [ tree ] = christmas newline print ( white [ tree ] ) newline"
"rock climb stone . rock climb ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ climb ] = stone newline print ( rock [ climb ] ) newline"
"player be three . player be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = three newline print ( player [ be ] ) newline"
"man be spray . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = spray newline print ( man [ be ] ) newline"
"girl watch another . another watch ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ watch ] = girl newline print ( another [ watch ] ) newline"
"sun set sun . sun set ?","if entities . find ( sun ) ! = None : newline newtab entities [ sun ] [ set ] = sun newline print ( sun [ set ] ) newline"
"red fly low . low fly ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ fly ] = red newline print ( low [ fly ] ) newline"
"child stand patrol . child stand ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ stand ] = patrol newline print ( child [ stand ] ) newline"
"dirt ground next . next ground ?","if entities . find ( dirt ) ! = None : newline newtab entities [ dirt ] [ ground ] = dirt newline print ( next [ ground ] ) newline"
"woman be people . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = people newline print ( woman [ be ] ) newline"
"red short land . red short ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ short ] = land newline print ( red [ short ] ) newline"
"people be laughing . laughing be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( laughing [ be ] ) newline"
"straw hat next . next hat ?","if entities . find ( straw ) ! = None : newline newtab entities [ straw ] [ hat ] = straw newline print ( next [ hat ] ) newline"
"runner be sleeping . runner be ?","if entities . find ( runner ) ! = None : newline newtab entities [ runner ] [ be ] = sleeping newline print ( runner [ be ] ) newline"
"woman dress male . male dress ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dress ] = woman newline print ( male [ dress ] ) newline"
"worker repair bronze . bronze repair ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ repair ] = worker newline print ( bronze [ repair ] ) newline"
"race be airborne . airborne be ?","if entities . find ( race ) ! = None : newline newtab entities [ race ] [ be ] = race newline print ( airborne [ be ] ) newline"
"couple lie next . next lie ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ lie ] = couple newline print ( next [ lie ] ) newline"
"green shirt guide . green shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = guide newline print ( green [ shirt ] ) newline"
"who do gymnastics . who do ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ do ] = gymnastics newline print ( who [ do ] ) newline"
"woman walk out . out walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = woman newline print ( out [ walk ] ) newline"
"while drink water . while drink ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ drink ] = water newline print ( while [ drink ] ) newline"
"two police uniform . uniform police ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ police ] = two newline print ( uniform [ police ] ) newline"
"hair be four . hair be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = four newline print ( hair [ be ] ) newline"
"student be shielding . student be ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ be ] = shielding newline print ( student [ be ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"child watch other . other watch ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ watch ] = child newline print ( other [ watch ] ) newline"
"dog jump high . high jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = dog newline print ( high [ jump ] ) newline"
"boy make slope . boy make ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ make ] = slope newline print ( boy [ make ] ) newline"
"key belong two . key belong ?","if entities . find ( key ) ! = None : newline newtab entities [ key ] [ belong ] = two newline print ( key [ belong ] ) newline"
"table eat food . table eat ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ eat ] = food newline print ( table [ eat ] ) newline"
"woman wear white . white wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( white [ wear ] ) newline"
"people be several . several be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( several [ be ] ) newline"
"bench enjoy every . every enjoy ?","if entities . find ( bench ) ! = None : newline newtab entities [ bench ] [ enjoy ] = bench newline print ( every [ enjoy ] ) newline"
"or pass blue . blue pass ?","if entities . find ( or ) ! = None : newline newtab entities [ or ] [ pass ] = or newline print ( blue [ pass ] ) newline"
"sunglasses pose while . sunglasses pose ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ pose ] = while newline print ( sunglasses [ pose ] ) newline"
"man lie body . man lie ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ lie ] = body newline print ( man [ lie ] ) newline"
"child run man . child run ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ run ] = man newline print ( child [ run ] ) newline"
"mother be swinging . swinging be ?","if entities . find ( mother ) ! = None : newline newtab entities [ mother ] [ be ] = mother newline print ( swinging [ be ] ) newline"
"skin be mouth . skin be ?","if entities . find ( skin ) ! = None : newline newtab entities [ skin ] [ be ] = mouth newline print ( skin [ be ] ) newline"
"man be scuba . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = scuba newline print ( man [ be ] ) newline"
"helmet be sorting . helmet be ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ be ] = sorting newline print ( helmet [ be ] ) newline"
"people walk hand . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = hand newline print ( people [ walk ] ) newline"
"two shop late . late shop ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ shop ] = two newline print ( late [ shop ] ) newline"
"sidewalk listen white . white listen ?","if entities . find ( sidewalk ) ! = None : newline newtab entities [ sidewalk ] [ listen ] = sidewalk newline print ( white [ listen ] ) newline"
"people be wooded . wooded be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( wooded [ be ] ) newline"
"jersey shake white . white shake ?","if entities . find ( jersey ) ! = None : newline newtab entities [ jersey ] [ shake ] = jersey newline print ( white [ shake ] ) newline"
"boy look man . boy look ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ look ] = man newline print ( boy [ look ] ) newline"
"men look doll . men look ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ look ] = doll newline print ( men [ look ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"kid run fast . fast run ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ run ] = kid newline print ( fast [ run ] ) newline"
"woman look out . out look ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ look ] = woman newline print ( out [ look ] ) newline"
"girl wear white . white wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = girl newline print ( white [ wear ] ) newline"
"gun be out . out be ?","if entities . find ( gun ) ! = None : newline newtab entities [ gun ] [ be ] = gun newline print ( out [ be ] ) newline"
"men hold tongs . men hold ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ hold ] = tongs newline print ( men [ hold ] ) newline"
"kid sit court . kid sit ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ sit ] = court newline print ( kid [ sit ] ) newline"
"dog swim deep . deep swim ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ swim ] = dog newline print ( deep [ swim ] ) newline"
"man wear an . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = an newline print ( man [ wear ] ) newline"
"waterway accommodate walker . waterway accommodate ?","if entities . find ( waterway ) ! = None : newline newtab entities [ waterway ] [ accommodate ] = walker newline print ( waterway [ accommodate ] ) newline"
"men stand next . next stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = men newline print ( next [ stand ] ) newline"
"news interview white . white interview ?","if entities . find ( news ) ! = None : newline newtab entities [ news ] [ interview ] = news newline print ( white [ interview ] ) newline"
"ice enter it . ice enter ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ enter ] = it newline print ( ice [ enter ] ) newline"
"boy wear headphone . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = headphone newline print ( boy [ wear ] ) newline"
"couple hold several . several hold ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ hold ] = couple newline print ( several [ hold ] ) newline"
"carriage hold newborn . newborn hold ?","if entities . find ( carriage ) ! = None : newline newtab entities [ carriage ] [ hold ] = carriage newline print ( newborn [ hold ] ) newline"
"woman be ecstatic . ecstatic be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( ecstatic [ be ] ) newline"
"people wait next . next wait ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ wait ] = people newline print ( next [ wait ] ) newline"
"altitude aim white . white aim ?","if entities . find ( altitude ) ! = None : newline newtab entities [ altitude ] [ aim ] = altitude newline print ( white [ aim ] ) newline"
"brown shirt while . brown shirt ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ shirt ] = while newline print ( brown [ shirt ] ) newline"
"woman be swinging . swinging be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( swinging [ be ] ) newline"
"helmet ride uniform . uniform ride ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ ride ] = helmet newline print ( uniform [ ride ] ) newline"
"couple be unexcited . unexcited be ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ be ] = couple newline print ( unexcited [ be ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"may be two . may be ?","if entities . find ( may ) ! = None : newline newtab entities [ may ] [ be ] = two newline print ( may [ be ] ) newline"
"costume make an . costume make ?","if entities . find ( costume ) ! = None : newline newtab entities [ costume ] [ make ] = an newline print ( costume [ make ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"man look pensive . pensive look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = man newline print ( pensive [ look ] ) newline"
"head be ready . ready be ?","if entities . find ( head ) ! = None : newline newtab entities [ head ] [ be ] = head newline print ( ready [ be ] ) newline"
"swimmer swim pool . swimmer swim ?","if entities . find ( swimmer ) ! = None : newline newtab entities [ swimmer ] [ swim ] = pool newline print ( swimmer [ swim ] ) newline"
"gray skirt dance . gray skirt ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ skirt ] = dance newline print ( gray [ skirt ] ) newline"
"leotards perform science . leotards perform ?","if entities . find ( leotards ) ! = None : newline newtab entities [ leotards ] [ perform ] = science newline print ( leotards [ perform ] ) newline"
"dog be available . available be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( available [ be ] ) newline"
"hair be sleeping . hair be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = sleeping newline print ( hair [ be ] ) newline"
"woman paint another . another paint ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ paint ] = woman newline print ( another [ paint ] ) newline"
"man be growling . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = growling newline print ( man [ be ] ) newline"
"men be spaced . spaced be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( spaced [ be ] ) newline"
"greyhound be four . greyhound be ?","if entities . find ( greyhound ) ! = None : newline newtab entities [ greyhound ] [ be ] = four newline print ( greyhound [ be ] ) newline"
"boy hold one . one hold ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ hold ] = boy newline print ( one [ hold ] ) newline"
"female be opening . female be ?","if entities . find ( female ) ! = None : newline newtab entities [ female ] [ be ] = opening newline print ( female [ be ] ) newline"
"field hold red . field hold ?","if entities . find ( field ) ! = None : newline newtab entities [ field ] [ hold ] = red newline print ( field [ hold ] ) newline"
"boy watch some . some watch ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ watch ] = boy newline print ( some [ watch ] ) newline"
"player dress couple . player dress ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ dress ] = couple newline print ( player [ dress ] ) newline"
"man be opening . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = opening newline print ( man [ be ] ) newline"
"suit be laughing . laughing be ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ be ] = suit newline print ( laughing [ be ] ) newline"
"woman be three . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = three newline print ( woman [ be ] ) newline"
"boy stand next . next stand ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ stand ] = boy newline print ( next [ stand ] ) newline"
"man skateboard trick . man skateboard ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ skateboard ] = trick newline print ( man [ skateboard ] ) newline"
"girl play guitar . girl play ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ play ] = guitar newline print ( girl [ play ] ) newline"
"woman wear black . black wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( black [ wear ] ) newline"
"man be two . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = two newline print ( man [ be ] ) newline"
"while sit net . while sit ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ sit ] = net newline print ( while [ sit ] ) newline"
"dog hold coffee . dog hold ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ hold ] = coffee newline print ( dog [ hold ] ) newline"
"dog have fun . dog have ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ have ] = fun newline print ( dog [ have ] ) newline"
"hair be asleep . asleep be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = hair newline print ( asleep [ be ] ) newline"
"jacket push several . several push ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ push ] = jacket newline print ( several [ push ] ) newline"
"people be sleeping . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = sleeping newline print ( people [ be ] ) newline"
"man be many . many be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( many [ be ] ) newline"
"woman be trophy . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = trophy newline print ( woman [ be ] ) newline"
"man ride uniform . uniform ride ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ ride ] = man newline print ( uniform [ ride ] ) newline"
"suit sit court . suit sit ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ sit ] = court newline print ( suit [ sit ] ) newline"
"band be two . band be ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ be ] = two newline print ( band [ be ] ) newline"
"cheerleader dress bow . cheerleader dress ?","if entities . find ( cheerleader ) ! = None : newline newtab entities [ cheerleader ] [ dress ] = bow newline print ( cheerleader [ dress ] ) newline"
"people be sleeping . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = sleeping newline print ( people [ be ] ) newline"
"platform wait next . next wait ?","if entities . find ( platform ) ! = None : newline newtab entities [ platform ] [ wait ] = platform newline print ( next [ wait ] ) newline"
"people be all . all be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( all [ be ] ) newline"
"artist draw chinese . chinese draw ?","if entities . find ( artist ) ! = None : newline newtab entities [ artist ] [ draw ] = artist newline print ( chinese [ draw ] ) newline"
"while rest next . next rest ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ rest ] = while newline print ( next [ rest ] ) newline"
"couple kiss sheep . couple kiss ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ kiss ] = sheep newline print ( couple [ kiss ] ) newline"
"child play an . child play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = an newline print ( child [ play ] ) newline"
"kid stand next . next stand ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ stand ] = kid newline print ( next [ stand ] ) newline"
"lady be four . lady be ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ be ] = four newline print ( lady [ be ] ) newline"
"player wear all . all wear ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ wear ] = player newline print ( all [ wear ] ) newline"
"woman be asleep . asleep be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( asleep [ be ] ) newline"
"man sit dog . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = dog newline print ( man [ sit ] ) newline"
"he climb out . out climb ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ climb ] = he newline print ( out [ climb ] ) newline"
"boat float device . boat float ?","if entities . find ( boat ) ! = None : newline newtab entities [ boat ] [ float ] = device newline print ( boat [ float ] ) newline"
"woman walk next . next walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = woman newline print ( next [ walk ] ) newline"
"man dance one . one dance ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ dance ] = man newline print ( one [ dance ] ) newline"
"officer watch three . officer watch ?","if entities . find ( officer ) ! = None : newline newtab entities [ officer ] [ watch ] = three newline print ( officer [ watch ] ) newline"
"boy act two . boy act ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ act ] = two newline print ( boy [ act ] ) newline"
"race be airborne . airborne be ?","if entities . find ( race ) ! = None : newline newtab entities [ race ] [ be ] = race newline print ( airborne [ be ] ) newline"
"girl be two . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = two newline print ( girl [ be ] ) newline"
"stage show many . many show ?","if entities . find ( stage ) ! = None : newline newtab entities [ stage ] [ show ] = stage newline print ( many [ show ] ) newline"
"while crowd outdoor . outdoor crowd ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ crowd ] = while newline print ( outdoor [ crowd ] ) newline"
"frisbee golf white . white golf ?","if entities . find ( frisbee ) ! = None : newline newtab entities [ frisbee ] [ golf ] = frisbee newline print ( white [ golf ] ) newline"
"suit take great . great take ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ take ] = suit newline print ( great [ take ] ) newline"
"worker perform karate . worker perform ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ perform ] = karate newline print ( worker [ perform ] ) newline"
"who be part . who be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = part newline print ( who [ be ] ) newline"
"woman wait area . woman wait ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wait ] = area newline print ( woman [ wait ] ) newline"
"boy serve white . white serve ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ serve ] = boy newline print ( white [ serve ] ) newline"
"step share headphone . step share ?","if entities . find ( step ) ! = None : newline newtab entities [ step ] [ share ] = headphone newline print ( step [ share ] ) newline"
"woman wear white . white wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( white [ wear ] ) newline"
"musician be opening . musician be ?","if entities . find ( musician ) ! = None : newline newtab entities [ musician ] [ be ] = opening newline print ( musician [ be ] ) newline"
"five be asleep . asleep be ?","if entities . find ( five ) ! = None : newline newtab entities [ five ] [ be ] = five newline print ( asleep [ be ] ) newline"
"girl be three . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = three newline print ( girl [ be ] ) newline"
"jersey be karate . jersey be ?","if entities . find ( jersey ) ! = None : newline newtab entities [ jersey ] [ be ] = karate newline print ( jersey [ be ] ) newline"
"spray paint mural . spray paint ?","if entities . find ( spray ) ! = None : newline newtab entities [ spray ] [ paint ] = mural newline print ( spray [ paint ] ) newline"
"background sit woman . background sit ?","if entities . find ( background ) ! = None : newline newtab entities [ background ] [ sit ] = woman newline print ( background [ sit ] ) newline"
"suit be many . many be ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ be ] = suit newline print ( many [ be ] ) newline"
"man clean some . some clean ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ clean ] = man newline print ( some [ clean ] ) newline"
"man wear black . black wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( black [ wear ] ) newline"
"blond talk next . next talk ?","if entities . find ( blond ) ! = None : newline newtab entities [ blond ] [ talk ] = blond newline print ( next [ talk ] ) newline"
"blouse be rock . blouse be ?","if entities . find ( blouse ) ! = None : newline newtab entities [ blouse ] [ be ] = rock newline print ( blouse [ be ] ) newline"
"photographer snap white . white snap ?","if entities . find ( photographer ) ! = None : newline newtab entities [ photographer ] [ snap ] = photographer newline print ( white [ snap ] ) newline"
"dog have white . white have ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ have ] = dog newline print ( white [ have ] ) newline"
"child be six . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = six newline print ( child [ be ] ) newline"
"girl be sleeping . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = sleeping newline print ( girl [ be ] ) newline"
"bowl hat rock . bowl hat ?","if entities . find ( bowl ) ! = None : newline newtab entities [ bowl ] [ hat ] = rock newline print ( bowl [ hat ] ) newline"
"sunglasses sit net . sunglasses sit ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ sit ] = net newline print ( sunglasses [ sit ] ) newline"
"men be asleep . asleep be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( asleep [ be ] ) newline"
"woman stand out . out stand ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ stand ] = woman newline print ( out [ stand ] ) newline"
"artist make blanket . artist make ?","if entities . find ( artist ) ! = None : newline newtab entities [ artist ] [ make ] = blanket newline print ( artist [ make ] ) newline"
"rock climb wall . rock climb ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ climb ] = wall newline print ( rock [ climb ] ) newline"
"people be open . open be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( open [ be ] ) newline"
"man climb net . man climb ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ climb ] = net newline print ( man [ climb ] ) newline"
"tan pant while . tan pant ?","if entities . find ( tan ) ! = None : newline newtab entities [ tan ] [ pant ] = while newline print ( tan [ pant ] ) newline"
"man play next . next play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = man newline print ( next [ play ] ) newline"
"people watch laptop . people watch ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ watch ] = laptop newline print ( people [ watch ] ) newline"
"trunks play some . some play ?","if entities . find ( trunks ) ! = None : newline newtab entities [ trunks ] [ play ] = trunks newline print ( some [ play ] ) newline"
"man tip two . man tip ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ tip ] = two newline print ( man [ tip ] ) newline"
"office be four . office be ?","if entities . find ( office ) ! = None : newline newtab entities [ office ] [ be ] = four newline print ( office [ be ] ) newline"
"woman be laughing . laughing be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( laughing [ be ] ) newline"
"people play basketball . people play ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ play ] = basketball newline print ( people [ play ] ) newline"
"who be an . who be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = an newline print ( who [ be ] ) newline"
"cigarette be napping . napping be ?","if entities . find ( cigarette ) ! = None : newline newtab entities [ cigarette ] [ be ] = cigarette newline print ( napping [ be ] ) newline"
"girl pose next . next pose ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ pose ] = girl newline print ( next [ pose ] ) newline"
"child play some . some play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = child newline print ( some [ play ] ) newline"
"woman wear suspender . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = suspender newline print ( woman [ wear ] ) newline"
"dog be referee . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = referee newline print ( dog [ be ] ) newline"
"dog be able . able be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( able [ be ] ) newline"
"man hold out . out hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = man newline print ( out [ hold ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"man wear an . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = an newline print ( man [ wear ] ) newline"
"jacket jump high . high jump ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ jump ] = jacket newline print ( high [ jump ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"child roll fresh . fresh roll ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ roll ] = child newline print ( fresh [ roll ] ) newline"
"girl sit next . next sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = girl newline print ( next [ sit ] ) newline"
"sidewalk push little . little push ?","if entities . find ( sidewalk ) ! = None : newline newtab entities [ sidewalk ] [ push ] = sidewalk newline print ( little [ push ] ) newline"
"people eat ice . people eat ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ eat ] = ice newline print ( people [ eat ] ) newline"
"someone dig steak . someone dig ?","if entities . find ( someone ) ! = None : newline newtab entities [ someone ] [ dig ] = steak newline print ( someone [ dig ] ) newline"
"lady be laughing . laughing be ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ be ] = lady newline print ( laughing [ be ] ) newline"
"men sit while . men sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = while newline print ( men [ sit ] ) newline"
"jeans walk out . out walk ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ walk ] = jeans newline print ( out [ walk ] ) newline"
"man be swinging . swinging be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( swinging [ be ] ) newline"
"car be several . several be ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ be ] = car newline print ( several [ be ] ) newline"
"food shop bag . food shop ?","if entities . find ( food ) ! = None : newline newtab entities [ food ] [ shop ] = bag newline print ( food [ shop ] ) newline"
"lady wear white . white wear ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ wear ] = lady newline print ( white [ wear ] ) newline"
"men be all . all be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( all [ be ] ) newline"
"scaffold be swinging . swinging be ?","if entities . find ( scaffold ) ! = None : newline newtab entities [ scaffold ] [ be ] = scaffold newline print ( swinging [ be ] ) newline"
"man sit while . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = while newline print ( man [ sit ] ) newline"
"shopper walk hand . shopper walk ?","if entities . find ( shopper ) ! = None : newline newtab entities [ shopper ] [ walk ] = hand newline print ( shopper [ walk ] ) newline"
"men push child . men push ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ push ] = child newline print ( men [ push ] ) newline"
"man do some . some do ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ do ] = man newline print ( some [ do ] ) newline"
"snow cover another . another cover ?","if entities . find ( snow ) ! = None : newline newtab entities [ snow ] [ cover ] = snow newline print ( another [ cover ] ) newline"
"onlooker watch colorful . colorful watch ?","if entities . find ( onlooker ) ! = None : newline newtab entities [ onlooker ] [ watch ] = onlooker newline print ( colorful [ watch ] ) newline"
"officer stand face . officer stand ?","if entities . find ( officer ) ! = None : newline newtab entities [ officer ] [ stand ] = face newline print ( officer [ stand ] ) newline"
"man rest next . next rest ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ rest ] = man newline print ( next [ rest ] ) newline"
"player pass an . player pass ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ pass ] = an newline print ( player [ pass ] ) newline"
"bicyclist ride dirt . bicyclist ride ?","if entities . find ( bicyclist ) ! = None : newline newtab entities [ bicyclist ] [ ride ] = dirt newline print ( bicyclist [ ride ] ) newline"
"baby listen white . white listen ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ listen ] = baby newline print ( white [ listen ] ) newline"
"driver speed bullet . driver speed ?","if entities . find ( driver ) ! = None : newline newtab entities [ driver ] [ speed ] = bullet newline print ( driver [ speed ] ) newline"
"he take out . out take ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ take ] = he newline print ( out [ take ] ) newline"
"glass build wooden . wooden build ?","if entities . find ( glass ) ! = None : newline newtab entities [ glass ] [ build ] = glass newline print ( wooden [ build ] ) newline"
"baseball bat high . high bat ?","if entities . find ( baseball ) ! = None : newline newtab entities [ baseball ] [ bat ] = baseball newline print ( high [ bat ] ) newline"
"men gather straw . men gather ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ gather ] = straw newline print ( men [ gather ] ) newline"
"while get out . out get ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ get ] = while newline print ( out [ get ] ) newline"
"gray hat who . gray hat ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ hat ] = who newline print ( gray [ hat ] ) newline"
"man sit while . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = while newline print ( man [ sit ] ) newline"
"dog be many . many be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( many [ be ] ) newline"
"direction stand next . next stand ?","if entities . find ( direction ) ! = None : newline newtab entities [ direction ] [ stand ] = direction newline print ( next [ stand ] ) newline"
"boy swing laugh . boy swing ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ swing ] = laugh newline print ( boy [ swing ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"woman dress all . all dress ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dress ] = woman newline print ( all [ dress ] ) newline"
"german shepherd white . white shepherd ?","if entities . find ( german ) ! = None : newline newtab entities [ german ] [ shepherd ] = german newline print ( white [ shepherd ] ) newline"
"child be swinging . swinging be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( swinging [ be ] ) newline"
"hair be three . hair be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = three newline print ( hair [ be ] ) newline"
"woman sit youth . woman sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = youth newline print ( woman [ sit ] ) newline"
"child hug while . child hug ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ hug ] = while newline print ( child [ hug ] ) newline"
"sundress be next . next be ?","if entities . find ( sundress ) ! = None : newline newtab entities [ sundress ] [ be ] = sundress newline print ( next [ be ] ) newline"
"singer perform band . singer perform ?","if entities . find ( singer ) ! = None : newline newtab entities [ singer ] [ perform ] = band newline print ( singer [ perform ] ) newline"
"people be multicolored . multicolored be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( multicolored [ be ] ) newline"
"woman be art . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = art newline print ( woman [ be ] ) newline"
"boy do craft . boy do ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ do ] = craft newline print ( boy [ do ] ) newline"
"person chop big . big chop ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ chop ] = person newline print ( big [ chop ] ) newline"
"hand tool next . next tool ?","if entities . find ( hand ) ! = None : newline newtab entities [ hand ] [ tool ] = hand newline print ( next [ tool ] ) newline"
"dog be busy . busy be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( busy [ be ] ) newline"
"an empty public . public empty ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ empty ] = an newline print ( public [ empty ] ) newline"
"man be unknown . unknown be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( unknown [ be ] ) newline"
"woman exit girl . woman exit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ exit ] = girl newline print ( woman [ exit ] ) newline"
"scout be out . out be ?","if entities . find ( scout ) ! = None : newline newtab entities [ scout ] [ be ] = scout newline print ( out [ be ] ) newline"
"tent be staring . staring be ?","if entities . find ( tent ) ! = None : newline newtab entities [ tent ] [ be ] = tent newline print ( staring [ be ] ) newline"
"child play tennis . child play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = tennis newline print ( child [ play ] ) newline"
"child run event . child run ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ run ] = event newline print ( child [ run ] ) newline"
"top lean dog . top lean ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ lean ] = dog newline print ( top [ lean ] ) newline"
"green shirt who . green shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = who newline print ( green [ shirt ] ) newline"
"jacket chase an . jacket chase ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ chase ] = an newline print ( jacket [ chase ] ) newline"
"snowboarder fly overhead . snowboarder fly ?","if entities . find ( snowboarder ) ! = None : newline newtab entities [ snowboarder ] [ fly ] = overhead newline print ( snowboarder [ fly ] ) newline"
"man wear number . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = number newline print ( man [ wear ] ) newline"
"child peer out . out peer ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ peer ] = child newline print ( out [ peer ] ) newline"
"dog walk or . dog walk ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ walk ] = or newline print ( dog [ walk ] ) newline"
"floor cover band . floor cover ?","if entities . find ( floor ) ! = None : newline newtab entities [ floor ] [ cover ] = band newline print ( floor [ cover ] ) newline"
"crane lift an . crane lift ?","if entities . find ( crane ) ! = None : newline newtab entities [ crane ] [ lift ] = an newline print ( crane [ lift ] ) newline"
"man wear colorful . colorful wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( colorful [ wear ] ) newline"
"man paddle while . man paddle ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ paddle ] = while newline print ( man [ paddle ] ) newline"
"rock smoke cigarette . rock smoke ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ smoke ] = cigarette newline print ( rock [ smoke ] ) newline"
"beanie look out . out look ?","if entities . find ( beanie ) ! = None : newline newtab entities [ beanie ] [ look ] = beanie newline print ( out [ look ] ) newline"
"team be comforting . comforting be ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ be ] = team newline print ( comforting [ be ] ) newline"
"hair pose next . next pose ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ pose ] = hair newline print ( next [ pose ] ) newline"
"people be three . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = three newline print ( people [ be ] ) newline"
"man flip another . another flip ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ flip ] = man newline print ( another [ flip ] ) newline"
"player be purple . purple be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = player newline print ( purple [ be ] ) newline"
"scarf tie dyed . dyed tie ?","if entities . find ( scarf ) ! = None : newline newtab entities [ scarf ] [ tie ] = scarf newline print ( dyed [ tie ] ) newline"
"boy hold several . several hold ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ hold ] = boy newline print ( several [ hold ] ) newline"
"woman dress little . little dress ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dress ] = woman newline print ( little [ dress ] ) newline"
"men watch people . men watch ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ watch ] = people newline print ( men [ watch ] ) newline"
"dog play various . various play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = dog newline print ( various [ play ] ) newline"
"rollerblader perform music . rollerblader perform ?","if entities . find ( rollerblader ) ! = None : newline newtab entities [ rollerblader ] [ perform ] = music newline print ( rollerblader [ perform ] ) newline"
"bike jump high . high jump ?","if entities . find ( bike ) ! = None : newline newtab entities [ bike ] [ jump ] = bike newline print ( high [ jump ] ) newline"
"cheerleader dress swinging . swinging dress ?","if entities . find ( cheerleader ) ! = None : newline newtab entities [ cheerleader ] [ dress ] = cheerleader newline print ( swinging [ dress ] ) newline"
"plaid shirt wave . plaid shirt ?","if entities . find ( plaid ) ! = None : newline newtab entities [ plaid ] [ shirt ] = wave newline print ( plaid [ shirt ] ) newline"
"people be john . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = john newline print ( people [ be ] ) newline"
"snowboarder jump while . snowboarder jump ?","if entities . find ( snowboarder ) ! = None : newline newtab entities [ snowboarder ] [ jump ] = while newline print ( snowboarder [ jump ] ) newline"
"day come tackler . day come ?","if entities . find ( day ) ! = None : newline newtab entities [ day ] [ come ] = tackler newline print ( day [ come ] ) newline"
"life vest next . next vest ?","if entities . find ( life ) ! = None : newline newtab entities [ life ] [ vest ] = life newline print ( next [ vest ] ) newline"
"people pass an . people pass ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ pass ] = an newline print ( people [ pass ] ) newline"
"woman be full . full be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( full [ be ] ) newline"
"man wear sunglasses . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = sunglasses newline print ( man [ wear ] ) newline"
"safety vest next . next vest ?","if entities . find ( safety ) ! = None : newline newtab entities [ safety ] [ vest ] = safety newline print ( next [ vest ] ) newline"
"green coat gesture . green coat ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ coat ] = gesture newline print ( green [ coat ] ) newline"
"people talk while . people talk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ talk ] = while newline print ( people [ talk ] ) newline"
"infielder jump high . high jump ?","if entities . find ( infielder ) ! = None : newline newtab entities [ infielder ] [ jump ] = infielder newline print ( high [ jump ] ) newline"
"man wear an . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = an newline print ( man [ wear ] ) newline"
"men sit asian . asian sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = men newline print ( asian [ sit ] ) newline"
"people be featured . featured be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( featured [ be ] ) newline"
"jacket grab food . jacket grab ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ grab ] = food newline print ( jacket [ grab ] ) newline"
"bow practice soccer . bow practice ?","if entities . find ( bow ) ! = None : newline newtab entities [ bow ] [ practice ] = soccer newline print ( bow [ practice ] ) newline"
"beanie blow debris . beanie blow ?","if entities . find ( beanie ) ! = None : newline newtab entities [ beanie ] [ blow ] = debris newline print ( beanie [ blow ] ) newline"
"people be child . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = child newline print ( people [ be ] ) newline"
"dreadlock be light . dreadlock be ?","if entities . find ( dreadlock ) ! = None : newline newtab entities [ dreadlock ] [ be ] = light newline print ( dreadlock [ be ] ) newline"
"man be rock . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = rock newline print ( man [ be ] ) newline"
"child wear different . different wear ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wear ] = child newline print ( different [ wear ] ) newline"
"activity be midair . activity be ?","if entities . find ( activity ) ! = None : newline newtab entities [ activity ] [ be ] = midair newline print ( activity [ be ] ) newline"
"tattoo be sleeping . tattoo be ?","if entities . find ( tattoo ) ! = None : newline newtab entities [ tattoo ] [ be ] = sleeping newline print ( tattoo [ be ] ) newline"
"car crash white . white crash ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ crash ] = car newline print ( white [ crash ] ) newline"
"man rest next . next rest ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ rest ] = man newline print ( next [ rest ] ) newline"
"background watch customer . background watch ?","if entities . find ( background ) ! = None : newline newtab entities [ background ] [ watch ] = customer newline print ( background [ watch ] ) newline"
"sign offer white . white offer ?","if entities . find ( sign ) ! = None : newline newtab entities [ sign ] [ offer ] = sign newline print ( white [ offer ] ) newline"
"woman pose next . next pose ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ pose ] = woman newline print ( next [ pose ] ) newline"
"girl go out . out go ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ go ] = girl newline print ( out [ go ] ) newline"
"girl play out . out play ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ play ] = girl newline print ( out [ play ] ) newline"
"style hat who . style hat ?","if entities . find ( style ) ! = None : newline newtab entities [ style ] [ hat ] = who newline print ( style [ hat ] ) newline"
"man be sledding . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sledding newline print ( man [ be ] ) newline"
"dog walk next . next walk ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ walk ] = dog newline print ( next [ walk ] ) newline"
"an adventure white . white adventure ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ adventure ] = an newline print ( white [ adventure ] ) newline"
"dog be midair . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = midair newline print ( dog [ be ] ) newline"
"bottle appear white . white appear ?","if entities . find ( bottle ) ! = None : newline newtab entities [ bottle ] [ appear ] = bottle newline print ( white [ appear ] ) newline"
"child be out . out be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( out [ be ] ) newline"
"jacket be swinging . swinging be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = jacket newline print ( swinging [ be ] ) newline"
"bar stool table . bar stool ?","if entities . find ( bar ) ! = None : newline newtab entities [ bar ] [ stool ] = table newline print ( bar [ stool ] ) newline"
"band play some . some play ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ play ] = band newline print ( some [ play ] ) newline"
"four finger while . four finger ?","if entities . find ( four ) ! = None : newline newtab entities [ four ] [ finger ] = while newline print ( four [ finger ] ) newline"
"party draw chinese . chinese draw ?","if entities . find ( party ) ! = None : newline newtab entities [ party ] [ draw ] = party newline print ( chinese [ draw ] ) newline"
"people sit next . next sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( next [ sit ] ) newline"
"orange vest while . orange vest ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ vest ] = while newline print ( orange [ vest ] ) newline"
"flats set sun . flats set ?","if entities . find ( flats ) ! = None : newline newtab entities [ flats ] [ set ] = sun newline print ( flats [ set ] ) newline"
"patch run while . patch run ?","if entities . find ( patch ) ! = None : newline newtab entities [ patch ] [ run ] = while newline print ( patch [ run ] ) newline"
"construction hold numerous . numerous hold ?","if entities . find ( construction ) ! = None : newline newtab entities [ construction ] [ hold ] = construction newline print ( numerous [ hold ] ) newline"
"kid wear all . all wear ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ wear ] = kid newline print ( all [ wear ] ) newline"
"moose hat carousing . carousing hat ?","if entities . find ( moose ) ! = None : newline newtab entities [ moose ] [ hat ] = moose newline print ( carousing [ hat ] ) newline"
"subway look out . out look ?","if entities . find ( subway ) ! = None : newline newtab entities [ subway ] [ look ] = subway newline print ( out [ look ] ) newline"
"person wear blue . blue wear ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ wear ] = person newline print ( blue [ wear ] ) newline"
"villager sell grilled . grilled sell ?","if entities . find ( villager ) ! = None : newline newtab entities [ villager ] [ sell ] = villager newline print ( grilled [ sell ] ) newline"
"foreground wear scarf . foreground wear ?","if entities . find ( foreground ) ! = None : newline newtab entities [ foreground ] [ wear ] = scarf newline print ( foreground [ wear ] ) newline"
"truck haul vehicle . truck haul ?","if entities . find ( truck ) ! = None : newline newtab entities [ truck ] [ haul ] = vehicle newline print ( truck [ haul ] ) newline"
"people be all . all be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( all [ be ] ) newline"
"spark shoot firework . spark shoot ?","if entities . find ( spark ) ! = None : newline newtab entities [ spark ] [ shoot ] = firework newline print ( spark [ shoot ] ) newline"
"band play instrument . band play ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ play ] = instrument newline print ( band [ play ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"wrestler be opening . wrestler be ?","if entities . find ( wrestler ) ! = None : newline newtab entities [ wrestler ] [ be ] = opening newline print ( wrestler [ be ] ) newline"
"man play makeshift . makeshift play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = man newline print ( makeshift [ play ] ) newline"
"dog be next . next be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( next [ be ] ) newline"
"jacket rest next . next rest ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ rest ] = jacket newline print ( next [ rest ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"chef be laughing . laughing be ?","if entities . find ( chef ) ! = None : newline newtab entities [ chef ] [ be ] = chef newline print ( laughing [ be ] ) newline"
"street look man . street look ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ look ] = man newline print ( street [ look ] ) newline"
"woman wear all . all wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( all [ wear ] ) newline"
"gray coat white . white coat ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ coat ] = gray newline print ( white [ coat ] ) newline"
"man speak white . white speak ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ speak ] = man newline print ( white [ speak ] ) newline"
"woman be swinging . swinging be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( swinging [ be ] ) newline"
"it look annoyed . annoyed look ?","if entities . find ( it ) ! = None : newline newtab entities [ it ] [ look ] = it newline print ( annoyed [ look ] ) newline"
"pine tree species . pine tree ?","if entities . find ( pine ) ! = None : newline newtab entities [ pine ] [ tree ] = species newline print ( pine [ tree ] ) newline"
"red be both . both be ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ be ] = red newline print ( both [ be ] ) newline"
"dog be light . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = light newline print ( dog [ be ] ) newline"
"jersey stand while . jersey stand ?","if entities . find ( jersey ) ! = None : newline newtab entities [ jersey ] [ stand ] = while newline print ( jersey [ stand ] ) newline"
"woman unpack two . woman unpack ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ unpack ] = two newline print ( woman [ unpack ] ) newline"
"tourist enjoy ice . tourist enjoy ?","if entities . find ( tourist ) ! = None : newline newtab entities [ tourist ] [ enjoy ] = ice newline print ( tourist [ enjoy ] ) newline"
"man hold yellow . yellow hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = man newline print ( yellow [ hold ] ) newline"
"kid enjoy some . some enjoy ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ enjoy ] = kid newline print ( some [ enjoy ] ) newline"
"rock climb out . out climb ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ climb ] = rock newline print ( out [ climb ] ) newline"
"man be neck . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = neck newline print ( man [ be ] ) newline"
"man be rock . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = rock newline print ( man [ be ] ) newline"
"row hold line . row hold ?","if entities . find ( row ) ! = None : newline newtab entities [ row ] [ hold ] = line newline print ( row [ hold ] ) newline"
"ball be three . ball be ?","if entities . find ( ball ) ! = None : newline newtab entities [ ball ] [ be ] = three newline print ( ball [ be ] ) newline"
"leash be two . leash be ?","if entities . find ( leash ) ! = None : newline newtab entities [ leash ] [ be ] = two newline print ( leash [ be ] ) newline"
"man stand out . out stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( out [ stand ] ) newline"
"boy lay out . out lay ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ lay ] = boy newline print ( out [ lay ] ) newline"
"man be an . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = an newline print ( man [ be ] ) newline"
"water carry many . many carry ?","if entities . find ( water ) ! = None : newline newtab entities [ water ] [ carry ] = water newline print ( many [ carry ] ) newline"
"teeth stand upside . teeth stand ?","if entities . find ( teeth ) ! = None : newline newtab entities [ teeth ] [ stand ] = upside newline print ( teeth [ stand ] ) newline"
"woman shoot white . white shoot ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ shoot ] = woman newline print ( white [ shoot ] ) newline"
"track look student . track look ?","if entities . find ( track ) ! = None : newline newtab entities [ track ] [ look ] = student newline print ( track [ look ] ) newline"
"people be napping . napping be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( napping [ be ] ) newline"
"red shirt out . out shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( out [ shirt ] ) newline"
"girl be available . available be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( available [ be ] ) newline"
"floor work class . floor work ?","if entities . find ( floor ) ! = None : newline newtab entities [ floor ] [ work ] = class newline print ( floor [ work ] ) newline"
"computer work out . out work ?","if entities . find ( computer ) ! = None : newline newtab entities [ computer ] [ work ] = computer newline print ( out [ work ] ) newline"
"boy be teaching . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = teaching newline print ( boy [ be ] ) newline"
"men hang laundry . men hang ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ hang ] = laundry newline print ( men [ hang ] ) newline"
"dog run dog . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( dog [ run ] ) newline"
"girl be airline . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = airline newline print ( girl [ be ] ) newline"
"tennis shoe while . tennis shoe ?","if entities . find ( tennis ) ! = None : newline newtab entities [ tennis ] [ shoe ] = while newline print ( tennis [ shoe ] ) newline"
"jacket pull suitcase . jacket pull ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ pull ] = suitcase newline print ( jacket [ pull ] ) newline"
"man wear black . black wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( black [ wear ] ) newline"
"red pant or . red pant ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ pant ] = or newline print ( red [ pant ] ) newline"
"men play music . men play ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ play ] = music newline print ( men [ play ] ) newline"
"baby be neck . baby be ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ be ] = neck newline print ( baby [ be ] ) newline"
"office build next . next build ?","if entities . find ( office ) ! = None : newline newtab entities [ office ] [ build ] = office newline print ( next [ build ] ) newline"
"adult stand next . next stand ?","if entities . find ( adult ) ! = None : newline newtab entities [ adult ] [ stand ] = adult newline print ( next [ stand ] ) newline"
"baby swing upside . baby swing ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ swing ] = upside newline print ( baby [ swing ] ) newline"
"bike fly high . high fly ?","if entities . find ( bike ) ! = None : newline newtab entities [ bike ] [ fly ] = bike newline print ( high [ fly ] ) newline"
"child be teaching . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = teaching newline print ( child [ be ] ) newline"
"red be out . out be ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ be ] = red newline print ( out [ be ] ) newline"
"green grass background . green grass ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ grass ] = background newline print ( green [ grass ] ) newline"
"child be two . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = two newline print ( child [ be ] ) newline"
"member stand wave . member stand ?","if entities . find ( member ) ! = None : newline newtab entities [ member ] [ stand ] = wave newline print ( member [ stand ] ) newline"
"while seat black . black seat ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ seat ] = while newline print ( black [ seat ] ) newline"
"net look man . net look ?","if entities . find ( net ) ! = None : newline newtab entities [ net ] [ look ] = man newline print ( net [ look ] ) newline"
"car plow some . some plow ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ plow ] = car newline print ( some [ plow ] ) newline"
"boy smile next . next smile ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ smile ] = boy newline print ( next [ smile ] ) newline"
"green grass face . green grass ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ grass ] = face newline print ( green [ grass ] ) newline"
"who seem happy . happy seem ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ seem ] = who newline print ( happy [ seem ] ) newline"
"person stand next . next stand ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ stand ] = person newline print ( next [ stand ] ) newline"
"doctor check green . doctor check ?","if entities . find ( doctor ) ! = None : newline newtab entities [ doctor ] [ check ] = green newline print ( doctor [ check ] ) newline"
"helmet walk little . little walk ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ walk ] = helmet newline print ( little [ walk ] ) newline"
"child stare two . child stare ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ stare ] = two newline print ( child [ stare ] ) newline"
"boy wear silver . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = silver newline print ( boy [ wear ] ) newline"
"bicyclist race uniform . uniform race ?","if entities . find ( bicyclist ) ! = None : newline newtab entities [ bicyclist ] [ race ] = bicyclist newline print ( uniform [ race ] ) newline"
"office smile next . next smile ?","if entities . find ( office ) ! = None : newline newtab entities [ office ] [ smile ] = office newline print ( next [ smile ] ) newline"
"man bend leg . man bend ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ bend ] = leg newline print ( man [ bend ] ) newline"
"lady sit next . next sit ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ sit ] = lady newline print ( next [ sit ] ) newline"
"purse open another . another open ?","if entities . find ( purse ) ! = None : newline newtab entities [ purse ] [ open ] = purse newline print ( another [ open ] ) newline"
"boy attempt two . boy attempt ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ attempt ] = two newline print ( boy [ attempt ] ) newline"
"man lean dog . man lean ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ lean ] = dog newline print ( man [ lean ] ) newline"
"girl show multiple . multiple show ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ show ] = girl newline print ( multiple [ show ] ) newline"
"pigtail ride stationary . stationary ride ?","if entities . find ( pigtail ) ! = None : newline newtab entities [ pigtail ] [ ride ] = pigtail newline print ( stationary [ ride ] ) newline"
"man be full . full be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( full [ be ] ) newline"
"people embrace while . people embrace ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ embrace ] = while newline print ( people [ embrace ] ) newline"
"flight do different . different do ?","if entities . find ( flight ) ! = None : newline newtab entities [ flight ] [ do ] = flight newline print ( different [ do ] ) newline"
"dancer dress little . little dress ?","if entities . find ( dancer ) ! = None : newline newtab entities [ dancer ] [ dress ] = dancer newline print ( little [ dress ] ) newline"
"person be ready . ready be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = person newline print ( ready [ be ] ) newline"
"stage decorate cup . stage decorate ?","if entities . find ( stage ) ! = None : newline newtab entities [ stage ] [ decorate ] = cup newline print ( stage [ decorate ] ) newline"
"woman stand applause . woman stand ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ stand ] = applause newline print ( woman [ stand ] ) newline"
"team be men . team be ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ be ] = men newline print ( team [ be ] ) newline"
"man photograph white . white photograph ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ photograph ] = man newline print ( white [ photograph ] ) newline"
"red shirt clean . clean shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( clean [ shirt ] ) newline"
"age gather resource . age gather ?","if entities . find ( age ) ! = None : newline newtab entities [ age ] [ gather ] = resource newline print ( age [ gather ] ) newline"
"hair be green . hair be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = green newline print ( hair [ be ] ) newline"
"people dance troupe . people dance ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ dance ] = troupe newline print ( people [ dance ] ) newline"
"car be asleep . asleep be ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ be ] = car newline print ( asleep [ be ] ) newline"
"or move while . or move ?","if entities . find ( or ) ! = None : newline newtab entities [ or ] [ move ] = while newline print ( or [ move ] ) newline"
"cap be zombie . cap be ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ be ] = zombie newline print ( cap [ be ] ) newline"
"dog be laughing . laughing be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( laughing [ be ] ) newline"
"floor hold small . small hold ?","if entities . find ( floor ) ! = None : newline newtab entities [ floor ] [ hold ] = floor newline print ( small [ hold ] ) newline"
"man be many . many be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( many [ be ] ) newline"
"band be busy . busy be ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ be ] = band newline print ( busy [ be ] ) newline"
"red shirt skate . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = skate newline print ( red [ shirt ] ) newline"
"man look out . out look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = man newline print ( out [ look ] ) newline"
"man wear yellow . yellow wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( yellow [ wear ] ) newline"
"peach dress male . male dress ?","if entities . find ( peach ) ! = None : newline newtab entities [ peach ] [ dress ] = peach newline print ( male [ dress ] ) newline"
"man watch some . some watch ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ watch ] = man newline print ( some [ watch ] ) newline"
"man watch tv . man watch ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ watch ] = tv newline print ( man [ watch ] ) newline"
"lady sit while . lady sit ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ sit ] = while newline print ( lady [ sit ] ) newline"
"third look out . out look ?","if entities . find ( third ) ! = None : newline newtab entities [ third ] [ look ] = third newline print ( out [ look ] ) newline"
"woman lock white . white lock ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ lock ] = woman newline print ( white [ lock ] ) newline"
"hair play musical . musical play ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ play ] = hair newline print ( musical [ play ] ) newline"
"group lie asleep . asleep lie ?","if entities . find ( group ) ! = None : newline newtab entities [ group ] [ lie ] = group newline print ( asleep [ lie ] ) newline"
"red shoe staring . staring shoe ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shoe ] = red newline print ( staring [ shoe ] ) newline"
"woman be young . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = young newline print ( woman [ be ] ) newline"
"kid stand next . next stand ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ stand ] = kid newline print ( next [ stand ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"people look out . out look ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ look ] = people newline print ( out [ look ] ) newline"
"dog be swinging . swinging be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( swinging [ be ] ) newline"
"girl be three . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = three newline print ( girl [ be ] ) newline"
"man be girl . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = girl newline print ( man [ be ] ) newline"
"friend slide white . white slide ?","if entities . find ( friend ) ! = None : newline newtab entities [ friend ] [ slide ] = friend newline print ( white [ slide ] ) newline"
"city be airline . city be ?","if entities . find ( city ) ! = None : newline newtab entities [ city ] [ be ] = airline newline print ( city [ be ] ) newline"
"child watch two . child watch ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ watch ] = two newline print ( child [ watch ] ) newline"
"woman dress man . woman dress ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dress ] = man newline print ( woman [ dress ] ) newline"
"dog run greyhound . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = greyhound newline print ( dog [ run ] ) newline"
"business attire while . business attire ?","if entities . find ( business ) ! = None : newline newtab entities [ business ] [ attire ] = while newline print ( business [ attire ] ) newline"
"man hold fresh . fresh hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = man newline print ( fresh [ hold ] ) newline"
"men decide two . men decide ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ decide ] = two newline print ( men [ decide ] ) newline"
"man wear construction . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = construction newline print ( man [ wear ] ) newline"
"people get ready . ready get ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ get ] = people newline print ( ready [ get ] ) newline"
"red scarf white . white scarf ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ scarf ] = red newline print ( white [ scarf ] ) newline"
"people be rock . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = rock newline print ( people [ be ] ) newline"
"boy look guy . boy look ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ look ] = guy newline print ( boy [ look ] ) newline"
"man lean out . out lean ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ lean ] = man newline print ( out [ lean ] ) newline"
"bus travel two . bus travel ?","if entities . find ( bus ) ! = None : newline newtab entities [ bus ] [ travel ] = two newline print ( bus [ travel ] ) newline"
"seat turn backward . backward turn ?","if entities . find ( seat ) ! = None : newline newtab entities [ seat ] [ turn ] = seat newline print ( backward [ turn ] ) newline"
"people be laughing . laughing be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( laughing [ be ] ) newline"
"boy send dirt . boy send ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ send ] = dirt newline print ( boy [ send ] ) newline"
"cowboy hat next . next hat ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ hat ] = cowboy newline print ( next [ hat ] ) newline"
"helmet smile child . helmet smile ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ smile ] = child newline print ( helmet [ smile ] ) newline"
"dog be prominent . prominent be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( prominent [ be ] ) newline"
"rider ride stationary . stationary ride ?","if entities . find ( rider ) ! = None : newline newtab entities [ rider ] [ ride ] = rider newline print ( stationary [ ride ] ) newline"
"tiara be sleeping . tiara be ?","if entities . find ( tiara ) ! = None : newline newtab entities [ tiara ] [ be ] = sleeping newline print ( tiara [ be ] ) newline"
"customer have possession . customer have ?","if entities . find ( customer ) ! = None : newline newtab entities [ customer ] [ have ] = possession newline print ( customer [ have ] ) newline"
"pitcher stand while . pitcher stand ?","if entities . find ( pitcher ) ! = None : newline newtab entities [ pitcher ] [ stand ] = while newline print ( pitcher [ stand ] ) newline"
"sand cover another . another cover ?","if entities . find ( sand ) ! = None : newline newtab entities [ sand ] [ cover ] = sand newline print ( another [ cover ] ) newline"
"waterway accommodate walker . waterway accommodate ?","if entities . find ( waterway ) ! = None : newline newtab entities [ waterway ] [ accommodate ] = walker newline print ( waterway [ accommodate ] ) newline"
"green swing broom . green swing ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ swing ] = broom newline print ( green [ swing ] ) newline"
"people be visible . visible be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( visible [ be ] ) newline"
"jersey kick wood . jersey kick ?","if entities . find ( jersey ) ! = None : newline newtab entities [ jersey ] [ kick ] = wood newline print ( jersey [ kick ] ) newline"
"woman be sleeping . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sleeping newline print ( woman [ be ] ) newline"
"musician perform martial . martial perform ?","if entities . find ( musician ) ! = None : newline newtab entities [ musician ] [ perform ] = musician newline print ( martial [ perform ] ) newline"
"guy read newspaper . guy read ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ read ] = newspaper newline print ( guy [ read ] ) newline"
"woman be four . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = four newline print ( woman [ be ] ) newline"
"volleyball match dance . volleyball match ?","if entities . find ( volleyball ) ! = None : newline newtab entities [ volleyball ] [ match ] = dance newline print ( volleyball [ match ] ) newline"
"woman play lacrosse . woman play ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ play ] = lacrosse newline print ( woman [ play ] ) newline"
"people walk or . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = or newline print ( people [ walk ] ) newline"
"people walk next . next walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( next [ walk ] ) newline"
"someone be young . someone be ?","if entities . find ( someone ) ! = None : newline newtab entities [ someone ] [ be ] = young newline print ( someone [ be ] ) newline"
"spark fly vehicle . spark fly ?","if entities . find ( spark ) ! = None : newline newtab entities [ spark ] [ fly ] = vehicle newline print ( spark [ fly ] ) newline"
"child be karate . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = karate newline print ( child [ be ] ) newline"
"kilt get control . kilt get ?","if entities . find ( kilt ) ! = None : newline newtab entities [ kilt ] [ get ] = control newline print ( kilt [ get ] ) newline"
"child fall asleep . asleep fall ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ fall ] = child newline print ( asleep [ fall ] ) newline"
"man wear old . old wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( old [ wear ] ) newline"
"background look out . out look ?","if entities . find ( background ) ! = None : newline newtab entities [ background ] [ look ] = background newline print ( out [ look ] ) newline"
"girl leap stance . girl leap ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ leap ] = stance newline print ( girl [ leap ] ) newline"
"figure stand man . figure stand ?","if entities . find ( figure ) ! = None : newline newtab entities [ figure ] [ stand ] = man newline print ( figure [ stand ] ) newline"
"water have dinner . water have ?","if entities . find ( water ) ! = None : newline newtab entities [ water ] [ have ] = dinner newline print ( water [ have ] ) newline"
"pigeon swoop two . pigeon swoop ?","if entities . find ( pigeon ) ! = None : newline newtab entities [ pigeon ] [ swoop ] = two newline print ( pigeon [ swoop ] ) newline"
"boy be four . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = four newline print ( boy [ be ] ) newline"
"man be laughing . laughing be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( laughing [ be ] ) newline"
"water raft gear . water raft ?","if entities . find ( water ) ! = None : newline newtab entities [ water ] [ raft ] = gear newline print ( water [ raft ] ) newline"
"gray dress small . small dress ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ dress ] = gray newline print ( small [ dress ] ) newline"
"woman wear red . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = red newline print ( woman [ wear ] ) newline"
"woman lay out . out lay ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ lay ] = woman newline print ( out [ lay ] ) newline"
"kid play dog . kid play ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ play ] = dog newline print ( kid [ play ] ) newline"
"child play different . different play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = child newline print ( different [ play ] ) newline"
"girl wear colorful . colorful wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = girl newline print ( colorful [ wear ] ) newline"
"men stand chest . men stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = chest newline print ( men [ stand ] ) newline"
"hair be bike . hair be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = bike newline print ( hair [ be ] ) newline"
"woman be opening . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = opening newline print ( woman [ be ] ) newline"
"horse jockey white . white jockey ?","if entities . find ( horse ) ! = None : newline newtab entities [ horse ] [ jockey ] = horse newline print ( white [ jockey ] ) newline"
"people be several . several be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( several [ be ] ) newline"
"red shoe sleep . red shoe ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shoe ] = sleep newline print ( red [ shoe ] ) newline"
"apron smile next . next smile ?","if entities . find ( apron ) ! = None : newline newtab entities [ apron ] [ smile ] = apron newline print ( next [ smile ] ) newline"
"someone be ready . ready be ?","if entities . find ( someone ) ! = None : newline newtab entities [ someone ] [ be ] = someone newline print ( ready [ be ] ) newline"
"child wear black . black wear ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wear ] = child newline print ( black [ wear ] ) newline"
"man work out . out work ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ work ] = man newline print ( out [ work ] ) newline"
"cake be sunday . cake be ?","if entities . find ( cake ) ! = None : newline newtab entities [ cake ] [ be ] = sunday newline print ( cake [ be ] ) newline"
"opinion be sleeping . opinion be ?","if entities . find ( opinion ) ! = None : newline newtab entities [ opinion ] [ be ] = sleeping newline print ( opinion [ be ] ) newline"
"laundry get haircut . laundry get ?","if entities . find ( laundry ) ! = None : newline newtab entities [ laundry ] [ get ] = haircut newline print ( laundry [ get ] ) newline"
"green skirt all . all skirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ skirt ] = green newline print ( all [ skirt ] ) newline"
"boy be out . out be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( out [ be ] ) newline"
"woman wear cowboy . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = cowboy newline print ( woman [ wear ] ) newline"
"people be nature . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = nature newline print ( people [ be ] ) newline"
"child explore an . child explore ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ explore ] = an newline print ( child [ explore ] ) newline"
"swimmer be sleeping . swimmer be ?","if entities . find ( swimmer ) ! = None : newline newtab entities [ swimmer ] [ be ] = sleeping newline print ( swimmer [ be ] ) newline"
"green tree white . white tree ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ tree ] = green newline print ( white [ tree ] ) newline"
"people pick garbanzo . people pick ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ pick ] = garbanzo newline print ( people [ pick ] ) newline"
"player reject two . player reject ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ reject ] = two newline print ( player [ reject ] ) newline"
"can be three . can be ?","if entities . find ( can ) ! = None : newline newtab entities [ can ] [ be ] = three newline print ( can [ be ] ) newline"
"who be laughing . laughing be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( laughing [ be ] ) newline"
"player catch fish . player catch ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ catch ] = fish newline print ( player [ catch ] ) newline"
"girl sit next . next sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = girl newline print ( next [ sit ] ) newline"
"water try two . water try ?","if entities . find ( water ) ! = None : newline newtab entities [ water ] [ try ] = two newline print ( water [ try ] ) newline"
"girl blow dry . dry blow ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ blow ] = girl newline print ( dry [ blow ] ) newline"
"dog sit man . dog sit ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ sit ] = man newline print ( dog [ sit ] ) newline"
"people try out . out try ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ try ] = people newline print ( out [ try ] ) newline"
"people be men . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = men newline print ( people [ be ] ) newline"
"boy be sleeping . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = sleeping newline print ( boy [ be ] ) newline"
"girl be belongings . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = belongings newline print ( girl [ be ] ) newline"
"third look student . third look ?","if entities . find ( third ) ! = None : newline newtab entities [ third ] [ look ] = student newline print ( third [ look ] ) newline"
"hair be married . married be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = hair newline print ( married [ be ] ) newline"
"green shirt next . next shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = green newline print ( next [ shirt ] ) newline"
"lady be hard . hard be ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ be ] = lady newline print ( hard [ be ] ) newline"
"man lean tower . man lean ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ lean ] = tower newline print ( man [ lean ] ) newline"
"baby stand while . baby stand ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ stand ] = while newline print ( baby [ stand ] ) newline"
"people be opening . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = opening newline print ( people [ be ] ) newline"
"men be painted . painted be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( painted [ be ] ) newline"
"people be an . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = an newline print ( people [ be ] ) newline"
"while stand out . out stand ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ stand ] = while newline print ( out [ stand ] ) newline"
"wall hold another . another hold ?","if entities . find ( wall ) ! = None : newline newtab entities [ wall ] [ hold ] = wall newline print ( another [ hold ] ) newline"
"jacket be chinese . chinese be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = jacket newline print ( chinese [ be ] ) newline"
"people watch other . other watch ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ watch ] = people newline print ( other [ watch ] ) newline"
"man sit while . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = while newline print ( man [ sit ] ) newline"
"sunglasses be many . many be ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ be ] = sunglasses newline print ( many [ be ] ) newline"
"outfit flap it . outfit flap ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ flap ] = it newline print ( outfit [ flap ] ) newline"
"man wear white . white wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( white [ wear ] ) newline"
"car have multiple . multiple have ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ have ] = car newline print ( multiple [ have ] ) newline"
"handyman work out . out work ?","if entities . find ( handyman ) ! = None : newline newtab entities [ handyman ] [ work ] = handyman newline print ( out [ work ] ) newline"
"man jump obstacle . man jump ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ jump ] = obstacle newline print ( man [ jump ] ) newline"
"gear be all . all be ?","if entities . find ( gear ) ! = None : newline newtab entities [ gear ] [ be ] = gear newline print ( all [ be ] ) newline"
"boy row white . white row ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ row ] = boy newline print ( white [ row ] ) newline"
"family sit while . family sit ?","if entities . find ( family ) ! = None : newline newtab entities [ family ] [ sit ] = while newline print ( family [ sit ] ) newline"
"men take part . men take ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ take ] = part newline print ( men [ take ] ) newline"
"people sit next . next sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( next [ sit ] ) newline"
"boy wear man . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = man newline print ( boy [ wear ] ) newline"
"girl be nature . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = nature newline print ( girl [ be ] ) newline"
"bike stand next . next stand ?","if entities . find ( bike ) ! = None : newline newtab entities [ bike ] [ stand ] = bike newline print ( next [ stand ] ) newline"
"dog be an . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = an newline print ( dog [ be ] ) newline"
"hockey stick head . hockey stick ?","if entities . find ( hockey ) ! = None : newline newtab entities [ hockey ] [ stick ] = head newline print ( hockey [ stick ] ) newline"
"man hold out . out hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = man newline print ( out [ hold ] ) newline"
"trunks fly disc . trunks fly ?","if entities . find ( trunks ) ! = None : newline newtab entities [ trunks ] [ fly ] = disc newline print ( trunks [ fly ] ) newline"
"while hold flower . while hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = flower newline print ( while [ hold ] ) newline"
"ice cream out . out cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = ice newline print ( out [ cream ] ) newline"
"man be three . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = three newline print ( man [ be ] ) newline"
"hair enjoy some . some enjoy ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ enjoy ] = hair newline print ( some [ enjoy ] ) newline"
"man be lady . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = lady newline print ( man [ be ] ) newline"
"cap play guitar . cap play ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ play ] = guitar newline print ( cap [ play ] ) newline"
"apron sit guy . apron sit ?","if entities . find ( apron ) ! = None : newline newtab entities [ apron ] [ sit ] = guy newline print ( apron [ sit ] ) newline"
"apron stand face . apron stand ?","if entities . find ( apron ) ! = None : newline newtab entities [ apron ] [ stand ] = face newline print ( apron [ stand ] ) newline"
"person fly low . low fly ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ fly ] = person newline print ( low [ fly ] ) newline"
"headdress hold both . both hold ?","if entities . find ( headdress ) ! = None : newline newtab entities [ headdress ] [ hold ] = headdress newline print ( both [ hold ] ) newline"
"girl kick head . girl kick ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ kick ] = head newline print ( girl [ kick ] ) newline"
"man wear helmet . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = helmet newline print ( man [ wear ] ) newline"
"city map while . city map ?","if entities . find ( city ) ! = None : newline newtab entities [ city ] [ map ] = while newline print ( city [ map ] ) newline"
"luggage look child . luggage look ?","if entities . find ( luggage ) ! = None : newline newtab entities [ luggage ] [ look ] = child newline print ( luggage [ look ] ) newline"
"people sit next . next sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( next [ sit ] ) newline"
"man read out . out read ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ read ] = man newline print ( out [ read ] ) newline"
"bench overlook scenic . scenic overlook ?","if entities . find ( bench ) ! = None : newline newtab entities [ bench ] [ overlook ] = bench newline print ( scenic [ overlook ] ) newline"
"man clean out . out clean ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ clean ] = man newline print ( out [ clean ] ) newline"
"team go out . out go ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ go ] = team newline print ( out [ go ] ) newline"
"man look humanoid . man look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = humanoid newline print ( man [ look ] ) newline"
"fireman have trouble . fireman have ?","if entities . find ( fireman ) ! = None : newline newtab entities [ fireman ] [ have ] = trouble newline print ( fireman [ have ] ) newline"
"child sit asian . asian sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = child newline print ( asian [ sit ] ) newline"
"pedestrian walk little . little walk ?","if entities . find ( pedestrian ) ! = None : newline newtab entities [ pedestrian ] [ walk ] = pedestrian newline print ( little [ walk ] ) newline"
"bench play musical . musical play ?","if entities . find ( bench ) ! = None : newline newtab entities [ bench ] [ play ] = bench newline print ( musical [ play ] ) newline"
"arm rest next . next rest ?","if entities . find ( arm ) ! = None : newline newtab entities [ arm ] [ rest ] = arm newline print ( next [ rest ] ) newline"
"people shop next . next shop ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ shop ] = people newline print ( next [ shop ] ) newline"
"bus stop enclosure . bus stop ?","if entities . find ( bus ) ! = None : newline newtab entities [ bus ] [ stop ] = enclosure newline print ( bus [ stop ] ) newline"
"furniture shop bag . furniture shop ?","if entities . find ( furniture ) ! = None : newline newtab entities [ furniture ] [ shop ] = bag newline print ( furniture [ shop ] ) newline"
"girl jump upside . girl jump ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ jump ] = upside newline print ( girl [ jump ] ) newline"
"man tell white . white tell ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ tell ] = man newline print ( white [ tell ] ) newline"
"room play basketball . room play ?","if entities . find ( room ) ! = None : newline newtab entities [ room ] [ play ] = basketball newline print ( room [ play ] ) newline"
"team attempt two . team attempt ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ attempt ] = two newline print ( team [ attempt ] ) newline"
"panama hat while . panama hat ?","if entities . find ( panama ) ! = None : newline newtab entities [ panama ] [ hat ] = while newline print ( panama [ hat ] ) newline"
"man come tackler . man come ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ come ] = tackler newline print ( man [ come ] ) newline"
"jacket take out . out take ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ take ] = jacket newline print ( out [ take ] ) newline"
"red coat while . red coat ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ coat ] = while newline print ( red [ coat ] ) newline"
"outfit be airborne . airborne be ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ be ] = outfit newline print ( airborne [ be ] ) newline"
"girl blow dry . dry blow ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ blow ] = girl newline print ( dry [ blow ] ) newline"
"cyclist ride numerous . numerous ride ?","if entities . find ( cyclist ) ! = None : newline newtab entities [ cyclist ] [ ride ] = cyclist newline print ( numerous [ ride ] ) newline"
"costume be rock . costume be ?","if entities . find ( costume ) ! = None : newline newtab entities [ costume ] [ be ] = rock newline print ( costume [ be ] ) newline"
"toddler pose next . next pose ?","if entities . find ( toddler ) ! = None : newline newtab entities [ toddler ] [ pose ] = toddler newline print ( next [ pose ] ) newline"
"girl practice martial . martial practice ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ practice ] = girl newline print ( martial [ practice ] ) newline"
"guy be sad . sad be ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ be ] = guy newline print ( sad [ be ] ) newline"
"people try two . people try ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ try ] = two newline print ( people [ try ] ) newline"
"dog run dog . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( dog [ run ] ) newline"
"plate fill out . out fill ?","if entities . find ( plate ) ! = None : newline newtab entities [ plate ] [ fill ] = plate newline print ( out [ fill ] ) newline"
"two kayak or . two kayak ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ kayak ] = or newline print ( two [ kayak ] ) newline"
"boy be asleep . asleep be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( asleep [ be ] ) newline"
"hill watch other . other watch ?","if entities . find ( hill ) ! = None : newline newtab entities [ hill ] [ watch ] = hill newline print ( other [ watch ] ) newline"
"safety vest wave . safety vest ?","if entities . find ( safety ) ! = None : newline newtab entities [ safety ] [ vest ] = wave newline print ( safety [ vest ] ) newline"
"woman cook food . woman cook ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ cook ] = food newline print ( woman [ cook ] ) newline"
"dog be all . all be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( all [ be ] ) newline"
"people be nature . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = nature newline print ( people [ be ] ) newline"
"power wash some . some wash ?","if entities . find ( power ) ! = None : newline newtab entities [ power ] [ wash ] = power newline print ( some [ wash ] ) newline"
"juice shop window . juice shop ?","if entities . find ( juice ) ! = None : newline newtab entities [ juice ] [ shop ] = window newline print ( juice [ shop ] ) newline"
"child play pool . child play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = pool newline print ( child [ play ] ) newline"
"track look bored . bored look ?","if entities . find ( track ) ! = None : newline newtab entities [ track ] [ look ] = track newline print ( bored [ look ] ) newline"
"girl walk out . out walk ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ walk ] = girl newline print ( out [ walk ] ) newline"
"table read next . next read ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ read ] = table newline print ( next [ read ] ) newline"
"top be clustered . clustered be ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ be ] = top newline print ( clustered [ be ] ) newline"
"rain come out . out come ?","if entities . find ( rain ) ! = None : newline newtab entities [ rain ] [ come ] = rain newline print ( out [ come ] ) newline"
"wedding clothe staring . staring clothe ?","if entities . find ( wedding ) ! = None : newline newtab entities [ wedding ] [ clothe ] = wedding newline print ( staring [ clothe ] ) newline"
"suit be laughing . laughing be ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ be ] = suit newline print ( laughing [ be ] ) newline"
"men wear several . several wear ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ wear ] = men newline print ( several [ wear ] ) newline"
"while ride gear . while ride ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ ride ] = gear newline print ( while [ ride ] ) newline"
"gallon bucket two . gallon bucket ?","if entities . find ( gallon ) ! = None : newline newtab entities [ gallon ] [ bucket ] = two newline print ( gallon [ bucket ] ) newline"
"man walk bridge . man walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = bridge newline print ( man [ walk ] ) newline"
"red tie point . red tie ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ tie ] = point newline print ( red [ tie ] ) newline"
"gentleman explain two . gentleman explain ?","if entities . find ( gentleman ) ! = None : newline newtab entities [ gentleman ] [ explain ] = two newline print ( gentleman [ explain ] ) newline"
"bikini walk out . out walk ?","if entities . find ( bikini ) ! = None : newline newtab entities [ bikini ] [ walk ] = bikini newline print ( out [ walk ] ) newline"
"baby wait next . next wait ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ wait ] = baby newline print ( next [ wait ] ) newline"
"boy wear bright . bright wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = boy newline print ( bright [ wear ] ) newline"
"corduroy pant black . black pant ?","if entities . find ( corduroy ) ! = None : newline newtab entities [ corduroy ] [ pant ] = corduroy newline print ( black [ pant ] ) newline"
"hair stand next . next stand ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ stand ] = hair newline print ( next [ stand ] ) newline"
"boy wear white . white wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = boy newline print ( white [ wear ] ) newline"
"woman wear black . black wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( black [ wear ] ) newline"
"woman wear denim . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = denim newline print ( woman [ wear ] ) newline"
"people walk out . out walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( out [ walk ] ) newline"
"bag be hundred . bag be ?","if entities . find ( bag ) ! = None : newline newtab entities [ bag ] [ be ] = hundred newline print ( bag [ be ] ) newline"
"man look confused . confused look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = man newline print ( confused [ look ] ) newline"
"an empty cardboard . cardboard empty ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ empty ] = an newline print ( cardboard [ empty ] ) newline"
"boat check stock . boat check ?","if entities . find ( boat ) ! = None : newline newtab entities [ boat ] [ check ] = stock newline print ( boat [ check ] ) newline"
"girl ride gear . girl ride ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ ride ] = gear newline print ( girl [ ride ] ) newline"
"plaid shirt swinging . swinging shirt ?","if entities . find ( plaid ) ! = None : newline newtab entities [ plaid ] [ shirt ] = plaid newline print ( swinging [ shirt ] ) newline"
"jacket be way . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = way newline print ( jacket [ be ] ) newline"
"person be sleeping . person be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = sleeping newline print ( person [ be ] ) newline"
"male be staring . staring be ?","if entities . find ( male ) ! = None : newline newtab entities [ male ] [ be ] = male newline print ( staring [ be ] ) newline"
"hair be swinging . swinging be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = hair newline print ( swinging [ be ] ) newline"
"gear be sledding . gear be ?","if entities . find ( gear ) ! = None : newline newtab entities [ gear ] [ be ] = sledding newline print ( gear [ be ] ) newline"
"man talk next . next talk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ talk ] = man newline print ( next [ talk ] ) newline"
"dog run careful . careful run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( careful [ run ] ) newline"
"woman hold em . woman hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = em newline print ( woman [ hold ] ) newline"
"officer stand alone . alone stand ?","if entities . find ( officer ) ! = None : newline newtab entities [ officer ] [ stand ] = officer newline print ( alone [ stand ] ) newline"
"surfer catch some . some catch ?","if entities . find ( surfer ) ! = None : newline newtab entities [ surfer ] [ catch ] = surfer newline print ( some [ catch ] ) newline"
"lady hold colorful . colorful hold ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ hold ] = lady newline print ( colorful [ hold ] ) newline"
"an elaborate white . white elaborate ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ elaborate ] = an newline print ( white [ elaborate ] ) newline"
"man be lady . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = lady newline print ( man [ be ] ) newline"
"boy attire swinging . swinging attire ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ attire ] = boy newline print ( swinging [ attire ] ) newline"
"concession stand next . next stand ?","if entities . find ( concession ) ! = None : newline newtab entities [ concession ] [ stand ] = concession newline print ( next [ stand ] ) newline"
"men peer two . men peer ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ peer ] = two newline print ( men [ peer ] ) newline"
"mohawk look out . out look ?","if entities . find ( mohawk ) ! = None : newline newtab entities [ mohawk ] [ look ] = mohawk newline print ( out [ look ] ) newline"
"rabbit stare out . out stare ?","if entities . find ( rabbit ) ! = None : newline newtab entities [ rabbit ] [ stare ] = rabbit newline print ( out [ stare ] ) newline"
"men wear blue . blue wear ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ wear ] = men newline print ( blue [ wear ] ) newline"
"men wear sunglasses . men wear ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ wear ] = sunglasses newline print ( men [ wear ] ) newline"
"woman be still . still be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( still [ be ] ) newline"
"band be active . active be ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ be ] = band newline print ( active [ be ] ) newline"
"ice cream out . out cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = ice newline print ( out [ cream ] ) newline"
"flag design table . flag design ?","if entities . find ( flag ) ! = None : newline newtab entities [ flag ] [ design ] = table newline print ( flag [ design ] ) newline"
"jacket take some . some take ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ take ] = jacket newline print ( some [ take ] ) newline"
"girl be ready . ready be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( ready [ be ] ) newline"
"while enjoy athletic . athletic enjoy ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ enjoy ] = while newline print ( athletic [ enjoy ] ) newline"
"forest set while . forest set ?","if entities . find ( forest ) ! = None : newline newtab entities [ forest ] [ set ] = while newline print ( forest [ set ] ) newline"
"plywood wear yellow . yellow wear ?","if entities . find ( plywood ) ! = None : newline newtab entities [ plywood ] [ wear ] = plywood newline print ( yellow [ wear ] ) newline"
"length pass basketball . length pass ?","if entities . find ( length ) ! = None : newline newtab entities [ length ] [ pass ] = basketball newline print ( length [ pass ] ) newline"
"man wear blue . blue wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( blue [ wear ] ) newline"
"surfer catch an . surfer catch ?","if entities . find ( surfer ) ! = None : newline newtab entities [ surfer ] [ catch ] = an newline print ( surfer [ catch ] ) newline"
"lake surround woman . lake surround ?","if entities . find ( lake ) ! = None : newline newtab entities [ lake ] [ surround ] = woman newline print ( lake [ surround ] ) newline"
"brick build gingerbread . brick build ?","if entities . find ( brick ) ! = None : newline newtab entities [ brick ] [ build ] = gingerbread newline print ( brick [ build ] ) newline"
"man wear orange . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = orange newline print ( man [ wear ] ) newline"
"rodeo watch an . rodeo watch ?","if entities . find ( rodeo ) ! = None : newline newtab entities [ rodeo ] [ watch ] = an newline print ( rodeo [ watch ] ) newline"
"stage play hopscotch . stage play ?","if entities . find ( stage ) ! = None : newline newtab entities [ stage ] [ play ] = hopscotch newline print ( stage [ play ] ) newline"
"man be taste . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = taste newline print ( man [ be ] ) newline"
"red build next . next build ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ build ] = red newline print ( next [ build ] ) newline"
"peace knit own . own knit ?","if entities . find ( peace ) ! = None : newline newtab entities [ peace ] [ knit ] = peace newline print ( own [ knit ] ) newline"
"dog be bike . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = bike newline print ( dog [ be ] ) newline"
"child play tennis . child play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = tennis newline print ( child [ play ] ) newline"
"men work out . out work ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ work ] = men newline print ( out [ work ] ) newline"
"baby swing green . baby swing ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ swing ] = green newline print ( baby [ swing ] ) newline"
"man be people . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = people newline print ( man [ be ] ) newline"
"band consist two . band consist ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ consist ] = two newline print ( band [ consist ] ) newline"
"child wait area . child wait ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wait ] = area newline print ( child [ wait ] ) newline"
"lady be laughing . laughing be ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ be ] = lady newline print ( laughing [ be ] ) newline"
"man wear blue . blue wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( blue [ wear ] ) newline"
"who work men . who work ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ work ] = men newline print ( who [ work ] ) newline"
"woman wear face . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = face newline print ( woman [ wear ] ) newline"
"man wear black . black wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( black [ wear ] ) newline"
"people be asleep . asleep be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( asleep [ be ] ) newline"
"athlete wear jeans . athlete wear ?","if entities . find ( athlete ) ! = None : newline newtab entities [ athlete ] [ wear ] = jeans newline print ( athlete [ wear ] ) newline"
"worker trudge white . white trudge ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ trudge ] = worker newline print ( white [ trudge ] ) newline"
"child hang upright . upright hang ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ hang ] = child newline print ( upright [ hang ] ) newline"
"day shop bag . day shop ?","if entities . find ( day ) ! = None : newline newtab entities [ day ] [ shop ] = bag newline print ( day [ shop ] ) newline"
"band perform band . band perform ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ perform ] = band newline print ( band [ perform ] ) newline"
"he throw new . new throw ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ throw ] = he newline print ( new [ throw ] ) newline"
"men dress dance . men dress ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ dress ] = dance newline print ( men [ dress ] ) newline"
"dog catch ice . dog catch ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ catch ] = ice newline print ( dog [ catch ] ) newline"
"sweatsuit unpack two . sweatsuit unpack ?","if entities . find ( sweatsuit ) ! = None : newline newtab entities [ sweatsuit ] [ unpack ] = two newline print ( sweatsuit [ unpack ] ) newline"
"woman walk or . woman walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = or newline print ( woman [ walk ] ) newline"
"snow pant upside . snow pant ?","if entities . find ( snow ) ! = None : newline newtab entities [ snow ] [ pant ] = upside newline print ( snow [ pant ] ) newline"
"people dance while . people dance ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ dance ] = while newline print ( people [ dance ] ) newline"
"musician play some . some play ?","if entities . find ( musician ) ! = None : newline newtab entities [ musician ] [ play ] = musician newline print ( some [ play ] ) newline"
"orange scarf two . orange scarf ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ scarf ] = two newline print ( orange [ scarf ] ) newline"
"woman talk while . woman talk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ talk ] = while newline print ( woman [ talk ] ) newline"
"marker stand next . next stand ?","if entities . find ( marker ) ! = None : newline newtab entities [ marker ] [ stand ] = marker newline print ( next [ stand ] ) newline"
"child play guitar . child play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = guitar newline print ( child [ play ] ) newline"
"boy be miniature . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = miniature newline print ( boy [ be ] ) newline"
"heritage be spray . heritage be ?","if entities . find ( heritage ) ! = None : newline newtab entities [ heritage ] [ be ] = spray newline print ( heritage [ be ] ) newline"
"worker be sleeping . worker be ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ be ] = sleeping newline print ( worker [ be ] ) newline"
"while fan while . while fan ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ fan ] = while newline print ( while [ fan ] ) newline"
"man sit while . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = while newline print ( man [ sit ] ) newline"
"man be swinging . swinging be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( swinging [ be ] ) newline"
"camouflage pant or . camouflage pant ?","if entities . find ( camouflage ) ! = None : newline newtab entities [ camouflage ] [ pant ] = or newline print ( camouflage [ pant ] ) newline"
"dog walk hand . dog walk ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ walk ] = hand newline print ( dog [ walk ] ) newline"
"dog be asleep . asleep be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( asleep [ be ] ) newline"
"man wash windows . man wash ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wash ] = windows newline print ( man [ wash ] ) newline"
"woman play musical . musical play ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ play ] = woman newline print ( musical [ play ] ) newline"
"girl wear jacket . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = jacket newline print ( girl [ wear ] ) newline"
"boy crouch low . low crouch ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ crouch ] = boy newline print ( low [ crouch ] ) newline"
"people be an . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = an newline print ( people [ be ] ) newline"
"guy ski board . guy ski ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ ski ] = board newline print ( guy [ ski ] ) newline"
"hand hold musical . musical hold ?","if entities . find ( hand ) ! = None : newline newtab entities [ hand ] [ hold ] = hand newline print ( musical [ hold ] ) newline"
"suit be full . full be ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ be ] = suit newline print ( full [ be ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"man be key . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = key newline print ( man [ be ] ) newline"
"cap play soccer . cap play ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ play ] = soccer newline print ( cap [ play ] ) newline"
"people wrestle gear . people wrestle ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ wrestle ] = gear newline print ( people [ wrestle ] ) newline"
"people be group . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = group newline print ( people [ be ] ) newline"
"dog try two . dog try ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ try ] = two newline print ( dog [ try ] ) newline"
"coaster execute trick . coaster execute ?","if entities . find ( coaster ) ! = None : newline newtab entities [ coaster ] [ execute ] = trick newline print ( coaster [ execute ] ) newline"
"lady slice white . white slice ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ slice ] = lady newline print ( white [ slice ] ) newline"
"man be opening . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = opening newline print ( man [ be ] ) newline"
"collar be sleeping . collar be ?","if entities . find ( collar ) ! = None : newline newtab entities [ collar ] [ be ] = sleeping newline print ( collar [ be ] ) newline"
"jeans be visible . visible be ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ be ] = jeans newline print ( visible [ be ] ) newline"
"man play out . out play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = man newline print ( out [ play ] ) newline"
"man listen white . white listen ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ listen ] = man newline print ( white [ listen ] ) newline"
"chef be five . chef be ?","if entities . find ( chef ) ! = None : newline newtab entities [ chef ] [ be ] = five newline print ( chef [ be ] ) newline"
"people be sledding . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = sledding newline print ( people [ be ] ) newline"
"red shirt while . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = while newline print ( red [ shirt ] ) newline"
"while crowd space . while crowd ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ crowd ] = space newline print ( while [ crowd ] ) newline"
"rock climb stairs . rock climb ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ climb ] = stairs newline print ( rock [ climb ] ) newline"
"dish fill out . out fill ?","if entities . find ( dish ) ! = None : newline newtab entities [ dish ] [ fill ] = dish newline print ( out [ fill ] ) newline"
"people browse things . people browse ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ browse ] = things newline print ( people [ browse ] ) newline"
"people walk arm . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = arm newline print ( people [ walk ] ) newline"
"girl sit dog . girl sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = dog newline print ( girl [ sit ] ) newline"
"rider wear blue . blue wear ?","if entities . find ( rider ) ! = None : newline newtab entities [ rider ] [ wear ] = rider newline print ( blue [ wear ] ) newline"
"girl be nude . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = nude newline print ( girl [ be ] ) newline"
"man be many . many be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( many [ be ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"gray raft gear . gray raft ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ raft ] = gear newline print ( gray [ raft ] ) newline"
"jacket sit out . out sit ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ sit ] = jacket newline print ( out [ sit ] ) newline"
"people sit while . people sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = while newline print ( people [ sit ] ) newline"
"boy be smoke . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = smoke newline print ( boy [ be ] ) newline"
"girl sit next . next sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = girl newline print ( next [ sit ] ) newline"
"while sit woman . while sit ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ sit ] = woman newline print ( while [ sit ] ) newline"
"union jack two . union jack ?","if entities . find ( union ) ! = None : newline newtab entities [ union ] [ jack ] = two newline print ( union [ jack ] ) newline"
"michigan wine sample . michigan wine ?","if entities . find ( michigan ) ! = None : newline newtab entities [ michigan ] [ wine ] = sample newline print ( michigan [ wine ] ) newline"
"dog run out . out run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( out [ run ] ) newline"
"boy attempt two . boy attempt ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ attempt ] = two newline print ( boy [ attempt ] ) newline"
"pencil skirt all . all skirt ?","if entities . find ( pencil ) ! = None : newline newtab entities [ pencil ] [ skirt ] = pencil newline print ( all [ skirt ] ) newline"
"red stand person . red stand ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ stand ] = person newline print ( red [ stand ] ) newline"
"truck be ice . truck be ?","if entities . find ( truck ) ! = None : newline newtab entities [ truck ] [ be ] = ice newline print ( truck [ be ] ) newline"
"woman clasp white . white clasp ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ clasp ] = woman newline print ( white [ clasp ] ) newline"
"makeup hold black . black hold ?","if entities . find ( makeup ) ! = None : newline newtab entities [ makeup ] [ hold ] = makeup newline print ( black [ hold ] ) newline"
"baby sit while . baby sit ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ sit ] = while newline print ( baby [ sit ] ) newline"
"dog jump out . out jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = dog newline print ( out [ jump ] ) newline"
"street line white . white line ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ line ] = street newline print ( white [ line ] ) newline"
"man show some . some show ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ show ] = man newline print ( some [ show ] ) newline"
"guy walk next . next walk ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ walk ] = guy newline print ( next [ walk ] ) newline"
"baby be all . all be ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ be ] = baby newline print ( all [ be ] ) newline"
"woman wear black . black wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( black [ wear ] ) newline"
"red look content . red look ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ look ] = content newline print ( red [ look ] ) newline"
"woman walk while . woman walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = while newline print ( woman [ walk ] ) newline"
"orange robe white . white robe ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ robe ] = orange newline print ( white [ robe ] ) newline"
"observer stare two . observer stare ?","if entities . find ( observer ) ! = None : newline newtab entities [ observer ] [ stare ] = two newline print ( observer [ stare ] ) newline"
"child be young . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = young newline print ( child [ be ] ) newline"
"person carve wooden . wooden carve ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ carve ] = person newline print ( wooden [ carve ] ) newline"
"girl be staring . staring be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( staring [ be ] ) newline"
"biker speed boat . biker speed ?","if entities . find ( biker ) ! = None : newline newtab entities [ biker ] [ speed ] = boat newline print ( biker [ speed ] ) newline"
"smoke fill out . out fill ?","if entities . find ( smoke ) ! = None : newline newtab entities [ smoke ] [ fill ] = smoke newline print ( out [ fill ] ) newline"
"dog be asleep . asleep be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( asleep [ be ] ) newline"
"people be screaming . screaming be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( screaming [ be ] ) newline"
"outfit be laughing . laughing be ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ be ] = outfit newline print ( laughing [ be ] ) newline"
"stadium seat next . next seat ?","if entities . find ( stadium ) ! = None : newline newtab entities [ stadium ] [ seat ] = stadium newline print ( next [ seat ] ) newline"
"kid sit next . next sit ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ sit ] = kid newline print ( next [ sit ] ) newline"
"hair be belongings . hair be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = belongings newline print ( hair [ be ] ) newline"
"man toss plastic . plastic toss ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ toss ] = man newline print ( plastic [ toss ] ) newline"
"woman dress people . woman dress ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dress ] = people newline print ( woman [ dress ] ) newline"
"green shirt next . next shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = green newline print ( next [ shirt ] ) newline"
"red uniform one . one uniform ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ uniform ] = red newline print ( one [ uniform ] ) newline"
"man walk or . man walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = or newline print ( man [ walk ] ) newline"
"people be featured . featured be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( featured [ be ] ) newline"
"orange vest next . next vest ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ vest ] = orange newline print ( next [ vest ] ) newline"
"red dress man . red dress ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ dress ] = man newline print ( red [ dress ] ) newline"
"band be full . full be ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ be ] = band newline print ( full [ be ] ) newline"
"woman ride bike . woman ride ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ ride ] = bike newline print ( woman [ ride ] ) newline"
"man run side . man run ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ run ] = side newline print ( man [ run ] ) newline"
"child be laughing . laughing be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( laughing [ be ] ) newline"
"people surround one . one surround ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ surround ] = people newline print ( one [ surround ] ) newline"
"bus pass out . out pass ?","if entities . find ( bus ) ! = None : newline newtab entities [ bus ] [ pass ] = bus newline print ( out [ pass ] ) newline"
"man attach white . white attach ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ attach ] = man newline print ( white [ attach ] ) newline"
"woman be sledding . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sledding newline print ( woman [ be ] ) newline"
"woman be laughing . laughing be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( laughing [ be ] ) newline"
"boy play pool . boy play ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ play ] = pool newline print ( boy [ play ] ) newline"
"guy do some . some do ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ do ] = guy newline print ( some [ do ] ) newline"
"dog wear black . black wear ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ wear ] = dog newline print ( black [ wear ] ) newline"
"brick build courtyard . brick build ?","if entities . find ( brick ) ! = None : newline newtab entities [ brick ] [ build ] = courtyard newline print ( brick [ build ] ) newline"
"couple walk alone . alone walk ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ walk ] = couple newline print ( alone [ walk ] ) newline"
"people be group . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = group newline print ( people [ be ] ) newline"
"people drink canned . canned drink ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ drink ] = people newline print ( canned [ drink ] ) newline"
"cyclist do some . some do ?","if entities . find ( cyclist ) ! = None : newline newtab entities [ cyclist ] [ do ] = cyclist newline print ( some [ do ] ) newline"
"men ride horse . men ride ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ ride ] = horse newline print ( men [ ride ] ) newline"
"people wait next . next wait ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ wait ] = people newline print ( next [ wait ] ) newline"
"boy be dark . dark be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( dark [ be ] ) newline"
"vendor wear colorful . colorful wear ?","if entities . find ( vendor ) ! = None : newline newtab entities [ vendor ] [ wear ] = vendor newline print ( colorful [ wear ] ) newline"
"boy be staring . staring be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( staring [ be ] ) newline"
"teeth bare it . teeth bare ?","if entities . find ( teeth ) ! = None : newline newtab entities [ teeth ] [ bare ] = it newline print ( teeth [ bare ] ) newline"
"red shirt light . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = light newline print ( red [ shirt ] ) newline"
"jacket be pole . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = pole newline print ( jacket [ be ] ) newline"
"man take great . great take ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ take ] = man newline print ( great [ take ] ) newline"
"person open box . person open ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ open ] = box newline print ( person [ open ] ) newline"
"men work space . men work ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ work ] = space newline print ( men [ work ] ) newline"
"cowboy ride horse . cowboy ride ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ ride ] = horse newline print ( cowboy [ ride ] ) newline"
"racket be people . racket be ?","if entities . find ( racket ) ! = None : newline newtab entities [ racket ] [ be ] = people newline print ( racket [ be ] ) newline"
"red pant or . red pant ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ pant ] = or newline print ( red [ pant ] ) newline"
"man sit net . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = net newline print ( man [ sit ] ) newline"
"people be open . open be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( open [ be ] ) newline"
"two police officer . two police ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ police ] = officer newline print ( two [ police ] ) newline"
"man be laughing . laughing be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( laughing [ be ] ) newline"
"woman hold yellow . yellow hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = woman newline print ( yellow [ hold ] ) newline"
"people stand next . next stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( next [ stand ] ) newline"
"man be swinging . swinging be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( swinging [ be ] ) newline"
"window shop bag . window shop ?","if entities . find ( window ) ! = None : newline newtab entities [ window ] [ shop ] = bag newline print ( window [ shop ] ) newline"
"lady walk alone . alone walk ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ walk ] = lady newline print ( alone [ walk ] ) newline"
"guy set while . guy set ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ set ] = while newline print ( guy [ set ] ) newline"
"food cook some . some cook ?","if entities . find ( food ) ! = None : newline newtab entities [ food ] [ cook ] = food newline print ( some [ cook ] ) newline"
"people wait next . next wait ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ wait ] = people newline print ( next [ wait ] ) newline"
"people shop late . late shop ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ shop ] = people newline print ( late [ shop ] ) newline"
"red vest next . next vest ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ vest ] = red newline print ( next [ vest ] ) newline"
"people play guitar . people play ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ play ] = guitar newline print ( people [ play ] ) newline"
"man have white . white have ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ have ] = man newline print ( white [ have ] ) newline"
"boy look garden . boy look ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ look ] = garden newline print ( boy [ look ] ) newline"
"ethnicity wait next . next wait ?","if entities . find ( ethnicity ) ! = None : newline newtab entities [ ethnicity ] [ wait ] = ethnicity newline print ( next [ wait ] ) newline"
"jersey look out . out look ?","if entities . find ( jersey ) ! = None : newline newtab entities [ jersey ] [ look ] = jersey newline print ( out [ look ] ) newline"
"man be earphone . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = earphone newline print ( man [ be ] ) newline"
"trolley be miniature . trolley be ?","if entities . find ( trolley ) ! = None : newline newtab entities [ trolley ] [ be ] = miniature newline print ( trolley [ be ] ) newline"
"dog fetch white . white fetch ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ fetch ] = dog newline print ( white [ fetch ] ) newline"
"jacket play guitar . jacket play ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ play ] = guitar newline print ( jacket [ play ] ) newline"
"sweatshirt be rock . sweatshirt be ?","if entities . find ( sweatshirt ) ! = None : newline newtab entities [ sweatshirt ] [ be ] = rock newline print ( sweatshirt [ be ] ) newline"
"dog swim underwater . underwater swim ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ swim ] = dog newline print ( underwater [ swim ] ) newline"
"body punch bag . body punch ?","if entities . find ( body ) ! = None : newline newtab entities [ body ] [ punch ] = bag newline print ( body [ punch ] ) newline"
"boy climb out . out climb ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ climb ] = boy newline print ( out [ climb ] ) newline"
"person have food . person have ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ have ] = food newline print ( person [ have ] ) newline"
"firefighter respond white . white respond ?","if entities . find ( firefighter ) ! = None : newline newtab entities [ firefighter ] [ respond ] = firefighter newline print ( white [ respond ] ) newline"
"person look young . person look ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ look ] = young newline print ( person [ look ] ) newline"
"girl stand next . next stand ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ stand ] = girl newline print ( next [ stand ] ) newline"
"dog be white . white be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( white [ be ] ) newline"
"people jog next . next jog ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ jog ] = people newline print ( next [ jog ] ) newline"
"red pant balance . red pant ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ pant ] = balance newline print ( red [ pant ] ) newline"
"woman wear black . black wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( black [ wear ] ) newline"
"guy fly low . low fly ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ fly ] = guy newline print ( low [ fly ] ) newline"
"man ride high . high ride ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ ride ] = man newline print ( high [ ride ] ) newline"
"dog look hut . dog look ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ look ] = hut newline print ( dog [ look ] ) newline"
"people serve white . white serve ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ serve ] = people newline print ( white [ serve ] ) newline"
"man jump out . out jump ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ jump ] = man newline print ( out [ jump ] ) newline"
"jeans be several . several be ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ be ] = jeans newline print ( several [ be ] ) newline"
"dog wear ceremonial . ceremonial wear ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ wear ] = dog newline print ( ceremonial [ wear ] ) newline"
"people walk two . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = two newline print ( people [ walk ] ) newline"
"man lean out . out lean ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ lean ] = man newline print ( out [ lean ] ) newline"
"man be high . high be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( high [ be ] ) newline"
"who be open . open be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( open [ be ] ) newline"
"woman wear blue . blue wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( blue [ wear ] ) newline"
"key be napping . napping be ?","if entities . find ( key ) ! = None : newline newtab entities [ key ] [ be ] = key newline print ( napping [ be ] ) newline"
"men carry item . men carry ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ carry ] = item newline print ( men [ carry ] ) newline"
"woman be two . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = two newline print ( woman [ be ] ) newline"
"cliff overlook scenic . scenic overlook ?","if entities . find ( cliff ) ! = None : newline newtab entities [ cliff ] [ overlook ] = cliff newline print ( scenic [ overlook ] ) newline"
"woman be men . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = men newline print ( woman [ be ] ) newline"
"who have beautiful . beautiful have ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ have ] = who newline print ( beautiful [ have ] ) newline"
"woman unpack small . small unpack ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ unpack ] = woman newline print ( small [ unpack ] ) newline"
"two train white . white train ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ train ] = two newline print ( white [ train ] ) newline"
"man wear hijab . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = hijab newline print ( man [ wear ] ) newline"
"counter try two . counter try ?","if entities . find ( counter ) ! = None : newline newtab entities [ counter ] [ try ] = two newline print ( counter [ try ] ) newline"
"baby play acoustic . acoustic play ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ play ] = baby newline print ( acoustic [ play ] ) newline"
"man walk trough . man walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = trough newline print ( man [ walk ] ) newline"
"people kneel man . people kneel ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ kneel ] = man newline print ( people [ kneel ] ) newline"
"dog jump high . high jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = dog newline print ( high [ jump ] ) newline"
"orange vest wave . orange vest ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ vest ] = wave newline print ( orange [ vest ] ) newline"
"family be spray . family be ?","if entities . find ( family ) ! = None : newline newtab entities [ family ] [ be ] = spray newline print ( family [ be ] ) newline"
"woman play next . next play ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ play ] = woman newline print ( next [ play ] ) newline"
"hood be older . older be ?","if entities . find ( hood ) ! = None : newline newtab entities [ hood ] [ be ] = hood newline print ( older [ be ] ) newline"
"red uniform one . one uniform ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ uniform ] = red newline print ( one [ uniform ] ) newline"
"boy be distance . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = distance newline print ( boy [ be ] ) newline"
"people be naked . naked be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( naked [ be ] ) newline"
"cup look out . out look ?","if entities . find ( cup ) ! = None : newline newtab entities [ cup ] [ look ] = cup newline print ( out [ look ] ) newline"
"child smile underwater . underwater smile ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ smile ] = child newline print ( underwater [ smile ] ) newline"
"sidewalk wear different . different wear ?","if entities . find ( sidewalk ) ! = None : newline newtab entities [ sidewalk ] [ wear ] = sidewalk newline print ( different [ wear ] ) newline"
"bridesmaid wear white . white wear ?","if entities . find ( bridesmaid ) ! = None : newline newtab entities [ bridesmaid ] [ wear ] = bridesmaid newline print ( white [ wear ] ) newline"
"juggler sit next . next sit ?","if entities . find ( juggler ) ! = None : newline newtab entities [ juggler ] [ sit ] = juggler newline print ( next [ sit ] ) newline"
"he be all . all be ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ be ] = he newline print ( all [ be ] ) newline"
"girl slide door . girl slide ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ slide ] = door newline print ( girl [ slide ] ) newline"
"jersey play various . various play ?","if entities . find ( jersey ) ! = None : newline newtab entities [ jersey ] [ play ] = jersey newline print ( various [ play ] ) newline"
"child jump an . child jump ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ jump ] = an newline print ( child [ jump ] ) newline"
"boy lean dog . boy lean ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ lean ] = dog newline print ( boy [ lean ] ) newline"
"lane try out . out try ?","if entities . find ( lane ) ! = None : newline newtab entities [ lane ] [ try ] = lane newline print ( out [ try ] ) newline"
"rooftop hold camera . rooftop hold ?","if entities . find ( rooftop ) ! = None : newline newtab entities [ rooftop ] [ hold ] = camera newline print ( rooftop [ hold ] ) newline"
"people walk next . next walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( next [ walk ] ) newline"
"dog leap stance . dog leap ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ leap ] = stance newline print ( dog [ leap ] ) newline"
"man stand out . out stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( out [ stand ] ) newline"
"spectator look out . out look ?","if entities . find ( spectator ) ! = None : newline newtab entities [ spectator ] [ look ] = spectator newline print ( out [ look ] ) newline"
"girl hold it . girl hold ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ hold ] = it newline print ( girl [ hold ] ) newline"
"dog run dog . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( dog [ run ] ) newline"
"man draw colorful . colorful draw ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ draw ] = man newline print ( colorful [ draw ] ) newline"
"boy hold out . out hold ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ hold ] = boy newline print ( out [ hold ] ) newline"
"people engage one . one engage ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ engage ] = people newline print ( one [ engage ] ) newline"
"dog be indoor . indoor be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( indoor [ be ] ) newline"
"man ride bike . man ride ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ ride ] = bike newline print ( man [ ride ] ) newline"
"three park next . next park ?","if entities . find ( three ) ! = None : newline newtab entities [ three ] [ park ] = three newline print ( next [ park ] ) newline"
"cyclist wear orange . cyclist wear ?","if entities . find ( cyclist ) ! = None : newline newtab entities [ cyclist ] [ wear ] = orange newline print ( cyclist [ wear ] ) newline"
"girl be sleeping . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = sleeping newline print ( girl [ be ] ) newline"
"red shirt half . half shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( half [ shirt ] ) newline"
"dancer pose an . dancer pose ?","if entities . find ( dancer ) ! = None : newline newtab entities [ dancer ] [ pose ] = an newline print ( dancer [ pose ] ) newline"
"man sell some . some sell ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sell ] = man newline print ( some [ sell ] ) newline"
"bike lead another . another lead ?","if entities . find ( bike ) ! = None : newline newtab entities [ bike ] [ lead ] = bike newline print ( another [ lead ] ) newline"
"red paint similar . similar paint ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ paint ] = red newline print ( similar [ paint ] ) newline"
"suit be an . suit be ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ be ] = an newline print ( suit [ be ] ) newline"
"people stroll arm . people stroll ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stroll ] = arm newline print ( people [ stroll ] ) newline"
"while stand next . next stand ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ stand ] = while newline print ( next [ stand ] ) newline"
"baby sit side . baby sit ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ sit ] = side newline print ( baby [ sit ] ) newline"
"hair be visible . visible be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = hair newline print ( visible [ be ] ) newline"
"men be ready . ready be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( ready [ be ] ) newline"
"dog run session . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = session newline print ( dog [ run ] ) newline"
"family eat out . out eat ?","if entities . find ( family ) ! = None : newline newtab entities [ family ] [ eat ] = family newline print ( out [ eat ] ) newline"
"costume gaze two . costume gaze ?","if entities . find ( costume ) ! = None : newline newtab entities [ costume ] [ gaze ] = two newline print ( costume [ gaze ] ) newline"
"people sit next . next sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( next [ sit ] ) newline"
"sand sculpture while . sand sculpture ?","if entities . find ( sand ) ! = None : newline newtab entities [ sand ] [ sculpture ] = while newline print ( sand [ sculpture ] ) newline"
"woman skate rink . woman skate ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ skate ] = rink newline print ( woman [ skate ] ) newline"
"while smile next . next smile ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ smile ] = while newline print ( next [ smile ] ) newline"
"child gather next . next gather ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ gather ] = child newline print ( next [ gather ] ) newline"
"person be belongings . person be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = belongings newline print ( person [ be ] ) newline"
"rock climb an . rock climb ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ climb ] = an newline print ( rock [ climb ] ) newline"
"man ride high . high ride ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ ride ] = man newline print ( high [ ride ] ) newline"
"person swim trunks . person swim ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ swim ] = trunks newline print ( person [ swim ] ) newline"
"people wait area . people wait ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ wait ] = area newline print ( people [ wait ] ) newline"
"lady wear orange . lady wear ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ wear ] = orange newline print ( lady [ wear ] ) newline"
"woman wear protective . protective wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( protective [ wear ] ) newline"
"man be numerous . numerous be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( numerous [ be ] ) newline"
"cheerleader perform an . cheerleader perform ?","if entities . find ( cheerleader ) ! = None : newline newtab entities [ cheerleader ] [ perform ] = an newline print ( cheerleader [ perform ] ) newline"
"child sit next . next sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = child newline print ( next [ sit ] ) newline"
"sweater talk while . sweater talk ?","if entities . find ( sweater ) ! = None : newline newtab entities [ sweater ] [ talk ] = while newline print ( sweater [ talk ] ) newline"
"men play position . men play ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ play ] = position newline print ( men [ play ] ) newline"
"person jump tent . person jump ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ jump ] = tent newline print ( person [ jump ] ) newline"
"girl play out . out play ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ play ] = girl newline print ( out [ play ] ) newline"
"student demonstrate life . student demonstrate ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ demonstrate ] = life newline print ( student [ demonstrate ] ) newline"
"woman be neck . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = neck newline print ( woman [ be ] ) newline"
"child be an . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = an newline print ( child [ be ] ) newline"
"men look guy . men look ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ look ] = guy newline print ( men [ look ] ) newline"
"woman hike white . white hike ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hike ] = woman newline print ( white [ hike ] ) newline"
"green grass next . next grass ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ grass ] = green newline print ( next [ grass ] ) newline"
"bench take picture . bench take ?","if entities . find ( bench ) ! = None : newline newtab entities [ bench ] [ take ] = picture newline print ( bench [ take ] ) newline"
"spaghetti be an . spaghetti be ?","if entities . find ( spaghetti ) ! = None : newline newtab entities [ spaghetti ] [ be ] = an newline print ( spaghetti [ be ] ) newline"
"woman be ready . ready be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( ready [ be ] ) newline"
"outfit flap white . white flap ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ flap ] = outfit newline print ( white [ flap ] ) newline"
"oxford shirt slide . oxford shirt ?","if entities . find ( oxford ) ! = None : newline newtab entities [ oxford ] [ shirt ] = slide newline print ( oxford [ shirt ] ) newline"
"man walk next . next walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = man newline print ( next [ walk ] ) newline"
"helmet kayak or . helmet kayak ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ kayak ] = or newline print ( helmet [ kayak ] ) newline"
"man wear false . false wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( false [ wear ] ) newline"
"man be intimate . intimate be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( intimate [ be ] ) newline"
"people sit or . people sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = or newline print ( people [ sit ] ) newline"
"man be red . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = red newline print ( man [ be ] ) newline"
"people carry many . many carry ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ carry ] = people newline print ( many [ carry ] ) newline"
"apartment build window . apartment build ?","if entities . find ( apartment ) ! = None : newline newtab entities [ apartment ] [ build ] = window newline print ( apartment [ build ] ) newline"
"man be out . out be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( out [ be ] ) newline"
"character write while . character write ?","if entities . find ( character ) ! = None : newline newtab entities [ character ] [ write ] = while newline print ( character [ write ] ) newline"
"child be asleep . asleep be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( asleep [ be ] ) newline"
"boy wear helmet . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = helmet newline print ( boy [ wear ] ) newline"
"boy be rock . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = rock newline print ( boy [ be ] ) newline"
"woman be laughing . laughing be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( laughing [ be ] ) newline"
"biker wear red . biker wear ?","if entities . find ( biker ) ! = None : newline newtab entities [ biker ] [ wear ] = red newline print ( biker [ wear ] ) newline"
"dog jump while . dog jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = while newline print ( dog [ jump ] ) newline"
"woman walk home . woman walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = home newline print ( woman [ walk ] ) newline"
"boy jump out . out jump ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ jump ] = boy newline print ( out [ jump ] ) newline"
"dog look content . dog look ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ look ] = content newline print ( dog [ look ] ) newline"
"machine build next . next build ?","if entities . find ( machine ) ! = None : newline newtab entities [ machine ] [ build ] = machine newline print ( next [ build ] ) newline"
"orange backpack staring . staring backpack ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ backpack ] = orange newline print ( staring [ backpack ] ) newline"
"pool get it . pool get ?","if entities . find ( pool ) ! = None : newline newtab entities [ pool ] [ get ] = it newline print ( pool [ get ] ) newline"
"ice cream out . out cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = ice newline print ( out [ cream ] ) newline"
"man do dirty . dirty do ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ do ] = man newline print ( dirty [ do ] ) newline"
"helmet be an . helmet be ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ be ] = an newline print ( helmet [ be ] ) newline"
"plaid shirt uniform . uniform shirt ?","if entities . find ( plaid ) ! = None : newline newtab entities [ plaid ] [ shirt ] = plaid newline print ( uniform [ shirt ] ) newline"
"people be sword . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = sword newline print ( people [ be ] ) newline"
"top be next . next be ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ be ] = top newline print ( next [ be ] ) newline"
"native be ice . native be ?","if entities . find ( native ) ! = None : newline newtab entities [ native ] [ be ] = ice newline print ( native [ be ] ) newline"
"people perform an . people perform ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ perform ] = an newline print ( people [ perform ] ) newline"
"man be swinging . swinging be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( swinging [ be ] ) newline"
"while look man . while look ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ look ] = man newline print ( while [ look ] ) newline"
"man be open . open be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( open [ be ] ) newline"
"street have some . some have ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ have ] = street newline print ( some [ have ] ) newline"
"woman be next . next be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( next [ be ] ) newline"
"bird fly out . out fly ?","if entities . find ( bird ) ! = None : newline newtab entities [ bird ] [ fly ] = bird newline print ( out [ fly ] ) newline"
"handcart be teaching . handcart be ?","if entities . find ( handcart ) ! = None : newline newtab entities [ handcart ] [ be ] = teaching newline print ( handcart [ be ] ) newline"
"people paddle out . out paddle ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ paddle ] = people newline print ( out [ paddle ] ) newline"
"bride groom kiss . bride groom ?","if entities . find ( bride ) ! = None : newline newtab entities [ bride ] [ groom ] = kiss newline print ( bride [ groom ] ) newline"
"people watch other . other watch ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ watch ] = people newline print ( other [ watch ] ) newline"
"woman wear colorful . colorful wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( colorful [ wear ] ) newline"
"soldier sit while . soldier sit ?","if entities . find ( soldier ) ! = None : newline newtab entities [ soldier ] [ sit ] = while newline print ( soldier [ sit ] ) newline"
"woman wear yellow . yellow wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( yellow [ wear ] ) newline"
"woman dress family . woman dress ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dress ] = family newline print ( woman [ dress ] ) newline"
"girl eat fast . fast eat ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ eat ] = girl newline print ( fast [ eat ] ) newline"
"ice cream out . out cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = ice newline print ( out [ cream ] ) newline"
"man be screaming . screaming be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( screaming [ be ] ) newline"
"outfit grill food . outfit grill ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ grill ] = food newline print ( outfit [ grill ] ) newline"
"head face drawers . head face ?","if entities . find ( head ) ! = None : newline newtab entities [ head ] [ face ] = drawers newline print ( head [ face ] ) newline"
"child climb out . out climb ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ climb ] = child newline print ( out [ climb ] ) newline"
"man be ready . ready be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( ready [ be ] ) newline"
"people be sunday . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = sunday newline print ( people [ be ] ) newline"
"guy be people . guy be ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ be ] = people newline print ( guy [ be ] ) newline"
"lake surround woman . lake surround ?","if entities . find ( lake ) ! = None : newline newtab entities [ lake ] [ surround ] = woman newline print ( lake [ surround ] ) newline"
"woman sell some . some sell ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sell ] = woman newline print ( some [ sell ] ) newline"
"child smile next . next smile ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ smile ] = child newline print ( next [ smile ] ) newline"
"top lay brick . top lay ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ lay ] = brick newline print ( top [ lay ] ) newline"
"man look man . man look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = man newline print ( man [ look ] ) newline"
"horse rope toy . horse rope ?","if entities . find ( horse ) ! = None : newline newtab entities [ horse ] [ rope ] = toy newline print ( horse [ rope ] ) newline"
"dog run careful . careful run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( careful [ run ] ) newline"
"child walk four . child walk ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ walk ] = four newline print ( child [ walk ] ) newline"
"snowboarder be earphone . snowboarder be ?","if entities . find ( snowboarder ) ! = None : newline newtab entities [ snowboarder ] [ be ] = earphone newline print ( snowboarder [ be ] ) newline"
"kid be metalworking . kid be ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ be ] = metalworking newline print ( kid [ be ] ) newline"
"piece shape architecture . piece shape ?","if entities . find ( piece ) ! = None : newline newtab entities [ piece ] [ shape ] = architecture newline print ( piece [ shape ] ) newline"
"boy wear white . white wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = boy newline print ( white [ wear ] ) newline"
"girl hold multicolored . multicolored hold ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ hold ] = girl newline print ( multicolored [ hold ] ) newline"
"cowboy hat carousing . carousing hat ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ hat ] = cowboy newline print ( carousing [ hat ] ) newline"
"snowboarder go ice . snowboarder go ?","if entities . find ( snowboarder ) ! = None : newline newtab entities [ snowboarder ] [ go ] = ice newline print ( snowboarder [ go ] ) newline"
"red frame photo . red frame ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ frame ] = photo newline print ( red [ frame ] ) newline"
"patron wait next . next wait ?","if entities . find ( patron ) ! = None : newline newtab entities [ patron ] [ wait ] = patron newline print ( next [ wait ] ) newline"
"woman be underway . underway be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( underway [ be ] ) newline"
"person stand alone . alone stand ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ stand ] = person newline print ( alone [ stand ] ) newline"
"green shirt swinging . swinging shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = green newline print ( swinging [ shirt ] ) newline"
"woman present another . another present ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ present ] = woman newline print ( another [ present ] ) newline"
"skateboarder do an . skateboarder do ?","if entities . find ( skateboarder ) ! = None : newline newtab entities [ skateboarder ] [ do ] = an newline print ( skateboarder [ do ] ) newline"
"man be screaming . screaming be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( screaming [ be ] ) newline"
"dog be painted . painted be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( painted [ be ] ) newline"
"men perform an . men perform ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ perform ] = an newline print ( men [ perform ] ) newline"
"girl clean trash . girl clean ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ clean ] = trash newline print ( girl [ clean ] ) newline"
"dog jump house . dog jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = house newline print ( dog [ jump ] ) newline"
"sign warn cone . sign warn ?","if entities . find ( sign ) ! = None : newline newtab entities [ sign ] [ warn ] = cone newline print ( sign [ warn ] ) newline"
"dog swim competition . dog swim ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ swim ] = competition newline print ( dog [ swim ] ) newline"
"while sit next . next sit ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ sit ] = while newline print ( next [ sit ] ) newline"
"girl play electric . electric play ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ play ] = girl newline print ( electric [ play ] ) newline"
"people be laughing . laughing be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( laughing [ be ] ) newline"
"people be two . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = two newline print ( people [ be ] ) newline"
"while wear sandal . while wear ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ wear ] = sandal newline print ( while [ wear ] ) newline"
"legs cross city . legs cross ?","if entities . find ( legs ) ! = None : newline newtab entities [ legs ] [ cross ] = city newline print ( legs [ cross ] ) newline"
"suit recline next . next recline ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ recline ] = suit newline print ( next [ recline ] ) newline"
"men play ice . men play ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ play ] = ice newline print ( men [ play ] ) newline"
"festival involve object . festival involve ?","if entities . find ( festival ) ! = None : newline newtab entities [ festival ] [ involve ] = object newline print ( festival [ involve ] ) newline"
"boy be sleeping . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = sleeping newline print ( boy [ be ] ) newline"
"team stand face . team stand ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ stand ] = face newline print ( team [ stand ] ) newline"
"wedding clothe next . next clothe ?","if entities . find ( wedding ) ! = None : newline newtab entities [ wedding ] [ clothe ] = wedding newline print ( next [ clothe ] ) newline"
"rider pass food . rider pass ?","if entities . find ( rider ) ! = None : newline newtab entities [ rider ] [ pass ] = food newline print ( rider [ pass ] ) newline"
"toddler work environment . toddler work ?","if entities . find ( toddler ) ! = None : newline newtab entities [ toddler ] [ work ] = environment newline print ( toddler [ work ] ) newline"
"suit be next . next be ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ be ] = suit newline print ( next [ be ] ) newline"
"people be next . next be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( next [ be ] ) newline"
"people seem two . people seem ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ seem ] = two newline print ( people [ seem ] ) newline"
"palm tree white . white tree ?","if entities . find ( palm ) ! = None : newline newtab entities [ palm ] [ tree ] = palm newline print ( white [ tree ] ) newline"
"dog play some . some play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = dog newline print ( some [ play ] ) newline"
"man look out . out look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = man newline print ( out [ look ] ) newline"
"people stand next . next stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( next [ stand ] ) newline"
"boot sit man . boot sit ?","if entities . find ( boot ) ! = None : newline newtab entities [ boot ] [ sit ] = man newline print ( boot [ sit ] ) newline"
"man sell handmade . handmade sell ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sell ] = man newline print ( handmade [ sell ] ) newline"
"bystander watch another . another watch ?","if entities . find ( bystander ) ! = None : newline newtab entities [ bystander ] [ watch ] = bystander newline print ( another [ watch ] ) newline"
"woman wear face . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = face newline print ( woman [ wear ] ) newline"
"girl walk out . out walk ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ walk ] = girl newline print ( out [ walk ] ) newline"
"lady paint mural . lady paint ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ paint ] = mural newline print ( lady [ paint ] ) newline"
"while hold paper . while hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = paper newline print ( while [ hold ] ) newline"
"men surround one . one surround ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ surround ] = men newline print ( one [ surround ] ) newline"
"outfit milk reindeer . outfit milk ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ milk ] = reindeer newline print ( outfit [ milk ] ) newline"
"helmet be two . helmet be ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ be ] = two newline print ( helmet [ be ] ) newline"
"dog jump suite . dog jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = suite newline print ( dog [ jump ] ) newline"
"dog be orange . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = orange newline print ( dog [ be ] ) newline"
"boy spay white . white spay ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ spay ] = boy newline print ( white [ spay ] ) newline"
"boy examine orange . boy examine ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ examine ] = orange newline print ( boy [ examine ] ) newline"
"man fill trash . man fill ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ fill ] = trash newline print ( man [ fill ] ) newline"
"people be married . married be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( married [ be ] ) newline"
"man be food . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = food newline print ( man [ be ] ) newline"
"boy be person . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = person newline print ( boy [ be ] ) newline"
"man wear apron . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = apron newline print ( man [ wear ] ) newline"
"dock view container . dock view ?","if entities . find ( dock ) ! = None : newline newtab entities [ dock ] [ view ] = container newline print ( dock [ view ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"headphone smile young . headphone smile ?","if entities . find ( headphone ) ! = None : newline newtab entities [ headphone ] [ smile ] = young newline print ( headphone [ smile ] ) newline"
"kid be several . several be ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ be ] = kid newline print ( several [ be ] ) newline"
"art sculpture while . art sculpture ?","if entities . find ( art ) ! = None : newline newtab entities [ art ] [ sculpture ] = while newline print ( art [ sculpture ] ) newline"
"boy play ultimate . ultimate play ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ play ] = boy newline print ( ultimate [ play ] ) newline"
"man be nude . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = nude newline print ( man [ be ] ) newline"
"wall use metal . wall use ?","if entities . find ( wall ) ! = None : newline newtab entities [ wall ] [ use ] = metal newline print ( wall [ use ] ) newline"
"jeans be two . jeans be ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ be ] = two newline print ( jeans [ be ] ) newline"
"man operate heavy . heavy operate ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ operate ] = man newline print ( heavy [ operate ] ) newline"
"people audition white . white audition ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ audition ] = people newline print ( white [ audition ] ) newline"
"doctor take outdoor . outdoor take ?","if entities . find ( doctor ) ! = None : newline newtab entities [ doctor ] [ take ] = doctor newline print ( outdoor [ take ] ) newline"
"woman cook chicken . woman cook ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ cook ] = chicken newline print ( woman [ cook ] ) newline"
"boy be upside . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = upside newline print ( boy [ be ] ) newline"
"boy skate white . white skate ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ skate ] = boy newline print ( white [ skate ] ) newline"
"child look cup . child look ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ look ] = cup newline print ( child [ look ] ) newline"
"dog play different . different play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = dog newline print ( different [ play ] ) newline"
"dog bound while . dog bound ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ bound ] = while newline print ( dog [ bound ] ) newline"
"men climb rock . men climb ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ climb ] = rock newline print ( men [ climb ] ) newline"
"sign protest white . white protest ?","if entities . find ( sign ) ! = None : newline newtab entities [ sign ] [ protest ] = sign newline print ( white [ protest ] ) newline"
"girl hold small . small hold ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ hold ] = girl newline print ( small [ hold ] ) newline"
"man give another . another give ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ give ] = man newline print ( another [ give ] ) newline"
"woman wear headphone . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = headphone newline print ( woman [ wear ] ) newline"
"helmet ride numerous . numerous ride ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ ride ] = helmet newline print ( numerous [ ride ] ) newline"
"blacksmith tool next . next tool ?","if entities . find ( blacksmith ) ! = None : newline newtab entities [ blacksmith ] [ tool ] = blacksmith newline print ( next [ tool ] ) newline"
"people watch other . other watch ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ watch ] = people newline print ( other [ watch ] ) newline"
"horse chase another . another chase ?","if entities . find ( horse ) ! = None : newline newtab entities [ horse ] [ chase ] = horse newline print ( another [ chase ] ) newline"
"walkman jog next . next jog ?","if entities . find ( walkman ) ! = None : newline newtab entities [ walkman ] [ jog ] = walkman newline print ( next [ jog ] ) newline"
"people walk while . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = while newline print ( people [ walk ] ) newline"
"man wear black . black wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( black [ wear ] ) newline"
"woman look redhead . woman look ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ look ] = redhead newline print ( woman [ look ] ) newline"
"child sit man . child sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = man newline print ( child [ sit ] ) newline"
"person wear sock . person wear ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ wear ] = sock newline print ( person [ wear ] ) newline"
"top hold an . top hold ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ hold ] = an newline print ( top [ hold ] ) newline"
"people eat while . people eat ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ eat ] = while newline print ( people [ eat ] ) newline"
"person play indoor . indoor play ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ play ] = person newline print ( indoor [ play ] ) newline"
"man try two . man try ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ try ] = two newline print ( man [ try ] ) newline"
"midair do mean . mean do ?","if entities . find ( midair ) ! = None : newline newtab entities [ midair ] [ do ] = midair newline print ( mean [ do ] ) newline"
"bottom perform martial . martial perform ?","if entities . find ( bottom ) ! = None : newline newtab entities [ bottom ] [ perform ] = bottom newline print ( martial [ perform ] ) newline"
"he be next . next be ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ be ] = he newline print ( next [ be ] ) newline"
"performer dress while . performer dress ?","if entities . find ( performer ) ! = None : newline newtab entities [ performer ] [ dress ] = while newline print ( performer [ dress ] ) newline"
"woman be referee . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = referee newline print ( woman [ be ] ) newline"
"sunglasses stand side . sunglasses stand ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ stand ] = side newline print ( sunglasses [ stand ] ) newline"
"london police officer . london police ?","if entities . find ( london ) ! = None : newline newtab entities [ london ] [ police ] = officer newline print ( london [ police ] ) newline"
"men stand side . men stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = side newline print ( men [ stand ] ) newline"
"two fan out . out fan ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ fan ] = two newline print ( out [ fan ] ) newline"
"man be teaching . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = teaching newline print ( man [ be ] ) newline"
"plaid shirt while . plaid shirt ?","if entities . find ( plaid ) ! = None : newline newtab entities [ plaid ] [ shirt ] = while newline print ( plaid [ shirt ] ) newline"
"dog run fast . fast run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( fast [ run ] ) newline"
"girl wave small . small wave ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wave ] = girl newline print ( small [ wave ] ) newline"
"paraphernalia stand chest . paraphernalia stand ?","if entities . find ( paraphernalia ) ! = None : newline newtab entities [ paraphernalia ] [ stand ] = chest newline print ( paraphernalia [ stand ] ) newline"
"water wear boot . water wear ?","if entities . find ( water ) ! = None : newline newtab entities [ water ] [ wear ] = boot newline print ( water [ wear ] ) newline"
"mother carry umbrella . mother carry ?","if entities . find ( mother ) ! = None : newline newtab entities [ mother ] [ carry ] = umbrella newline print ( mother [ carry ] ) newline"
"foreground exercise white . white exercise ?","if entities . find ( foreground ) ! = None : newline newtab entities [ foreground ] [ exercise ] = foreground newline print ( white [ exercise ] ) newline"
"patient use old . old use ?","if entities . find ( patient ) ! = None : newline newtab entities [ patient ] [ use ] = patient newline print ( old [ use ] ) newline"
"ceremony be an . ceremony be ?","if entities . find ( ceremony ) ! = None : newline newtab entities [ ceremony ] [ be ] = an newline print ( ceremony [ be ] ) newline"
"adult consume food . adult consume ?","if entities . find ( adult ) ! = None : newline newtab entities [ adult ] [ consume ] = food newline print ( adult [ consume ] ) newline"
"woman be featured . featured be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( featured [ be ] ) newline"
"people be laughing . laughing be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( laughing [ be ] ) newline"
"green hood white . white hood ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ hood ] = green newline print ( white [ hood ] ) newline"
"cigarette splash another . another splash ?","if entities . find ( cigarette ) ! = None : newline newtab entities [ cigarette ] [ splash ] = cigarette newline print ( another [ splash ] ) newline"
"woman be several . several be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( several [ be ] ) newline"
"two mope enthusiast . two mope ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ mope ] = enthusiast newline print ( two [ mope ] ) newline"
"three kite while . three kite ?","if entities . find ( three ) ! = None : newline newtab entities [ three ] [ kite ] = while newline print ( three [ kite ] ) newline"
"man be red . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = red newline print ( man [ be ] ) newline"
"man be unable . unable be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( unable [ be ] ) newline"
"gear be stupid . stupid be ?","if entities . find ( gear ) ! = None : newline newtab entities [ gear ] [ be ] = gear newline print ( stupid [ be ] ) newline"
"woman be mouth . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = mouth newline print ( woman [ be ] ) newline"
"boy practice soccer . boy practice ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ practice ] = soccer newline print ( boy [ practice ] ) newline"
"girl be trophy . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = trophy newline print ( girl [ be ] ) newline"
"people enjoy food . people enjoy ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ enjoy ] = food newline print ( people [ enjoy ] ) newline"
"someone walk don . someone walk ?","if entities . find ( someone ) ! = None : newline newtab entities [ someone ] [ walk ] = don newline print ( someone [ walk ] ) newline"
"gray raft white . white raft ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ raft ] = gray newline print ( white [ raft ] ) newline"
"man be sick . sick be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( sick [ be ] ) newline"
"green shirt balance . green shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = balance newline print ( green [ shirt ] ) newline"
"red tie point . red tie ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ tie ] = point newline print ( red [ tie ] ) newline"
"dreadlock talk next . next talk ?","if entities . find ( dreadlock ) ! = None : newline newtab entities [ dreadlock ] [ talk ] = dreadlock newline print ( next [ talk ] ) newline"
"man be an . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = an newline print ( man [ be ] ) newline"
"girl wear tan . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = tan newline print ( girl [ wear ] ) newline"
"boy be staring . staring be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( staring [ be ] ) newline"
"musician dress all . all dress ?","if entities . find ( musician ) ! = None : newline newtab entities [ musician ] [ dress ] = musician newline print ( all [ dress ] ) newline"
"woman be opening . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = opening newline print ( woman [ be ] ) newline"
"child be belongings . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = belongings newline print ( child [ be ] ) newline"
"boy practice martial . martial practice ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ practice ] = boy newline print ( martial [ practice ] ) newline"
"man hold eyeglasses . man hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = eyeglasses newline print ( man [ hold ] ) newline"
"skater wear blue . blue wear ?","if entities . find ( skater ) ! = None : newline newtab entities [ skater ] [ wear ] = skater newline print ( blue [ wear ] ) newline"
"men be laughing . laughing be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( laughing [ be ] ) newline"
"woman speak white . white speak ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ speak ] = woman newline print ( white [ speak ] ) newline"
"child be zombie . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = zombie newline print ( child [ be ] ) newline"
"man be parasailing . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = parasailing newline print ( man [ be ] ) newline"
"woman be distance . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = distance newline print ( woman [ be ] ) newline"
"cone shape light . light shape ?","if entities . find ( cone ) ! = None : newline newtab entities [ cone ] [ shape ] = cone newline print ( light [ shape ] ) newline"
"cup look doll . cup look ?","if entities . find ( cup ) ! = None : newline newtab entities [ cup ] [ look ] = doll newline print ( cup [ look ] ) newline"
"hair sit guy . hair sit ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ sit ] = guy newline print ( hair [ sit ] ) newline"
"man be staring . staring be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( staring [ be ] ) newline"
"man wear black . black wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( black [ wear ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"men be full . full be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( full [ be ] ) newline"
"corgi run next . next run ?","if entities . find ( corgi ) ! = None : newline newtab entities [ corgi ] [ run ] = corgi newline print ( next [ run ] ) newline"
"jacket be sleeping . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = sleeping newline print ( jacket [ be ] ) newline"
"people have some . some have ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ have ] = people newline print ( some [ have ] ) newline"
"child run while . child run ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ run ] = while newline print ( child [ run ] ) newline"
"people gather various . various gather ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ gather ] = people newline print ( various [ gather ] ) newline"
"office build next . next build ?","if entities . find ( office ) ! = None : newline newtab entities [ office ] [ build ] = office newline print ( next [ build ] ) newline"
"while surround one . one surround ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ surround ] = while newline print ( one [ surround ] ) newline"
"wheelchair be staged . staged be ?","if entities . find ( wheelchair ) ! = None : newline newtab entities [ wheelchair ] [ be ] = wheelchair newline print ( staged [ be ] ) newline"
"man wear white . white wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( white [ wear ] ) newline"
"player try two . player try ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ try ] = two newline print ( player [ try ] ) newline"
"dog walk out . out walk ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ walk ] = dog newline print ( out [ walk ] ) newline"
"son be girl . son be ?","if entities . find ( son ) ! = None : newline newtab entities [ son ] [ be ] = girl newline print ( son [ be ] ) newline"
"people be part . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = part newline print ( people [ be ] ) newline"
"leotard do some . some do ?","if entities . find ( leotard ) ! = None : newline newtab entities [ leotard ] [ do ] = leotard newline print ( some [ do ] ) newline"
"hair be out . out be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = hair newline print ( out [ be ] ) newline"
"man dress little . little dress ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ dress ] = man newline print ( little [ dress ] ) newline"
"bicyclist stay two . bicyclist stay ?","if entities . find ( bicyclist ) ! = None : newline newtab entities [ bicyclist ] [ stay ] = two newline print ( bicyclist [ stay ] ) newline"
"while hold two . while hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = two newline print ( while [ hold ] ) newline"
"boy be one . one be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( one [ be ] ) newline"
"people be all . all be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( all [ be ] ) newline"
"student be one . one be ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ be ] = student newline print ( one [ be ] ) newline"
"motorcyclist race coverall . motorcyclist race ?","if entities . find ( motorcyclist ) ! = None : newline newtab entities [ motorcyclist ] [ race ] = coverall newline print ( motorcyclist [ race ] ) newline"
"costume sing live . live sing ?","if entities . find ( costume ) ! = None : newline newtab entities [ costume ] [ sing ] = costume newline print ( live [ sing ] ) newline"
"top hold out . out hold ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ hold ] = top newline print ( out [ hold ] ) newline"
"orange shirt swinging . swinging shirt ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ shirt ] = orange newline print ( swinging [ shirt ] ) newline"
"people walk dog . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = dog newline print ( people [ walk ] ) newline"
"onlooker watch one . one watch ?","if entities . find ( onlooker ) ! = None : newline newtab entities [ onlooker ] [ watch ] = onlooker newline print ( one [ watch ] ) newline"
"game be unable . unable be ?","if entities . find ( game ) ! = None : newline newtab entities [ game ] [ be ] = game newline print ( unable [ be ] ) newline"
"man wear red . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = red newline print ( man [ wear ] ) newline"
"while drink beer . while drink ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ drink ] = beer newline print ( while [ drink ] ) newline"
"lady wear dark . dark wear ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ wear ] = lady newline print ( dark [ wear ] ) newline"
"man be india . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = india newline print ( man [ be ] ) newline"
"man ponder white . white ponder ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ ponder ] = man newline print ( white [ ponder ] ) newline"
"man be likely . likely be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( likely [ be ] ) newline"
"men be both . both be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( both [ be ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"woman be abdomen . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = abdomen newline print ( woman [ be ] ) newline"
"microphone have tribal . tribal have ?","if entities . find ( microphone ) ! = None : newline newtab entities [ microphone ] [ have ] = microphone newline print ( tribal [ have ] ) newline"
"child stand next . next stand ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ stand ] = child newline print ( next [ stand ] ) newline"
"poster string electrical . electrical string ?","if entities . find ( poster ) ! = None : newline newtab entities [ poster ] [ string ] = poster newline print ( electrical [ string ] ) newline"
"lady be all . all be ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ be ] = lady newline print ( all [ be ] ) newline"
"tuxedo play musical . musical play ?","if entities . find ( tuxedo ) ! = None : newline newtab entities [ tuxedo ] [ play ] = tuxedo newline print ( musical [ play ] ) newline"
"girl be girl . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( girl [ be ] ) newline"
"can walk while . can walk ?","if entities . find ( can ) ! = None : newline newtab entities [ can ] [ walk ] = while newline print ( can [ walk ] ) newline"
"eagle be sorting . eagle be ?","if entities . find ( eagle ) ! = None : newline newtab entities [ eagle ] [ be ] = sorting newline print ( eagle [ be ] ) newline"
"jeans stand or . jeans stand ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ stand ] = or newline print ( jeans [ stand ] ) newline"
"dog jump backward . backward jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = dog newline print ( backward [ jump ] ) newline"
"or ride uniform . uniform ride ?","if entities . find ( or ) ! = None : newline newtab entities [ or ] [ ride ] = or newline print ( uniform [ ride ] ) newline"
"snow tube white . white tube ?","if entities . find ( snow ) ! = None : newline newtab entities [ snow ] [ tube ] = snow newline print ( white [ tube ] ) newline"
"bird be sleeping . bird be ?","if entities . find ( bird ) ! = None : newline newtab entities [ bird ] [ be ] = sleeping newline print ( bird [ be ] ) newline"
"boy be sleeping . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = sleeping newline print ( boy [ be ] ) newline"
"tan dress all . all dress ?","if entities . find ( tan ) ! = None : newline newtab entities [ tan ] [ dress ] = tan newline print ( all [ dress ] ) newline"
"top be mouth . top be ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ be ] = mouth newline print ( top [ be ] ) newline"
"woman walk hand . woman walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = hand newline print ( woman [ walk ] ) newline"
"car be laughing . laughing be ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ be ] = car newline print ( laughing [ be ] ) newline"
"someone take great . great take ?","if entities . find ( someone ) ! = None : newline newtab entities [ someone ] [ take ] = someone newline print ( great [ take ] ) newline"
"city be spray . city be ?","if entities . find ( city ) ! = None : newline newtab entities [ city ] [ be ] = spray newline print ( city [ be ] ) newline"
"girl stand or . girl stand ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ stand ] = or newline print ( girl [ stand ] ) newline"
"holiday season photographer . holiday season ?","if entities . find ( holiday ) ! = None : newline newtab entities [ holiday ] [ season ] = photographer newline print ( holiday [ season ] ) newline"
"horse be sleeping . horse be ?","if entities . find ( horse ) ! = None : newline newtab entities [ horse ] [ be ] = sleeping newline print ( horse [ be ] ) newline"
"girl run next . next run ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ run ] = girl newline print ( next [ run ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"man be distance . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = distance newline print ( man [ be ] ) newline"
"man vacuum while . man vacuum ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ vacuum ] = while newline print ( man [ vacuum ] ) newline"
"dog be swinging . swinging be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( swinging [ be ] ) newline"
"safety vest next . next vest ?","if entities . find ( safety ) ! = None : newline newtab entities [ safety ] [ vest ] = safety newline print ( next [ vest ] ) newline"
"men jump high . high jump ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ jump ] = men newline print ( high [ jump ] ) newline"
"woman be sleeping . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sleeping newline print ( woman [ be ] ) newline"
"brown shirt text . brown shirt ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ shirt ] = text newline print ( brown [ shirt ] ) newline"
"woman be two . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = two newline print ( woman [ be ] ) newline"
"sand dun or . sand dun ?","if entities . find ( sand ) ! = None : newline newtab entities [ sand ] [ dun ] = or newline print ( sand [ dun ] ) newline"
"violinist walk next . next walk ?","if entities . find ( violinist ) ! = None : newline newtab entities [ violinist ] [ walk ] = violinist newline print ( next [ walk ] ) newline"
"boy play guitar . boy play ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ play ] = guitar newline print ( boy [ play ] ) newline"
"helmet ride horse . helmet ride ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ ride ] = horse newline print ( helmet [ ride ] ) newline"
"suit be ecstatic . ecstatic be ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ be ] = suit newline print ( ecstatic [ be ] ) newline"
"while bend halfway . halfway bend ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ bend ] = while newline print ( halfway [ bend ] ) newline"
"man be laughing . laughing be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( laughing [ be ] ) newline"
"collar shake water . collar shake ?","if entities . find ( collar ) ! = None : newline newtab entities [ collar ] [ shake ] = water newline print ( collar [ shake ] ) newline"
"bikini be whispering . bikini be ?","if entities . find ( bikini ) ! = None : newline newtab entities [ bikini ] [ be ] = whispering newline print ( bikini [ be ] ) newline"
"orange vest next . next vest ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ vest ] = orange newline print ( next [ vest ] ) newline"
"player attempt white . white attempt ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ attempt ] = player newline print ( white [ attempt ] ) newline"
"sweatshirt skateboard park . sweatshirt skateboard ?","if entities . find ( sweatshirt ) ! = None : newline newtab entities [ sweatshirt ] [ skateboard ] = park newline print ( sweatshirt [ skateboard ] ) newline"
"red tie dyed . dyed tie ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ tie ] = red newline print ( dyed [ tie ] ) newline"
"men be two . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = two newline print ( men [ be ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"man stand out . out stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( out [ stand ] ) newline"
"red shirt next . next shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( next [ shirt ] ) newline"
"musician dress all . all dress ?","if entities . find ( musician ) ! = None : newline newtab entities [ musician ] [ dress ] = musician newline print ( all [ dress ] ) newline"
"boy be people . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = people newline print ( boy [ be ] ) newline"
"silver motorcycle rider . silver motorcycle ?","if entities . find ( silver ) ! = None : newline newtab entities [ silver ] [ motorcycle ] = rider newline print ( silver [ motorcycle ] ) newline"
"girl be earphone . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = earphone newline print ( girl [ be ] ) newline"
"construction project white . white project ?","if entities . find ( construction ) ! = None : newline newtab entities [ construction ] [ project ] = construction newline print ( white [ project ] ) newline"
"road divide two . road divide ?","if entities . find ( road ) ! = None : newline newtab entities [ road ] [ divide ] = two newline print ( road [ divide ] ) newline"
"guitar look humanoid . guitar look ?","if entities . find ( guitar ) ! = None : newline newtab entities [ guitar ] [ look ] = humanoid newline print ( guitar [ look ] ) newline"
"woman be men . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = men newline print ( woman [ be ] ) newline"
"man wear red . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = red newline print ( man [ wear ] ) newline"
"snowboarder jump out . out jump ?","if entities . find ( snowboarder ) ! = None : newline newtab entities [ snowboarder ] [ jump ] = snowboarder newline print ( out [ jump ] ) newline"
"boy pick tomato . boy pick ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ pick ] = tomato newline print ( boy [ pick ] ) newline"
"player be sleeping . player be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = sleeping newline print ( player [ be ] ) newline"
"marking jump high . high jump ?","if entities . find ( marking ) ! = None : newline newtab entities [ marking ] [ jump ] = marking newline print ( high [ jump ] ) newline"
"person be people . person be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = people newline print ( person [ be ] ) newline"
"soldier uniform one . one uniform ?","if entities . find ( soldier ) ! = None : newline newtab entities [ soldier ] [ uniform ] = soldier newline print ( one [ uniform ] ) newline"
"man prepare food . man prepare ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ prepare ] = food newline print ( man [ prepare ] ) newline"
"man be red . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = red newline print ( man [ be ] ) newline"
"player try out . out try ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ try ] = player newline print ( out [ try ] ) newline"
"sunbather lie asleep . asleep lie ?","if entities . find ( sunbather ) ! = None : newline newtab entities [ sunbather ] [ lie ] = sunbather newline print ( asleep [ lie ] ) newline"
"red shirt man . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = man newline print ( red [ shirt ] ) newline"
"he explore an . he explore ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ explore ] = an newline print ( he [ explore ] ) newline"
"man wear gas . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = gas newline print ( man [ wear ] ) newline"
"pie eat some . some eat ?","if entities . find ( pie ) ! = None : newline newtab entities [ pie ] [ eat ] = pie newline print ( some [ eat ] ) newline"
"company shop next . next shop ?","if entities . find ( company ) ! = None : newline newtab entities [ company ] [ shop ] = company newline print ( next [ shop ] ) newline"
"brush be two . brush be ?","if entities . find ( brush ) ! = None : newline newtab entities [ brush ] [ be ] = two newline print ( brush [ be ] ) newline"
"woman be sleeping . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sleeping newline print ( woman [ be ] ) newline"
"boy sit guy . boy sit ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ sit ] = guy newline print ( boy [ sit ] ) newline"
"people stand side . people stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = side newline print ( people [ stand ] ) newline"
"man stand while . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = while newline print ( man [ stand ] ) newline"
"boy wear black . black wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = boy newline print ( black [ wear ] ) newline"
"orange vest while . orange vest ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ vest ] = while newline print ( orange [ vest ] ) newline"
"woman hold an . woman hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = an newline print ( woman [ hold ] ) newline"
"gown mix music . gown mix ?","if entities . find ( gown ) ! = None : newline newtab entities [ gown ] [ mix ] = music newline print ( gown [ mix ] ) newline"
"suit walk while . suit walk ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ walk ] = while newline print ( suit [ walk ] ) newline"
"street shade white . white shade ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ shade ] = street newline print ( white [ shade ] ) newline"
"redhead cover bridge . redhead cover ?","if entities . find ( redhead ) ! = None : newline newtab entities [ redhead ] [ cover ] = bridge newline print ( redhead [ cover ] ) newline"
"jacket be four . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = four newline print ( jacket [ be ] ) newline"
"woman lounge chair . woman lounge ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ lounge ] = chair newline print ( woman [ lounge ] ) newline"
"woman be two . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = two newline print ( woman [ be ] ) newline"
"person drive next . next drive ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ drive ] = person newline print ( next [ drive ] ) newline"
"green grass next . next grass ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ grass ] = green newline print ( next [ grass ] ) newline"
"dog wear traditional . traditional wear ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ wear ] = dog newline print ( traditional [ wear ] ) newline"
"pool give some . some give ?","if entities . find ( pool ) ! = None : newline newtab entities [ pool ] [ give ] = pool newline print ( some [ give ] ) newline"
"man do maintenance . man do ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ do ] = maintenance newline print ( man [ do ] ) newline"
"man wear jeans . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = jeans newline print ( man [ wear ] ) newline"
"dancer march white . white march ?","if entities . find ( dancer ) ! = None : newline newtab entities [ dancer ] [ march ] = dancer newline print ( white [ march ] ) newline"
"jean skirt dance . jean skirt ?","if entities . find ( jean ) ! = None : newline newtab entities [ jean ] [ skirt ] = dance newline print ( jean [ skirt ] ) newline"
"man wear costume . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = costume newline print ( man [ wear ] ) newline"
"child fly disc . child fly ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ fly ] = disc newline print ( child [ fly ] ) newline"
"sandal run next . next run ?","if entities . find ( sandal ) ! = None : newline newtab entities [ sandal ] [ run ] = sandal newline print ( next [ run ] ) newline"
"he walk out . out walk ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ walk ] = he newline print ( out [ walk ] ) newline"
"dog reach out . out reach ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ reach ] = dog newline print ( out [ reach ] ) newline"
"people shop window . people shop ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ shop ] = window newline print ( people [ shop ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"man climb while . man climb ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ climb ] = while newline print ( man [ climb ] ) newline"
"pig smile woman . pig smile ?","if entities . find ( pig ) ! = None : newline newtab entities [ pig ] [ smile ] = woman newline print ( pig [ smile ] ) newline"
"car speed boat . car speed ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ speed ] = boat newline print ( car [ speed ] ) newline"
"audience watch other . other watch ?","if entities . find ( audience ) ! = None : newline newtab entities [ audience ] [ watch ] = audience newline print ( other [ watch ] ) newline"
"cat hug woman . cat hug ?","if entities . find ( cat ) ! = None : newline newtab entities [ cat ] [ hug ] = woman newline print ( cat [ hug ] ) newline"
"hurdler leap high . high leap ?","if entities . find ( hurdler ) ! = None : newline newtab entities [ hurdler ] [ leap ] = hurdler newline print ( high [ leap ] ) newline"
"photo shop late . late shop ?","if entities . find ( photo ) ! = None : newline newtab entities [ photo ] [ shop ] = photo newline print ( late [ shop ] ) newline"
"couple be both . both be ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ be ] = couple newline print ( both [ be ] ) newline"
"woman be power . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = power newline print ( woman [ be ] ) newline"
"truck wear turban . truck wear ?","if entities . find ( truck ) ! = None : newline newtab entities [ truck ] [ wear ] = turban newline print ( truck [ wear ] ) newline"
"asian draw chinese . chinese draw ?","if entities . find ( asian ) ! = None : newline newtab entities [ asian ] [ draw ] = asian newline print ( chinese [ draw ] ) newline"
"child sit woman . child sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = woman newline print ( child [ sit ] ) newline"
"puppy be fun . puppy be ?","if entities . find ( puppy ) ! = None : newline newtab entities [ puppy ] [ be ] = fun newline print ( puppy [ be ] ) newline"
"someone wear all . all wear ?","if entities . find ( someone ) ! = None : newline newtab entities [ someone ] [ wear ] = someone newline print ( all [ wear ] ) newline"
"snowboarder catch an . snowboarder catch ?","if entities . find ( snowboarder ) ! = None : newline newtab entities [ snowboarder ] [ catch ] = an newline print ( snowboarder [ catch ] ) newline"
"jacket watch seagull . jacket watch ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ watch ] = seagull newline print ( jacket [ watch ] ) newline"
"woman embrace white . white embrace ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ embrace ] = woman newline print ( white [ embrace ] ) newline"
"men be staring . staring be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( staring [ be ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"crown be cool . cool be ?","if entities . find ( crown ) ! = None : newline newtab entities [ crown ] [ be ] = crown newline print ( cool [ be ] ) newline"
"bike lead two . bike lead ?","if entities . find ( bike ) ! = None : newline newtab entities [ bike ] [ lead ] = two newline print ( bike [ lead ] ) newline"
"boy be out . out be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( out [ be ] ) newline"
"man sit still . still sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( still [ sit ] ) newline"
"citizen talk next . next talk ?","if entities . find ( citizen ) ! = None : newline newtab entities [ citizen ] [ talk ] = citizen newline print ( next [ talk ] ) newline"
"people drum white . white drum ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ drum ] = people newline print ( white [ drum ] ) newline"
"boy skateboard next . next skateboard ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ skateboard ] = boy newline print ( next [ skateboard ] ) newline"
"people sit while . people sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = while newline print ( people [ sit ] ) newline"
"woman jump obstacle . woman jump ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ jump ] = obstacle newline print ( woman [ jump ] ) newline"
"while sew machine . while sew ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ sew ] = machine newline print ( while [ sew ] ) newline"
"jacket be sleeping . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = sleeping newline print ( jacket [ be ] ) newline"
"safety harness two . safety harness ?","if entities . find ( safety ) ! = None : newline newtab entities [ safety ] [ harness ] = two newline print ( safety [ harness ] ) newline"
"child be red . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = red newline print ( child [ be ] ) newline"
"cheerleader be three . cheerleader be ?","if entities . find ( cheerleader ) ! = None : newline newtab entities [ cheerleader ] [ be ] = three newline print ( cheerleader [ be ] ) newline"
"people play some . some play ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ play ] = people newline print ( some [ play ] ) newline"
"woman be men . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = men newline print ( woman [ be ] ) newline"
"man wear sunglasses . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = sunglasses newline print ( man [ wear ] ) newline"
"musician be asleep . asleep be ?","if entities . find ( musician ) ! = None : newline newtab entities [ musician ] [ be ] = musician newline print ( asleep [ be ] ) newline"
"dog drink water . dog drink ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ drink ] = water newline print ( dog [ drink ] ) newline"
"man stand man . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( man [ stand ] ) newline"
"people stand still . still stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( still [ stand ] ) newline"
"girl be tackler . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = tackler newline print ( girl [ be ] ) newline"
"bikers ride one . one ride ?","if entities . find ( bikers ) ! = None : newline newtab entities [ bikers ] [ ride ] = bikers newline print ( one [ ride ] ) newline"
"men wrestle white . white wrestle ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ wrestle ] = men newline print ( white [ wrestle ] ) newline"
"people ride bike . people ride ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ ride ] = bike newline print ( people [ ride ] ) newline"
"man wear overall . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = overall newline print ( man [ wear ] ) newline"
"gray sit next . next sit ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ sit ] = gray newline print ( next [ sit ] ) newline"
"jean short land . jean short ?","if entities . find ( jean ) ! = None : newline newtab entities [ jean ] [ short ] = land newline print ( jean [ short ] ) newline"
"red shirt soccer . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = soccer newline print ( red [ shirt ] ) newline"
"men be many . many be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( many [ be ] ) newline"
"link fence white . white fence ?","if entities . find ( link ) ! = None : newline newtab entities [ link ] [ fence ] = link newline print ( white [ fence ] ) newline"
"man be spray . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = spray newline print ( man [ be ] ) newline"
"woman wear blue . blue wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( blue [ wear ] ) newline"
"boy be five . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = five newline print ( boy [ be ] ) newline"
"newspaper sit dog . newspaper sit ?","if entities . find ( newspaper ) ! = None : newline newtab entities [ newspaper ] [ sit ] = dog newline print ( newspaper [ sit ] ) newline"
"while use cellphone . while use ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ use ] = cellphone newline print ( while [ use ] ) newline"
"men work out . out work ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ work ] = men newline print ( out [ work ] ) newline"
"red bark white . white bark ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ bark ] = red newline print ( white [ bark ] ) newline"
"woman be opening . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = opening newline print ( woman [ be ] ) newline"
"girl be full . full be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( full [ be ] ) newline"
"girl stand or . girl stand ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ stand ] = or newline print ( girl [ stand ] ) newline"
"people ride dirt . people ride ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ ride ] = dirt newline print ( people [ ride ] ) newline"
"he be way . he be ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ be ] = way newline print ( he [ be ] ) newline"
"hair work wood . hair work ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ work ] = wood newline print ( hair [ work ] ) newline"
"people gather various . various gather ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ gather ] = people newline print ( various [ gather ] ) newline"
"sunlight come out . out come ?","if entities . find ( sunlight ) ! = None : newline newtab entities [ sunlight ] [ come ] = sunlight newline print ( out [ come ] ) newline"
"red vest men . red vest ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ vest ] = men newline print ( red [ vest ] ) newline"
"man be woman . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = woman newline print ( man [ be ] ) newline"
"man be eager . eager be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( eager [ be ] ) newline"
"woman watch other . other watch ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ watch ] = woman newline print ( other [ watch ] ) newline"
"girl be three . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = three newline print ( girl [ be ] ) newline"
"pipe do some . some do ?","if entities . find ( pipe ) ! = None : newline newtab entities [ pipe ] [ do ] = pipe newline print ( some [ do ] ) newline"
"green shirt swinging . swinging shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = green newline print ( swinging [ shirt ] ) newline"
"girl check out . out check ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ check ] = girl newline print ( out [ check ] ) newline"
"people be rock . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = rock newline print ( people [ be ] ) newline"
"green grass next . next grass ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ grass ] = green newline print ( next [ grass ] ) newline"
"woman shake white . white shake ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ shake ] = woman newline print ( white [ shake ] ) newline"
"father watch someone . father watch ?","if entities . find ( father ) ! = None : newline newtab entities [ father ] [ watch ] = someone newline print ( father [ watch ] ) newline"
"guy wear sunglasses . guy wear ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ wear ] = sunglasses newline print ( guy [ wear ] ) newline"
"couple enjoy sucker . couple enjoy ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ enjoy ] = sucker newline print ( couple [ enjoy ] ) newline"
"men be mouth . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = mouth newline print ( men [ be ] ) newline"
"boy stand next . next stand ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ stand ] = boy newline print ( next [ stand ] ) newline"
"dog catch air . dog catch ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ catch ] = air newline print ( dog [ catch ] ) newline"
"child wear blue . blue wear ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wear ] = child newline print ( blue [ wear ] ) newline"
"mower drive jeep . mower drive ?","if entities . find ( mower ) ! = None : newline newtab entities [ mower ] [ drive ] = jeep newline print ( mower [ drive ] ) newline"
"people be upside . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = upside newline print ( people [ be ] ) newline"
"dog be unhappy . unhappy be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( unhappy [ be ] ) newline"
"jeans be all . all be ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ be ] = jeans newline print ( all [ be ] ) newline"
"man wear hard . hard wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( hard [ wear ] ) newline"
"crane be staring . staring be ?","if entities . find ( crane ) ! = None : newline newtab entities [ crane ] [ be ] = crane newline print ( staring [ be ] ) newline"
"men dress laughing . laughing dress ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ dress ] = men newline print ( laughing [ dress ] ) newline"
"dog be swinging . swinging be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( swinging [ be ] ) newline"
"man cook range . man cook ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ cook ] = range newline print ( man [ cook ] ) newline"
"woman be out . out be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( out [ be ] ) newline"
"pine tree trunk . pine tree ?","if entities . find ( pine ) ! = None : newline newtab entities [ pine ] [ tree ] = trunk newline print ( pine [ tree ] ) newline"
"christmas tree branch . christmas tree ?","if entities . find ( christmas ) ! = None : newline newtab entities [ christmas ] [ tree ] = branch newline print ( christmas [ tree ] ) newline"
"arts uniform one . one uniform ?","if entities . find ( arts ) ! = None : newline newtab entities [ arts ] [ uniform ] = arts newline print ( one [ uniform ] ) newline"
"kid slide game . kid slide ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ slide ] = game newline print ( kid [ slide ] ) newline"
"person play music . person play ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ play ] = music newline print ( person [ play ] ) newline"
"daughter walk bike . daughter walk ?","if entities . find ( daughter ) ! = None : newline newtab entities [ daughter ] [ walk ] = bike newline print ( daughter [ walk ] ) newline"
"sweater play some . some play ?","if entities . find ( sweater ) ! = None : newline newtab entities [ sweater ] [ play ] = sweater newline print ( some [ play ] ) newline"
"woman stand next . next stand ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ stand ] = woman newline print ( next [ stand ] ) newline"
"second leave hand . second leave ?","if entities . find ( second ) ! = None : newline newtab entities [ second ] [ leave ] = hand newline print ( second [ leave ] ) newline"
"sun set sun . sun set ?","if entities . find ( sun ) ! = None : newline newtab entities [ sun ] [ set ] = sun newline print ( sun [ set ] ) newline"
"orchestra play tennis . orchestra play ?","if entities . find ( orchestra ) ! = None : newline newtab entities [ orchestra ] [ play ] = tennis newline print ( orchestra [ play ] ) newline"
"toddler be two . toddler be ?","if entities . find ( toddler ) ! = None : newline newtab entities [ toddler ] [ be ] = two newline print ( toddler [ be ] ) newline"
"woman be rock . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = rock newline print ( woman [ be ] ) newline"
"dog wrestle competition . dog wrestle ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ wrestle ] = competition newline print ( dog [ wrestle ] ) newline"
"bus pass people . bus pass ?","if entities . find ( bus ) ! = None : newline newtab entities [ bus ] [ pass ] = people newline print ( bus [ pass ] ) newline"
"dog be sleeping . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = sleeping newline print ( dog [ be ] ) newline"
"form fit white . white fit ?","if entities . find ( form ) ! = None : newline newtab entities [ form ] [ fit ] = form newline print ( white [ fit ] ) newline"
"chili fume white . white fume ?","if entities . find ( chili ) ! = None : newline newtab entities [ chili ] [ fume ] = chili newline print ( white [ fume ] ) newline"
"business attire while . business attire ?","if entities . find ( business ) ! = None : newline newtab entities [ business ] [ attire ] = while newline print ( business [ attire ] ) newline"
"individual be swinging . swinging be ?","if entities . find ( individual ) ! = None : newline newtab entities [ individual ] [ be ] = individual newline print ( swinging [ be ] ) newline"
"people stand next . next stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( next [ stand ] ) newline"
"woman carry plastic . plastic carry ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ carry ] = woman newline print ( plastic [ carry ] ) newline"
"woman look out . out look ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ look ] = woman newline print ( out [ look ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"violinist get food . violinist get ?","if entities . find ( violinist ) ! = None : newline newtab entities [ violinist ] [ get ] = food newline print ( violinist [ get ] ) newline"
"people be two . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = two newline print ( people [ be ] ) newline"
"horse chase another . another chase ?","if entities . find ( horse ) ! = None : newline newtab entities [ horse ] [ chase ] = horse newline print ( another [ chase ] ) newline"
"boy be eager . eager be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( eager [ be ] ) newline"
"lady solicit two . lady solicit ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ solicit ] = two newline print ( lady [ solicit ] ) newline"
"child play electric . electric play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = child newline print ( electric [ play ] ) newline"
"hair be pictured . pictured be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = hair newline print ( pictured [ be ] ) newline"
"men be sleeping . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = sleeping newline print ( men [ be ] ) newline"
"cowboy hat who . cowboy hat ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ hat ] = who newline print ( cowboy [ hat ] ) newline"
"sunglasses be swinging . swinging be ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ be ] = sunglasses newline print ( swinging [ be ] ) newline"
"man gather paper . man gather ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ gather ] = paper newline print ( man [ gather ] ) newline"
"brown shoe staring . staring shoe ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ shoe ] = brown newline print ( staring [ shoe ] ) newline"
"woman be sleeping . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sleeping newline print ( woman [ be ] ) newline"
"dog run track . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = track newline print ( dog [ run ] ) newline"
"print robe white . white robe ?","if entities . find ( print ) ! = None : newline newtab entities [ print ] [ robe ] = print newline print ( white [ robe ] ) newline"
"girl be rock . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = rock newline print ( girl [ be ] ) newline"
"car drive an . car drive ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ drive ] = an newline print ( car [ drive ] ) newline"
"or cross legged . legged cross ?","if entities . find ( or ) ! = None : newline newtab entities [ or ] [ cross ] = or newline print ( legged [ cross ] ) newline"
"or ride bike . or ride ?","if entities . find ( or ) ! = None : newline newtab entities [ or ] [ ride ] = bike newline print ( or [ ride ] ) newline"
"giant unicycle white . white unicycle ?","if entities . find ( giant ) ! = None : newline newtab entities [ giant ] [ unicycle ] = giant newline print ( white [ unicycle ] ) newline"
"bike do construction . bike do ?","if entities . find ( bike ) ! = None : newline newtab entities [ bike ] [ do ] = construction newline print ( bike [ do ] ) newline"
"woman be unrecognizable . unrecognizable be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( unrecognizable [ be ] ) newline"
"suspender sit next . next sit ?","if entities . find ( suspender ) ! = None : newline newtab entities [ suspender ] [ sit ] = suspender newline print ( next [ sit ] ) newline"
"girl stand next . next stand ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ stand ] = girl newline print ( next [ stand ] ) newline"
"girl play musical . musical play ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ play ] = girl newline print ( musical [ play ] ) newline"
"surfer ride beige . beige ride ?","if entities . find ( surfer ) ! = None : newline newtab entities [ surfer ] [ ride ] = surfer newline print ( beige [ ride ] ) newline"
"dog race car . dog race ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ race ] = car newline print ( dog [ race ] ) newline"
"orange be silly . silly be ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ be ] = orange newline print ( silly [ be ] ) newline"
"people be swinging . swinging be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( swinging [ be ] ) newline"
"dog run while . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = while newline print ( dog [ run ] ) newline"
"man be three . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = three newline print ( man [ be ] ) newline"
"woman be neck . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = neck newline print ( woman [ be ] ) newline"
"dog jump next . next jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = dog newline print ( next [ jump ] ) newline"
"bagel shop fresh . fresh shop ?","if entities . find ( bagel ) ! = None : newline newtab entities [ bagel ] [ shop ] = bagel newline print ( fresh [ shop ] ) newline"
"woman fix blond . woman fix ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ fix ] = blond newline print ( woman [ fix ] ) newline"
"skin be featured . featured be ?","if entities . find ( skin ) ! = None : newline newtab entities [ skin ] [ be ] = skin newline print ( featured [ be ] ) newline"
"man go wild . wild go ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ go ] = man newline print ( wild [ go ] ) newline"
"officer be unexcited . unexcited be ?","if entities . find ( officer ) ! = None : newline newtab entities [ officer ] [ be ] = officer newline print ( unexcited [ be ] ) newline"
"object reflect pond . object reflect ?","if entities . find ( object ) ! = None : newline newtab entities [ object ] [ reflect ] = pond newline print ( object [ reflect ] ) newline"
"woman be midair . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = midair newline print ( woman [ be ] ) newline"
"someone be young . someone be ?","if entities . find ( someone ) ! = None : newline newtab entities [ someone ] [ be ] = young newline print ( someone [ be ] ) newline"
"suit be parasailing . suit be ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ be ] = parasailing newline print ( suit [ be ] ) newline"
"dog be swinging . swinging be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( swinging [ be ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"red sled dog . red sled ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ sled ] = dog newline print ( red [ sled ] ) newline"
"safety glass one . one glass ?","if entities . find ( safety ) ! = None : newline newtab entities [ safety ] [ glass ] = safety newline print ( one [ glass ] ) newline"
"red shirt rock . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = rock newline print ( red [ shirt ] ) newline"
"man frolic two . man frolic ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ frolic ] = two newline print ( man [ frolic ] ) newline"
"man wear sunglasses . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = sunglasses newline print ( man [ wear ] ) newline"
"men stand next . next stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = men newline print ( next [ stand ] ) newline"
"red backpack staring . staring backpack ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ backpack ] = red newline print ( staring [ backpack ] ) newline"
"sweatshirt be group . sweatshirt be ?","if entities . find ( sweatshirt ) ! = None : newline newtab entities [ sweatshirt ] [ be ] = group newline print ( sweatshirt [ be ] ) newline"
"dog watch someone . dog watch ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ watch ] = someone newline print ( dog [ watch ] ) newline"
"while stand next . next stand ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ stand ] = while newline print ( next [ stand ] ) newline"
"hairstyle wear an . hairstyle wear ?","if entities . find ( hairstyle ) ! = None : newline newtab entities [ hairstyle ] [ wear ] = an newline print ( hairstyle [ wear ] ) newline"
"jacket be four . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = four newline print ( jacket [ be ] ) newline"
"woman squint woman . woman squint ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ squint ] = woman newline print ( woman [ squint ] ) newline"
"woman be asleep . asleep be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( asleep [ be ] ) newline"
"people walk out . out walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( out [ walk ] ) newline"
"red shirt staring . staring shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( staring [ shirt ] ) newline"
"ice cream out . out cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = ice newline print ( out [ cream ] ) newline"
"red hat while . red hat ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ hat ] = while newline print ( red [ hat ] ) newline"
"mustache hold several . several hold ?","if entities . find ( mustache ) ! = None : newline newtab entities [ mustache ] [ hold ] = mustache newline print ( several [ hold ] ) newline"
"guy be laughing . laughing be ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ be ] = guy newline print ( laughing [ be ] ) newline"
"backseat watch child . backseat watch ?","if entities . find ( backseat ) ! = None : newline newtab entities [ backseat ] [ watch ] = child newline print ( backseat [ watch ] ) newline"
"boy walk two . boy walk ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ walk ] = two newline print ( boy [ walk ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"cowboy hat out . out hat ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ hat ] = cowboy newline print ( out [ hat ] ) newline"
"window look out . out look ?","if entities . find ( window ) ! = None : newline newtab entities [ window ] [ look ] = window newline print ( out [ look ] ) newline"
"man scratch white . white scratch ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ scratch ] = man newline print ( white [ scratch ] ) newline"
"red motorcycle rider . red motorcycle ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ motorcycle ] = rider newline print ( red [ motorcycle ] ) newline"
"team be lovely . lovely be ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ be ] = team newline print ( lovely [ be ] ) newline"
"student sit bride . student sit ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ sit ] = bride newline print ( student [ sit ] ) newline"
"tennis shoe staring . staring shoe ?","if entities . find ( tennis ) ! = None : newline newtab entities [ tennis ] [ shoe ] = tennis newline print ( staring [ shoe ] ) newline"
"street point while . street point ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ point ] = while newline print ( street [ point ] ) newline"
"an elaborate white . white elaborate ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ elaborate ] = an newline print ( white [ elaborate ] ) newline"
"red robe white . white robe ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ robe ] = red newline print ( white [ robe ] ) newline"
"subway train track . subway train ?","if entities . find ( subway ) ! = None : newline newtab entities [ subway ] [ train ] = track newline print ( subway [ train ] ) newline"
"orange dress figure . orange dress ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ dress ] = figure newline print ( orange [ dress ] ) newline"
"who be rock . who be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = rock newline print ( who [ be ] ) newline"
"kid be many . many be ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ be ] = kid newline print ( many [ be ] ) newline"
"rock climb wooden . wooden climb ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ climb ] = rock newline print ( wooden [ climb ] ) newline"
"boy watch some . some watch ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ watch ] = boy newline print ( some [ watch ] ) newline"
"boy be rock . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = rock newline print ( boy [ be ] ) newline"
"cartridge razor two . cartridge razor ?","if entities . find ( cartridge ) ! = None : newline newtab entities [ cartridge ] [ razor ] = two newline print ( cartridge [ razor ] ) newline"
"dog be growling . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = growling newline print ( dog [ be ] ) newline"
"ballerina do competition . ballerina do ?","if entities . find ( ballerina ) ! = None : newline newtab entities [ ballerina ] [ do ] = competition newline print ( ballerina [ do ] ) newline"
"background appear two . background appear ?","if entities . find ( background ) ! = None : newline newtab entities [ background ] [ appear ] = two newline print ( background [ appear ] ) newline"
"girl jump high . high jump ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ jump ] = girl newline print ( high [ jump ] ) newline"
"girl kick one . one kick ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ kick ] = girl newline print ( one [ kick ] ) newline"
"gray shirt swinging . swinging shirt ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ shirt ] = gray newline print ( swinging [ shirt ] ) newline"
"coach clap white . white clap ?","if entities . find ( coach ) ! = None : newline newtab entities [ coach ] [ clap ] = coach newline print ( white [ clap ] ) newline"
"boy be pole . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = pole newline print ( boy [ be ] ) newline"
"it be laughing . laughing be ?","if entities . find ( it ) ! = None : newline newtab entities [ it ] [ be ] = it newline print ( laughing [ be ] ) newline"
"brick build next . next build ?","if entities . find ( brick ) ! = None : newline newtab entities [ brick ] [ build ] = brick newline print ( next [ build ] ) newline"
"dog chase another . another chase ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ chase ] = dog newline print ( another [ chase ] ) newline"
"brown shirt swinging . swinging shirt ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ shirt ] = brown newline print ( swinging [ shirt ] ) newline"
"people be upside . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = upside newline print ( people [ be ] ) newline"
"dog run while . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = while newline print ( dog [ run ] ) newline"
"cowboy hat hard . hard hat ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ hat ] = cowboy newline print ( hard [ hat ] ) newline"
"red shirt wave . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = wave newline print ( red [ shirt ] ) newline"
"jeans be men . jeans be ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ be ] = men newline print ( jeans [ be ] ) newline"
"girl be five . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = five newline print ( girl [ be ] ) newline"
"man sit or . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = or newline print ( man [ sit ] ) newline"
"toddler play volleyball . toddler play ?","if entities . find ( toddler ) ! = None : newline newtab entities [ toddler ] [ play ] = volleyball newline print ( toddler [ play ] ) newline"
"member play hopscotch . member play ?","if entities . find ( member ) ! = None : newline newtab entities [ member ] [ play ] = hopscotch newline print ( member [ play ] ) newline"
"brochure try out . out try ?","if entities . find ( brochure ) ! = None : newline newtab entities [ brochure ] [ try ] = brochure newline print ( out [ try ] ) newline"
"man fish net . man fish ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ fish ] = net newline print ( man [ fish ] ) newline"
"player be adjacent . adjacent be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = player newline print ( adjacent [ be ] ) newline"
"endurance test several . several test ?","if entities . find ( endurance ) ! = None : newline newtab entities [ endurance ] [ test ] = endurance newline print ( several [ test ] ) newline"
"people enjoy food . people enjoy ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ enjoy ] = food newline print ( people [ enjoy ] ) newline"
"china be laughing . laughing be ?","if entities . find ( china ) ! = None : newline newtab entities [ china ] [ be ] = china newline print ( laughing [ be ] ) newline"
"girl swing white . white swing ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ swing ] = girl newline print ( white [ swing ] ) newline"
"christmas present out . out present ?","if entities . find ( christmas ) ! = None : newline newtab entities [ christmas ] [ present ] = christmas newline print ( out [ present ] ) newline"
"man operate room . man operate ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ operate ] = room newline print ( man [ operate ] ) newline"
"girl hang laundry . girl hang ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ hang ] = laundry newline print ( girl [ hang ] ) newline"
"people stand next . next stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( next [ stand ] ) newline"
"jacket sit side . jacket sit ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ sit ] = side newline print ( jacket [ sit ] ) newline"
"while sit alone . alone sit ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ sit ] = while newline print ( alone [ sit ] ) newline"
"onlooker be identical . identical be ?","if entities . find ( onlooker ) ! = None : newline newtab entities [ onlooker ] [ be ] = onlooker newline print ( identical [ be ] ) newline"
"men stand next . next stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = men newline print ( next [ stand ] ) newline"
"people be two . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = two newline print ( people [ be ] ) newline"
"dancer perform dance . dancer perform ?","if entities . find ( dancer ) ! = None : newline newtab entities [ dancer ] [ perform ] = dance newline print ( dancer [ perform ] ) newline"
"costume stand next . next stand ?","if entities . find ( costume ) ! = None : newline newtab entities [ costume ] [ stand ] = costume newline print ( next [ stand ] ) newline"
"sweater stand or . sweater stand ?","if entities . find ( sweater ) ! = None : newline newtab entities [ sweater ] [ stand ] = or newline print ( sweater [ stand ] ) newline"
"kid build or . kid build ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ build ] = or newline print ( kid [ build ] ) newline"
"girl be midair . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = midair newline print ( girl [ be ] ) newline"
"gypsy clothe sound . gypsy clothe ?","if entities . find ( gypsy ) ! = None : newline newtab entities [ gypsy ] [ clothe ] = sound newline print ( gypsy [ clothe ] ) newline"
"men be attentive . attentive be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( attentive [ be ] ) newline"
"woman wear cowboy . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = cowboy newline print ( woman [ wear ] ) newline"
"boy give out . out give ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ give ] = boy newline print ( out [ give ] ) newline"
"mother try two . mother try ?","if entities . find ( mother ) ! = None : newline newtab entities [ mother ] [ try ] = two newline print ( mother [ try ] ) newline"
"yard smile next . next smile ?","if entities . find ( yard ) ! = None : newline newtab entities [ yard ] [ smile ] = yard newline print ( next [ smile ] ) newline"
"dog wear jeans . dog wear ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ wear ] = jeans newline print ( dog [ wear ] ) newline"
"boy stand camera . boy stand ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ stand ] = camera newline print ( boy [ stand ] ) newline"
"computer test technology . computer test ?","if entities . find ( computer ) ! = None : newline newtab entities [ computer ] [ test ] = technology newline print ( computer [ test ] ) newline"
"people be full . full be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( full [ be ] ) newline"
"rock hike pole . rock hike ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ hike ] = pole newline print ( rock [ hike ] ) newline"
"men be comforting . comforting be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( comforting [ be ] ) newline"
"who be member . who be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = member newline print ( who [ be ] ) newline"
"toddler pose an . toddler pose ?","if entities . find ( toddler ) ! = None : newline newtab entities [ toddler ] [ pose ] = an newline print ( toddler [ pose ] ) newline"
"business attire swinging . swinging attire ?","if entities . find ( business ) ! = None : newline newtab entities [ business ] [ attire ] = business newline print ( swinging [ attire ] ) newline"
"man wear an . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = an newline print ( man [ wear ] ) newline"
"gear include two . gear include ?","if entities . find ( gear ) ! = None : newline newtab entities [ gear ] [ include ] = two newline print ( gear [ include ] ) newline"
"stage play an . stage play ?","if entities . find ( stage ) ! = None : newline newtab entities [ stage ] [ play ] = an newline print ( stage [ play ] ) newline"
"performer act two . performer act ?","if entities . find ( performer ) ! = None : newline newtab entities [ performer ] [ act ] = two newline print ( performer [ act ] ) newline"
"man wear various . various wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( various [ wear ] ) newline"
"man walk while . man walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = while newline print ( man [ walk ] ) newline"
"dog explore an . dog explore ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ explore ] = an newline print ( dog [ explore ] ) newline"
"people ride high . high ride ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ ride ] = people newline print ( high [ ride ] ) newline"
"dog be swinging . swinging be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( swinging [ be ] ) newline"
"ethnicity wait next . next wait ?","if entities . find ( ethnicity ) ! = None : newline newtab entities [ ethnicity ] [ wait ] = ethnicity newline print ( next [ wait ] ) newline"
"woman be prominent . prominent be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( prominent [ be ] ) newline"
"man toss plastic . plastic toss ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ toss ] = man newline print ( plastic [ toss ] ) newline"
"lady walk while . lady walk ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ walk ] = while newline print ( lady [ walk ] ) newline"
"people be all . all be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( all [ be ] ) newline"
"woman dress all . all dress ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dress ] = woman newline print ( all [ dress ] ) newline"
"man stretch while . man stretch ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stretch ] = while newline print ( man [ stretch ] ) newline"
"while run while . while run ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ run ] = while newline print ( while [ run ] ) newline"
"village gather next . next gather ?","if entities . find ( village ) ! = None : newline newtab entities [ village ] [ gather ] = village newline print ( next [ gather ] ) newline"
"green shirt skate . green shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = skate newline print ( green [ shirt ] ) newline"
"man wear muzzle . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = muzzle newline print ( man [ wear ] ) newline"
"toddler walk next . next walk ?","if entities . find ( toddler ) ! = None : newline newtab entities [ toddler ] [ walk ] = toddler newline print ( next [ walk ] ) newline"
"dog chase it . dog chase ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ chase ] = it newline print ( dog [ chase ] ) newline"
"player reach an . player reach ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ reach ] = an newline print ( player [ reach ] ) newline"
"teal color all . all color ?","if entities . find ( teal ) ! = None : newline newtab entities [ teal ] [ color ] = teal newline print ( all [ color ] ) newline"
"area play musical . musical play ?","if entities . find ( area ) ! = None : newline newtab entities [ area ] [ play ] = area newline print ( musical [ play ] ) newline"
"family prepare food . family prepare ?","if entities . find ( family ) ! = None : newline newtab entities [ family ] [ prepare ] = food newline print ( family [ prepare ] ) newline"
"hotel proclaim white . white proclaim ?","if entities . find ( hotel ) ! = None : newline newtab entities [ hotel ] [ proclaim ] = hotel newline print ( white [ proclaim ] ) newline"
"couple relax while . couple relax ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ relax ] = while newline print ( couple [ relax ] ) newline"
"ladder talk next . next talk ?","if entities . find ( ladder ) ! = None : newline newtab entities [ ladder ] [ talk ] = ladder newline print ( next [ talk ] ) newline"
"red sit alone . alone sit ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ sit ] = red newline print ( alone [ sit ] ) newline"
"family gather next . next gather ?","if entities . find ( family ) ! = None : newline newtab entities [ family ] [ gather ] = family newline print ( next [ gather ] ) newline"
"man be blue . blue be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( blue [ be ] ) newline"
"men sit while . men sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = while newline print ( men [ sit ] ) newline"
"girl be rock . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = rock newline print ( girl [ be ] ) newline"
"child lay next . next lay ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ lay ] = child newline print ( next [ lay ] ) newline"
"jacket stand or . jacket stand ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ stand ] = or newline print ( jacket [ stand ] ) newline"
"zebra balloon fight . zebra balloon ?","if entities . find ( zebra ) ! = None : newline newtab entities [ zebra ] [ balloon ] = fight newline print ( zebra [ balloon ] ) newline"
"men be all . all be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( all [ be ] ) newline"
"woman pass child . woman pass ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ pass ] = child newline print ( woman [ pass ] ) newline"
"boy kick wood . boy kick ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ kick ] = wood newline print ( boy [ kick ] ) newline"
"horse pull face . horse pull ?","if entities . find ( horse ) ! = None : newline newtab entities [ horse ] [ pull ] = face newline print ( horse [ pull ] ) newline"
"flower shop bag . flower shop ?","if entities . find ( flower ) ! = None : newline newtab entities [ flower ] [ shop ] = bag newline print ( flower [ shop ] ) newline"
"people be sleeping . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = sleeping newline print ( people [ be ] ) newline"
"mother wash some . some wash ?","if entities . find ( mother ) ! = None : newline newtab entities [ mother ] [ wash ] = mother newline print ( some [ wash ] ) newline"
"while hold hand . while hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = hand newline print ( while [ hold ] ) newline"
"boy swim underwater . underwater swim ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ swim ] = boy newline print ( underwater [ swim ] ) newline"
"man rollerblade white . white rollerblade ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ rollerblade ] = man newline print ( white [ rollerblade ] ) newline"
"umbrella stand while . umbrella stand ?","if entities . find ( umbrella ) ! = None : newline newtab entities [ umbrella ] [ stand ] = while newline print ( umbrella [ stand ] ) newline"
"nose be young . nose be ?","if entities . find ( nose ) ! = None : newline newtab entities [ nose ] [ be ] = young newline print ( nose [ be ] ) newline"
"outfit be parasailing . outfit be ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ be ] = parasailing newline print ( outfit [ be ] ) newline"
"performer walk dog . performer walk ?","if entities . find ( performer ) ! = None : newline newtab entities [ performer ] [ walk ] = dog newline print ( performer [ walk ] ) newline"
"rock climb an . rock climb ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ climb ] = an newline print ( rock [ climb ] ) newline"
"worker wear white . white wear ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ wear ] = worker newline print ( white [ wear ] ) newline"
"people have some . some have ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ have ] = people newline print ( some [ have ] ) newline"
"man play tennis . man play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = tennis newline print ( man [ play ] ) newline"
"man attach white . white attach ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ attach ] = man newline print ( white [ attach ] ) newline"
"child play acoustic . acoustic play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = child newline print ( acoustic [ play ] ) newline"
"people cross some . some cross ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ cross ] = people newline print ( some [ cross ] ) newline"
"leash walk alone . alone walk ?","if entities . find ( leash ) ! = None : newline newtab entities [ leash ] [ walk ] = leash newline print ( alone [ walk ] ) newline"
"wristband sing live . live sing ?","if entities . find ( wristband ) ! = None : newline newtab entities [ wristband ] [ sing ] = wristband newline print ( live [ sing ] ) newline"
"costume look out . out look ?","if entities . find ( costume ) ! = None : newline newtab entities [ costume ] [ look ] = costume newline print ( out [ look ] ) newline"
"woman be sleeping . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sleeping newline print ( woman [ be ] ) newline"
"couple take picture . couple take ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ take ] = picture newline print ( couple [ take ] ) newline"
"child play guitar . child play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = guitar newline print ( child [ play ] ) newline"
"pavement look woman . pavement look ?","if entities . find ( pavement ) ! = None : newline newtab entities [ pavement ] [ look ] = woman newline print ( pavement [ look ] ) newline"
"face cover wall . face cover ?","if entities . find ( face ) ! = None : newline newtab entities [ face ] [ cover ] = wall newline print ( face [ cover ] ) newline"
"wall use one . one use ?","if entities . find ( wall ) ! = None : newline newtab entities [ wall ] [ use ] = wall newline print ( one [ use ] ) newline"
"girl be two . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = two newline print ( girl [ be ] ) newline"
"child wear jeans . child wear ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wear ] = jeans newline print ( child [ wear ] ) newline"
"person be many . many be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = person newline print ( many [ be ] ) newline"
"platform look men . platform look ?","if entities . find ( platform ) ! = None : newline newtab entities [ platform ] [ look ] = men newline print ( platform [ look ] ) newline"
"child sit while . child sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = while newline print ( child [ sit ] ) newline"
"child sit alone . alone sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = child newline print ( alone [ sit ] ) newline"
"dog be group . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = group newline print ( dog [ be ] ) newline"
"bus pack audience . bus pack ?","if entities . find ( bus ) ! = None : newline newtab entities [ bus ] [ pack ] = audience newline print ( bus [ pack ] ) newline"
"two finger while . two finger ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ finger ] = while newline print ( two [ finger ] ) newline"
"cyclist be two . cyclist be ?","if entities . find ( cyclist ) ! = None : newline newtab entities [ cyclist ] [ be ] = two newline print ( cyclist [ be ] ) newline"
"man be snow . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = snow newline print ( man [ be ] ) newline"
"people be next . next be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( next [ be ] ) newline"
"character sit dog . character sit ?","if entities . find ( character ) ! = None : newline newtab entities [ character ] [ sit ] = dog newline print ( character [ sit ] ) newline"
"man skateboard next . next skateboard ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ skateboard ] = man newline print ( next [ skateboard ] ) newline"
"dog run tongue . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = tongue newline print ( dog [ run ] ) newline"
"head be swinging . swinging be ?","if entities . find ( head ) ! = None : newline newtab entities [ head ] [ be ] = head newline print ( swinging [ be ] ) newline"
"green crayon white . white crayon ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ crayon ] = green newline print ( white [ crayon ] ) newline"
"people be way . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = way newline print ( people [ be ] ) newline"
"youngster be swinging . swinging be ?","if entities . find ( youngster ) ! = None : newline newtab entities [ youngster ] [ be ] = youngster newline print ( swinging [ be ] ) newline"
"man walk next . next walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = man newline print ( next [ walk ] ) newline"
"man play colorful . colorful play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = man newline print ( colorful [ play ] ) newline"
"couch face many . many face ?","if entities . find ( couch ) ! = None : newline newtab entities [ couch ] [ face ] = couch newline print ( many [ face ] ) newline"
"person play out . out play ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ play ] = person newline print ( out [ play ] ) newline"
"man sit man . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( man [ sit ] ) newline"
"man cut branch . man cut ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ cut ] = branch newline print ( man [ cut ] ) newline"
"green surfboard out . out surfboard ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ surfboard ] = green newline print ( out [ surfboard ] ) newline"
"child be sleeping . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = sleeping newline print ( child [ be ] ) newline"
"man trim white . white trim ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ trim ] = man newline print ( white [ trim ] ) newline"
"two pile snow . two pile ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ pile ] = snow newline print ( two [ pile ] ) newline"
"village stand or . village stand ?","if entities . find ( village ) ! = None : newline newtab entities [ village ] [ stand ] = or newline print ( village [ stand ] ) newline"
"man be three . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = three newline print ( man [ be ] ) newline"
"clown hold an . clown hold ?","if entities . find ( clown ) ! = None : newline newtab entities [ clown ] [ hold ] = an newline print ( clown [ hold ] ) newline"
"microscope surround one . one surround ?","if entities . find ( microscope ) ! = None : newline newtab entities [ microscope ] [ surround ] = microscope newline print ( one [ surround ] ) newline"
"girl be some . some be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( some [ be ] ) newline"
"man row team . man row ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ row ] = team newline print ( man [ row ] ) newline"
"boy be miniature . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = miniature newline print ( boy [ be ] ) newline"
"while smile underwater . underwater smile ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ smile ] = while newline print ( underwater [ smile ] ) newline"
"outfit be staring . staring be ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ be ] = outfit newline print ( staring [ be ] ) newline"
"path strew two . path strew ?","if entities . find ( path ) ! = None : newline newtab entities [ path ] [ strew ] = two newline print ( path [ strew ] ) newline"
"luggage be four . luggage be ?","if entities . find ( luggage ) ! = None : newline newtab entities [ luggage ] [ be ] = four newline print ( luggage [ be ] ) newline"
"people wear blue . blue wear ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ wear ] = people newline print ( blue [ wear ] ) newline"
"sheepdog be next . next be ?","if entities . find ( sheepdog ) ! = None : newline newtab entities [ sheepdog ] [ be ] = sheepdog newline print ( next [ be ] ) newline"
"player kick some . some kick ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ kick ] = player newline print ( some [ kick ] ) newline"
"child be pole . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = pole newline print ( child [ be ] ) newline"
"child be asleep . asleep be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( asleep [ be ] ) newline"
"dog chase sheep . dog chase ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ chase ] = sheep newline print ( dog [ chase ] ) newline"
"hula hoop white . white hoop ?","if entities . find ( hula ) ! = None : newline newtab entities [ hula ] [ hoop ] = hula newline print ( white [ hoop ] ) newline"
"child sit while . child sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = while newline print ( child [ sit ] ) newline"
"boy wear glove . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = glove newline print ( boy [ wear ] ) newline"
"kid be an . kid be ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ be ] = an newline print ( kid [ be ] ) newline"
"player hold another . another hold ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ hold ] = player newline print ( another [ hold ] ) newline"
"girl sit next . next sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = girl newline print ( next [ sit ] ) newline"
"red motorcycle while . red motorcycle ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ motorcycle ] = while newline print ( red [ motorcycle ] ) newline"
"child be an . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = an newline print ( child [ be ] ) newline"
"chair look out . out look ?","if entities . find ( chair ) ! = None : newline newtab entities [ chair ] [ look ] = chair newline print ( out [ look ] ) newline"
"quarterback pass blue . blue pass ?","if entities . find ( quarterback ) ! = None : newline newtab entities [ quarterback ] [ pass ] = quarterback newline print ( blue [ pass ] ) newline"
"gentleman prepare some . some prepare ?","if entities . find ( gentleman ) ! = None : newline newtab entities [ gentleman ] [ prepare ] = gentleman newline print ( some [ prepare ] ) newline"
"red bucket two . red bucket ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ bucket ] = two newline print ( red [ bucket ] ) newline"
"child gaze two . child gaze ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ gaze ] = two newline print ( child [ gaze ] ) newline"
"man walk hand . man walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = hand newline print ( man [ walk ] ) newline"
"person paint while . person paint ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ paint ] = while newline print ( person [ paint ] ) newline"
"kid be rod . kid be ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ be ] = rod newline print ( kid [ be ] ) newline"
"people walk next . next walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( next [ walk ] ) newline"
"while be growling . while be ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ be ] = growling newline print ( while [ be ] ) newline"
"jacket be upside . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = upside newline print ( jacket [ be ] ) newline"
"jacket walk while . jacket walk ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ walk ] = while newline print ( jacket [ walk ] ) newline"
"girl dress woman . girl dress ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ dress ] = woman newline print ( girl [ dress ] ) newline"
"dog chase water . dog chase ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ chase ] = water newline print ( dog [ chase ] ) newline"
"man look student . man look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = student newline print ( man [ look ] ) newline"
"musician stand side . musician stand ?","if entities . find ( musician ) ! = None : newline newtab entities [ musician ] [ stand ] = side newline print ( musician [ stand ] ) newline"
"people stand out . out stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( out [ stand ] ) newline"
"pelican be sleeping . pelican be ?","if entities . find ( pelican ) ! = None : newline newtab entities [ pelican ] [ be ] = sleeping newline print ( pelican [ be ] ) newline"
"woman be staring . staring be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( staring [ be ] ) newline"
"man wear blue . blue wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( blue [ wear ] ) newline"
"person be sleeping . person be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = sleeping newline print ( person [ be ] ) newline"
"legs spread two . legs spread ?","if entities . find ( legs ) ! = None : newline newtab entities [ legs ] [ spread ] = two newline print ( legs [ spread ] ) newline"
"advertisement wear blue . blue wear ?","if entities . find ( advertisement ) ! = None : newline newtab entities [ advertisement ] [ wear ] = advertisement newline print ( blue [ wear ] ) newline"
"bench read another . another read ?","if entities . find ( bench ) ! = None : newline newtab entities [ bench ] [ read ] = bench newline print ( another [ read ] ) newline"
"green shirt cycle . green shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = cycle newline print ( green [ shirt ] ) newline"
"umbrella walk out . out walk ?","if entities . find ( umbrella ) ! = None : newline newtab entities [ umbrella ] [ walk ] = umbrella newline print ( out [ walk ] ) newline"
"jacket be upside . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = upside newline print ( jacket [ be ] ) newline"
"two be sleeping . two be ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ be ] = sleeping newline print ( two [ be ] ) newline"
"man wear an . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = an newline print ( man [ wear ] ) newline"
"dog bound while . dog bound ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ bound ] = while newline print ( dog [ bound ] ) newline"
"man walk out . out walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = man newline print ( out [ walk ] ) newline"
"microphone make silly . silly make ?","if entities . find ( microphone ) ! = None : newline newtab entities [ microphone ] [ make ] = microphone newline print ( silly [ make ] ) newline"
"sweater run next . next run ?","if entities . find ( sweater ) ! = None : newline newtab entities [ sweater ] [ run ] = sweater newline print ( next [ run ] ) newline"
"hockey be out . out be ?","if entities . find ( hockey ) ! = None : newline newtab entities [ hockey ] [ be ] = hockey newline print ( out [ be ] ) newline"
"people see blood . people see ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ see ] = blood newline print ( people [ see ] ) newline"
"girl be rock . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = rock newline print ( girl [ be ] ) newline"
"might be asleep . asleep be ?","if entities . find ( might ) ! = None : newline newtab entities [ might ] [ be ] = might newline print ( asleep [ be ] ) newline"
"athlete be one . one be ?","if entities . find ( athlete ) ! = None : newline newtab entities [ athlete ] [ be ] = athlete newline print ( one [ be ] ) newline"
"straw hat man . straw hat ?","if entities . find ( straw ) ! = None : newline newtab entities [ straw ] [ hat ] = man newline print ( straw [ hat ] ) newline"
"worker build while . worker build ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ build ] = while newline print ( worker [ build ] ) newline"
"id tag out . out tag ?","if entities . find ( id ) ! = None : newline newtab entities [ id ] [ tag ] = id newline print ( out [ tag ] ) newline"
"while speak while . while speak ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ speak ] = while newline print ( while [ speak ] ) newline"
"man jump obstacle . man jump ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ jump ] = obstacle newline print ( man [ jump ] ) newline"
"man try two . man try ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ try ] = two newline print ( man [ try ] ) newline"
"vegetable sit next . next sit ?","if entities . find ( vegetable ) ! = None : newline newtab entities [ vegetable ] [ sit ] = vegetable newline print ( next [ sit ] ) newline"
"child work space . child work ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ work ] = space newline print ( child [ work ] ) newline"
"civilian walk out . out walk ?","if entities . find ( civilian ) ! = None : newline newtab entities [ civilian ] [ walk ] = civilian newline print ( out [ walk ] ) newline"
"man dress laughing . laughing dress ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ dress ] = man newline print ( laughing [ dress ] ) newline"
"store talk next . next talk ?","if entities . find ( store ) ! = None : newline newtab entities [ store ] [ talk ] = store newline print ( next [ talk ] ) newline"
"red hat next . next hat ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ hat ] = red newline print ( next [ hat ] ) newline"
"man be sorting . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sorting newline print ( man [ be ] ) newline"
"tan pant while . tan pant ?","if entities . find ( tan ) ! = None : newline newtab entities [ tan ] [ pant ] = while newline print ( tan [ pant ] ) newline"
"while be john . while be ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ be ] = john newline print ( while [ be ] ) newline"
"boy share headphone . boy share ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ share ] = headphone newline print ( boy [ share ] ) newline"
"game be group . game be ?","if entities . find ( game ) ! = None : newline newtab entities [ game ] [ be ] = group newline print ( game [ be ] ) newline"
"umbrella hat rock . umbrella hat ?","if entities . find ( umbrella ) ! = None : newline newtab entities [ umbrella ] [ hat ] = rock newline print ( umbrella [ hat ] ) newline"
"person wear orange . person wear ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ wear ] = orange newline print ( person [ wear ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"woman sit low . low sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( low [ sit ] ) newline"
"boy chase an . boy chase ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ chase ] = an newline print ( boy [ chase ] ) newline"
"orange wink two . orange wink ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ wink ] = two newline print ( orange [ wink ] ) newline"
"player wear yellow . yellow wear ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ wear ] = player newline print ( yellow [ wear ] ) newline"
"people ride high . high ride ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ ride ] = people newline print ( high [ ride ] ) newline"
"man be full . full be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( full [ be ] ) newline"
"green hold one . one hold ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ hold ] = green newline print ( one [ hold ] ) newline"
"greyhound leap while . greyhound leap ?","if entities . find ( greyhound ) ! = None : newline newtab entities [ greyhound ] [ leap ] = while newline print ( greyhound [ leap ] ) newline"
"child stand alone . alone stand ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ stand ] = child newline print ( alone [ stand ] ) newline"
"men be laughing . laughing be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( laughing [ be ] ) newline"
"men play volleyball . men play ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ play ] = volleyball newline print ( men [ play ] ) newline"
"dog sit bride . dog sit ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ sit ] = bride newline print ( dog [ sit ] ) newline"
"boy be sleeping . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = sleeping newline print ( boy [ be ] ) newline"
"ladder inspect damage . ladder inspect ?","if entities . find ( ladder ) ! = None : newline newtab entities [ ladder ] [ inspect ] = damage newline print ( ladder [ inspect ] ) newline"
"people be one . one be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( one [ be ] ) newline"
"oil pump white . white pump ?","if entities . find ( oil ) ! = None : newline newtab entities [ oil ] [ pump ] = oil newline print ( white [ pump ] ) newline"
"people see eye . people see ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ see ] = eye newline print ( people [ see ] ) newline"
"hair stand alone . alone stand ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ stand ] = hair newline print ( alone [ stand ] ) newline"
"girl sit while . girl sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = while newline print ( girl [ sit ] ) newline"
"bar talk while . bar talk ?","if entities . find ( bar ) ! = None : newline newtab entities [ bar ] [ talk ] = while newline print ( bar [ talk ] ) newline"
"woman be female . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = female newline print ( woman [ be ] ) newline"
"wave arm outstretched . outstretched arm ?","if entities . find ( wave ) ! = None : newline newtab entities [ wave ] [ arm ] = wave newline print ( outstretched [ arm ] ) newline"
"girl read next . next read ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ read ] = girl newline print ( next [ read ] ) newline"
"while hold an . while hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = an newline print ( while [ hold ] ) newline"
"people buy white . white buy ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ buy ] = people newline print ( white [ buy ] ) newline"
"suit be swinging . swinging be ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ be ] = suit newline print ( swinging [ be ] ) newline"
"enthusiast climb large . large climb ?","if entities . find ( enthusiast ) ! = None : newline newtab entities [ enthusiast ] [ climb ] = enthusiast newline print ( large [ climb ] ) newline"
"performer walk out . out walk ?","if entities . find ( performer ) ! = None : newline newtab entities [ performer ] [ walk ] = performer newline print ( out [ walk ] ) newline"
"woman be open . open be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( open [ be ] ) newline"
"boy wear converse . converse wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = boy newline print ( converse [ wear ] ) newline"
"lady walk out . out walk ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ walk ] = lady newline print ( out [ walk ] ) newline"
"orange vest next . next vest ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ vest ] = orange newline print ( next [ vest ] ) newline"
"tattoo sit net . tattoo sit ?","if entities . find ( tattoo ) ! = None : newline newtab entities [ tattoo ] [ sit ] = net newline print ( tattoo [ sit ] ) newline"
"capri pant upside . capri pant ?","if entities . find ( capri ) ! = None : newline newtab entities [ capri ] [ pant ] = upside newline print ( capri [ pant ] ) newline"
"green shirt text . green shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = text newline print ( green [ shirt ] ) newline"
"face mix music . face mix ?","if entities . find ( face ) ! = None : newline newtab entities [ face ] [ mix ] = music newline print ( face [ mix ] ) newline"
"helmet ride alone . alone ride ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ ride ] = helmet newline print ( alone [ ride ] ) newline"
"people be spray . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = spray newline print ( people [ be ] ) newline"
"playground ship out . out ship ?","if entities . find ( playground ) ! = None : newline newtab entities [ playground ] [ ship ] = playground newline print ( out [ ship ] ) newline"
"suit be one . one be ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ be ] = suit newline print ( one [ be ] ) newline"
"kid stand chest . kid stand ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ stand ] = chest newline print ( kid [ stand ] ) newline"
"chair make line . chair make ?","if entities . find ( chair ) ! = None : newline newtab entities [ chair ] [ make ] = line newline print ( chair [ make ] ) newline"
"tuxedo play guitar . tuxedo play ?","if entities . find ( tuxedo ) ! = None : newline newtab entities [ tuxedo ] [ play ] = guitar newline print ( tuxedo [ play ] ) newline"
"player reach out . out reach ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ reach ] = player newline print ( out [ reach ] ) newline"
"woman wear white . white wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( white [ wear ] ) newline"
"brick build wooden . wooden build ?","if entities . find ( brick ) ! = None : newline newtab entities [ brick ] [ build ] = brick newline print ( wooden [ build ] ) newline"
"dog be way . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = way newline print ( dog [ be ] ) newline"
"woman sit while . woman sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = while newline print ( woman [ sit ] ) newline"
"girl sing while . girl sing ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sing ] = while newline print ( girl [ sing ] ) newline"
"top be many . many be ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ be ] = top newline print ( many [ be ] ) newline"
"girl sit or . girl sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = or newline print ( girl [ sit ] ) newline"
"people be an . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = an newline print ( people [ be ] ) newline"
"jacket ride mower . jacket ride ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ ride ] = mower newline print ( jacket [ ride ] ) newline"
"archer draw character . archer draw ?","if entities . find ( archer ) ! = None : newline newtab entities [ archer ] [ draw ] = character newline print ( archer [ draw ] ) newline"
"man walk little . little walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = man newline print ( little [ walk ] ) newline"
"man wear yellow . yellow wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( yellow [ wear ] ) newline"
"player try out . out try ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ try ] = player newline print ( out [ try ] ) newline"
"overall cry baby . overall cry ?","if entities . find ( overall ) ! = None : newline newtab entities [ overall ] [ cry ] = baby newline print ( overall [ cry ] ) newline"
"man sit while . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = while newline print ( man [ sit ] ) newline"
"man wear striped . striped wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( striped [ wear ] ) newline"
"people be many . many be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( many [ be ] ) newline"
"athlete throw new . new throw ?","if entities . find ( athlete ) ! = None : newline newtab entities [ athlete ] [ throw ] = athlete newline print ( new [ throw ] ) newline"
"people eat food . people eat ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ eat ] = food newline print ( people [ eat ] ) newline"
"collar bound white . white bound ?","if entities . find ( collar ) ! = None : newline newtab entities [ collar ] [ bound ] = collar newline print ( white [ bound ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"while play some . some play ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ play ] = while newline print ( some [ play ] ) newline"
"dog run next . next run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( next [ run ] ) newline"
"confetti be painted . painted be ?","if entities . find ( confetti ) ! = None : newline newtab entities [ confetti ] [ be ] = confetti newline print ( painted [ be ] ) newline"
"polka dot jacket . polka dot ?","if entities . find ( polka ) ! = None : newline newtab entities [ polka ] [ dot ] = jacket newline print ( polka [ dot ] ) newline"
"plaid shirt smoke . plaid shirt ?","if entities . find ( plaid ) ! = None : newline newtab entities [ plaid ] [ shirt ] = smoke newline print ( plaid [ shirt ] ) newline"
"man wear flashy . flashy wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( flashy [ wear ] ) newline"
"staff look out . out look ?","if entities . find ( staff ) ! = None : newline newtab entities [ staff ] [ look ] = staff newline print ( out [ look ] ) newline"
"spectator watch two . spectator watch ?","if entities . find ( spectator ) ! = None : newline newtab entities [ spectator ] [ watch ] = two newline print ( spectator [ watch ] ) newline"
"overcoat be eager . eager be ?","if entities . find ( overcoat ) ! = None : newline newtab entities [ overcoat ] [ be ] = overcoat newline print ( eager [ be ] ) newline"
"men stand elbow . men stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = elbow newline print ( men [ stand ] ) newline"
"dog squabble two . dog squabble ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ squabble ] = two newline print ( dog [ squabble ] ) newline"
"trunks do competition . trunks do ?","if entities . find ( trunks ) ! = None : newline newtab entities [ trunks ] [ do ] = competition newline print ( trunks [ do ] ) newline"
"bike be way . bike be ?","if entities . find ( bike ) ! = None : newline newtab entities [ bike ] [ be ] = way newline print ( bike [ be ] ) newline"
"tennis prepare food . tennis prepare ?","if entities . find ( tennis ) ! = None : newline newtab entities [ tennis ] [ prepare ] = food newline print ( tennis [ prepare ] ) newline"
"toddler be arm . toddler be ?","if entities . find ( toddler ) ! = None : newline newtab entities [ toddler ] [ be ] = arm newline print ( toddler [ be ] ) newline"
"jacket stand or . jacket stand ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ stand ] = or newline print ( jacket [ stand ] ) newline"
"people be staring . staring be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( staring [ be ] ) newline"
"star walk while . star walk ?","if entities . find ( star ) ! = None : newline newtab entities [ star ] [ walk ] = while newline print ( star [ walk ] ) newline"
"woman wear dark . dark wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( dark [ wear ] ) newline"
"boy practice different . different practice ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ practice ] = boy newline print ( different [ practice ] ) newline"
"woman try some . some try ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ try ] = woman newline print ( some [ try ] ) newline"
"men sit next . next sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = men newline print ( next [ sit ] ) newline"
"masonry pyramid white . white pyramid ?","if entities . find ( masonry ) ! = None : newline newtab entities [ masonry ] [ pyramid ] = masonry newline print ( white [ pyramid ] ) newline"
"sweater be asleep . asleep be ?","if entities . find ( sweater ) ! = None : newline newtab entities [ sweater ] [ be ] = sweater newline print ( asleep [ be ] ) newline"
"river close blue . blue close ?","if entities . find ( river ) ! = None : newline newtab entities [ river ] [ close ] = river newline print ( blue [ close ] ) newline"
"zebra balloon arrangement . zebra balloon ?","if entities . find ( zebra ) ! = None : newline newtab entities [ zebra ] [ balloon ] = arrangement newline print ( zebra [ balloon ] ) newline"
"jumpsuit be four . jumpsuit be ?","if entities . find ( jumpsuit ) ! = None : newline newtab entities [ jumpsuit ] [ be ] = four newline print ( jumpsuit [ be ] ) newline"
"player stretch out . out stretch ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ stretch ] = player newline print ( out [ stretch ] ) newline"
"while seat man . while seat ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ seat ] = man newline print ( while [ seat ] ) newline"
"people get air . people get ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ get ] = air newline print ( people [ get ] ) newline"
"dog show some . some show ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ show ] = dog newline print ( some [ show ] ) newline"
"dog be asleep . asleep be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( asleep [ be ] ) newline"
"boy fall or . boy fall ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ fall ] = or newline print ( boy [ fall ] ) newline"
"child smile toddler . child smile ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ smile ] = toddler newline print ( child [ smile ] ) newline"
"girl walk out . out walk ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ walk ] = girl newline print ( out [ walk ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"man wear blue . blue wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( blue [ wear ] ) newline"
"soccer shirt he . soccer shirt ?","if entities . find ( soccer ) ! = None : newline newtab entities [ soccer ] [ shirt ] = he newline print ( soccer [ shirt ] ) newline"
"player chase two . player chase ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ chase ] = two newline print ( player [ chase ] ) newline"
"people have coffee . people have ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ have ] = coffee newline print ( people [ have ] ) newline"
"cap look out . out look ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ look ] = cap newline print ( out [ look ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"men cook asian . asian cook ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ cook ] = men newline print ( asian [ cook ] ) newline"
"string attach an . string attach ?","if entities . find ( string ) ! = None : newline newtab entities [ string ] [ attach ] = an newline print ( string [ attach ] ) newline"
"red be many . many be ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ be ] = red newline print ( many [ be ] ) newline"
"lady sit bride . lady sit ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ sit ] = bride newline print ( lady [ sit ] ) newline"
"couple return white . white return ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ return ] = couple newline print ( white [ return ] ) newline"
"boy be two . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = two newline print ( boy [ be ] ) newline"
"construction take one . one take ?","if entities . find ( construction ) ! = None : newline newtab entities [ construction ] [ take ] = construction newline print ( one [ take ] ) newline"
"child play some . some play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = child newline print ( some [ play ] ) newline"
"baby duck two . baby duck ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ duck ] = two newline print ( baby [ duck ] ) newline"
"woman observe animal . woman observe ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ observe ] = animal newline print ( woman [ observe ] ) newline"
"people stand next . next stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( next [ stand ] ) newline"
"boy wear helmet . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = helmet newline print ( boy [ wear ] ) newline"
"man wear sunglasses . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = sunglasses newline print ( man [ wear ] ) newline"
"while hold colorful . colorful hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = while newline print ( colorful [ hold ] ) newline"
"sunglasses be next . next be ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ be ] = sunglasses newline print ( next [ be ] ) newline"
"girl run men . girl run ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ run ] = men newline print ( girl [ run ] ) newline"
"couple wear black . black wear ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ wear ] = couple newline print ( black [ wear ] ) newline"
"child drive blue . blue drive ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ drive ] = child newline print ( blue [ drive ] ) newline"
"team be two . team be ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ be ] = two newline print ( team [ be ] ) newline"
"man spin out . out spin ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ spin ] = man newline print ( out [ spin ] ) newline"
"dog be john . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = john newline print ( dog [ be ] ) newline"
"who be all . all be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( all [ be ] ) newline"
"dog be sleeping . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = sleeping newline print ( dog [ be ] ) newline"
"green shirt who . green shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = who newline print ( green [ shirt ] ) newline"
"man wear sleeveless . sleeveless wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( sleeveless [ wear ] ) newline"
"girl wear camouflage . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = camouflage newline print ( girl [ wear ] ) newline"
"people be open . open be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( open [ be ] ) newline"
"singer dress all . all dress ?","if entities . find ( singer ) ! = None : newline newtab entities [ singer ] [ dress ] = singer newline print ( all [ dress ] ) newline"
"man look while . man look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = while newline print ( man [ look ] ) newline"
"child play football . child play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = football newline print ( child [ play ] ) newline"
"outfit pose while . outfit pose ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ pose ] = while newline print ( outfit [ pose ] ) newline"
"men be sleeping . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = sleeping newline print ( men [ be ] ) newline"
"swimmer wear earmuff . swimmer wear ?","if entities . find ( swimmer ) ! = None : newline newtab entities [ swimmer ] [ wear ] = earmuff newline print ( swimmer [ wear ] ) newline"
"man be beer . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = beer newline print ( man [ be ] ) newline"
"child sit next . next sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = child newline print ( next [ sit ] ) newline"
"it talk while . it talk ?","if entities . find ( it ) ! = None : newline newtab entities [ it ] [ talk ] = while newline print ( it [ talk ] ) newline"
"wakeboard attempt white . white attempt ?","if entities . find ( wakeboard ) ! = None : newline newtab entities [ wakeboard ] [ attempt ] = wakeboard newline print ( white [ attempt ] ) newline"
"men talk while . men talk ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ talk ] = while newline print ( men [ talk ] ) newline"
"roadside hold colorful . colorful hold ?","if entities . find ( roadside ) ! = None : newline newtab entities [ roadside ] [ hold ] = roadside newline print ( colorful [ hold ] ) newline"
"child be an . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = an newline print ( child [ be ] ) newline"
"palm tree white . white tree ?","if entities . find ( palm ) ! = None : newline newtab entities [ palm ] [ tree ] = palm newline print ( white [ tree ] ) newline"
"jazz cover another . another cover ?","if entities . find ( jazz ) ! = None : newline newtab entities [ jazz ] [ cover ] = jazz newline print ( another [ cover ] ) newline"
"pirate ship out . out ship ?","if entities . find ( pirate ) ! = None : newline newtab entities [ pirate ] [ ship ] = pirate newline print ( out [ ship ] ) newline"
"dog jump out . out jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = dog newline print ( out [ jump ] ) newline"
"water sculpture while . water sculpture ?","if entities . find ( water ) ! = None : newline newtab entities [ water ] [ sculpture ] = while newline print ( water [ sculpture ] ) newline"
"boy be napping . napping be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( napping [ be ] ) newline"
"bird be many . many be ?","if entities . find ( bird ) ! = None : newline newtab entities [ bird ] [ be ] = bird newline print ( many [ be ] ) newline"
"woman be unclear . unclear be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( unclear [ be ] ) newline"
"couple sit while . couple sit ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ sit ] = while newline print ( couple [ sit ] ) newline"
"road line white . white line ?","if entities . find ( road ) ! = None : newline newtab entities [ road ] [ line ] = road newline print ( white [ line ] ) newline"
"people walk alone . alone walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( alone [ walk ] ) newline"
"man help guide . man help ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ help ] = guide newline print ( man [ help ] ) newline"
"head close bike . head close ?","if entities . find ( head ) ! = None : newline newtab entities [ head ] [ close ] = bike newline print ( head [ close ] ) newline"
"people be three . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = three newline print ( people [ be ] ) newline"
"unicef bucket full . full bucket ?","if entities . find ( unicef ) ! = None : newline newtab entities [ unicef ] [ bucket ] = unicef newline print ( full [ bucket ] ) newline"
"lady wear white . white wear ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ wear ] = lady newline print ( white [ wear ] ) newline"
"rice hat one . one hat ?","if entities . find ( rice ) ! = None : newline newtab entities [ rice ] [ hat ] = rice newline print ( one [ hat ] ) newline"
"green shirt out . out shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = green newline print ( out [ shirt ] ) newline"
"park look out . out look ?","if entities . find ( park ) ! = None : newline newtab entities [ park ] [ look ] = park newline print ( out [ look ] ) newline"
"subway look guy . subway look ?","if entities . find ( subway ) ! = None : newline newtab entities [ subway ] [ look ] = guy newline print ( subway [ look ] ) newline"
"motorcyclist ride one . one ride ?","if entities . find ( motorcyclist ) ! = None : newline newtab entities [ motorcyclist ] [ ride ] = motorcyclist newline print ( one [ ride ] ) newline"
"orange dress young . orange dress ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ dress ] = young newline print ( orange [ dress ] ) newline"
"woman reach out . out reach ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ reach ] = woman newline print ( out [ reach ] ) newline"
"apron prepare many . many prepare ?","if entities . find ( apron ) ! = None : newline newtab entities [ apron ] [ prepare ] = apron newline print ( many [ prepare ] ) newline"
"dog be prominent . prominent be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( prominent [ be ] ) newline"
"boy wear white . white wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = boy newline print ( white [ wear ] ) newline"
"feature suit men . feature suit ?","if entities . find ( feature ) ! = None : newline newtab entities [ feature ] [ suit ] = men newline print ( feature [ suit ] ) newline"
"sign rest head . sign rest ?","if entities . find ( sign ) ! = None : newline newtab entities [ sign ] [ rest ] = head newline print ( sign [ rest ] ) newline"
"dog emerge two . dog emerge ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ emerge ] = two newline print ( dog [ emerge ] ) newline"
"street surround worker . street surround ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ surround ] = worker newline print ( street [ surround ] ) newline"
"who jump log . who jump ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ jump ] = log newline print ( who [ jump ] ) newline"
"trash scatter two . trash scatter ?","if entities . find ( trash ) ! = None : newline newtab entities [ trash ] [ scatter ] = two newline print ( trash [ scatter ] ) newline"
"girl wear bright . bright wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = girl newline print ( bright [ wear ] ) newline"
"while ride an . while ride ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ ride ] = an newline print ( while [ ride ] ) newline"
"men play dominoes . men play ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ play ] = dominoes newline print ( men [ play ] ) newline"
"red swim next . next swim ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ swim ] = red newline print ( next [ swim ] ) newline"
"jacket be ready . ready be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = jacket newline print ( ready [ be ] ) newline"
"girl show camaraderie . girl show ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ show ] = camaraderie newline print ( girl [ show ] ) newline"
"people be whispering . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = whispering newline print ( people [ be ] ) newline"
"flower dress use . flower dress ?","if entities . find ( flower ) ! = None : newline newtab entities [ flower ] [ dress ] = use newline print ( flower [ dress ] ) newline"
"bikers be two . bikers be ?","if entities . find ( bikers ) ! = None : newline newtab entities [ bikers ] [ be ] = two newline print ( bikers [ be ] ) newline"
"men be midair . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = midair newline print ( men [ be ] ) newline"
"mountain look fella . mountain look ?","if entities . find ( mountain ) ! = None : newline newtab entities [ mountain ] [ look ] = fella newline print ( mountain [ look ] ) newline"
"man jump high . high jump ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ jump ] = man newline print ( high [ jump ] ) newline"
"dog sit court . dog sit ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ sit ] = court newline print ( dog [ sit ] ) newline"
"tutu get out . out get ?","if entities . find ( tutu ) ! = None : newline newtab entities [ tutu ] [ get ] = tutu newline print ( out [ get ] ) newline"
"while be airborne . airborne be ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ be ] = while newline print ( airborne [ be ] ) newline"
"man do some . some do ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ do ] = man newline print ( some [ do ] ) newline"
"woman stand upright . upright stand ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ stand ] = woman newline print ( upright [ stand ] ) newline"
"woman be rock . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = rock newline print ( woman [ be ] ) newline"
"people be laughing . laughing be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( laughing [ be ] ) newline"
"people sit next . next sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( next [ sit ] ) newline"
"men be five . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = five newline print ( men [ be ] ) newline"
"people be swinging . swinging be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( swinging [ be ] ) newline"
"man wear blue . blue wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( blue [ wear ] ) newline"
"people sit next . next sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( next [ sit ] ) newline"
"people be visible . visible be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( visible [ be ] ) newline"
"cowboy look out . out look ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ look ] = cowboy newline print ( out [ look ] ) newline"
"person ski jacket . person ski ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ ski ] = jacket newline print ( person [ ski ] ) newline"
"man perform martial . martial perform ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ perform ] = man newline print ( martial [ perform ] ) newline"
"child sit man . child sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = man newline print ( child [ sit ] ) newline"
"boat look doll . boat look ?","if entities . find ( boat ) ! = None : newline newtab entities [ boat ] [ look ] = doll newline print ( boat [ look ] ) newline"
"helmet take photo . helmet take ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ take ] = photo newline print ( helmet [ take ] ) newline"
"woman be sleeping . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sleeping newline print ( woman [ be ] ) newline"
"photographer be visible . visible be ?","if entities . find ( photographer ) ! = None : newline newtab entities [ photographer ] [ be ] = photographer newline print ( visible [ be ] ) newline"
"gentleman sit while . gentleman sit ?","if entities . find ( gentleman ) ! = None : newline newtab entities [ gentleman ] [ sit ] = while newline print ( gentleman [ sit ] ) newline"
"woman be ballet . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = ballet newline print ( woman [ be ] ) newline"
"woman wear an . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = an newline print ( woman [ wear ] ) newline"
"cliff be screaming . screaming be ?","if entities . find ( cliff ) ! = None : newline newtab entities [ cliff ] [ be ] = cliff newline print ( screaming [ be ] ) newline"
"girl wear purple . purple wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = girl newline print ( purple [ wear ] ) newline"
"water connect white . white connect ?","if entities . find ( water ) ! = None : newline newtab entities [ water ] [ connect ] = water newline print ( white [ connect ] ) newline"
"passenger be dirt . passenger be ?","if entities . find ( passenger ) ! = None : newline newtab entities [ passenger ] [ be ] = dirt newline print ( passenger [ be ] ) newline"
"green field white . white field ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ field ] = green newline print ( white [ field ] ) newline"
"player be zombie . player be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = zombie newline print ( player [ be ] ) newline"
"tongue stick head . tongue stick ?","if entities . find ( tongue ) ! = None : newline newtab entities [ tongue ] [ stick ] = head newline print ( tongue [ stick ] ) newline"
"orange backpack hike . orange backpack ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ backpack ] = hike newline print ( orange [ backpack ] ) newline"
"girl water hose . girl water ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ water ] = hose newline print ( girl [ water ] ) newline"
"suit sit next . next sit ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ sit ] = suit newline print ( next [ sit ] ) newline"
"boy be full . full be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( full [ be ] ) newline"
"green shirt clean . clean shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = green newline print ( clean [ shirt ] ) newline"
"car park next . next park ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ park ] = car newline print ( next [ park ] ) newline"
"dog walk next . next walk ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ walk ] = dog newline print ( next [ walk ] ) newline"
"asian eat fast . fast eat ?","if entities . find ( asian ) ! = None : newline newtab entities [ asian ] [ eat ] = asian newline print ( fast [ eat ] ) newline"
"woman paint an . woman paint ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ paint ] = an newline print ( woman [ paint ] ) newline"
"child play guitar . child play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = guitar newline print ( child [ play ] ) newline"
"man walk while . man walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = while newline print ( man [ walk ] ) newline"
"orange vest next . next vest ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ vest ] = orange newline print ( next [ vest ] ) newline"
"dog run full . full run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( full [ run ] ) newline"
"while stand or . while stand ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ stand ] = or newline print ( while [ stand ] ) newline"
"men wear kilt . men wear ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ wear ] = kilt newline print ( men [ wear ] ) newline"
"red shirt swinging . swinging shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( swinging [ shirt ] ) newline"
"silver bead while . silver bead ?","if entities . find ( silver ) ! = None : newline newtab entities [ silver ] [ bead ] = while newline print ( silver [ bead ] ) newline"
"red dress dance . red dress ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ dress ] = dance newline print ( red [ dress ] ) newline"
"man be six . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = six newline print ( man [ be ] ) newline"
"child be married . married be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( married [ be ] ) newline"
"hair be several . several be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = hair newline print ( several [ be ] ) newline"
"friend look out . out look ?","if entities . find ( friend ) ! = None : newline newtab entities [ friend ] [ look ] = friend newline print ( out [ look ] ) newline"
"boy lie half . half lie ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ lie ] = boy newline print ( half [ lie ] ) newline"
"field fight while . field fight ?","if entities . find ( field ) ! = None : newline newtab entities [ field ] [ fight ] = while newline print ( field [ fight ] ) newline"
"child play guitar . child play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = guitar newline print ( child [ play ] ) newline"
"people stare out . out stare ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stare ] = people newline print ( out [ stare ] ) newline"
"men practice trick . men practice ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ practice ] = trick newline print ( men [ practice ] ) newline"
"top be comforting . comforting be ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ be ] = top newline print ( comforting [ be ] ) newline"
"counter look kitchen . counter look ?","if entities . find ( counter ) ! = None : newline newtab entities [ counter ] [ look ] = kitchen newline print ( counter [ look ] ) newline"
"woman sit or . woman sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = or newline print ( woman [ sit ] ) newline"
"green grass next . next grass ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ grass ] = green newline print ( next [ grass ] ) newline"
"man do various . various do ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ do ] = man newline print ( various [ do ] ) newline"
"member talk next . next talk ?","if entities . find ( member ) ! = None : newline newtab entities [ member ] [ talk ] = member newline print ( next [ talk ] ) newline"
"cheerleader be some . some be ?","if entities . find ( cheerleader ) ! = None : newline newtab entities [ cheerleader ] [ be ] = cheerleader newline print ( some [ be ] ) newline"
"woman participate white . white participate ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ participate ] = woman newline print ( white [ participate ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"people be earphone . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = earphone newline print ( people [ be ] ) newline"
"street shade white . white shade ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ shade ] = street newline print ( white [ shade ] ) newline"
"woman wear big . big wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( big [ wear ] ) newline"
"man hang glider . man hang ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hang ] = glider newline print ( man [ hang ] ) newline"
"sundress be sleeping . sundress be ?","if entities . find ( sundress ) ! = None : newline newtab entities [ sundress ] [ be ] = sleeping newline print ( sundress [ be ] ) newline"
"person look redhead . person look ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ look ] = redhead newline print ( person [ look ] ) newline"
"sign hang out . out hang ?","if entities . find ( sign ) ! = None : newline newtab entities [ sign ] [ hang ] = sign newline print ( out [ hang ] ) newline"
"men sit or . men sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = or newline print ( men [ sit ] ) newline"
"biker prepare food . biker prepare ?","if entities . find ( biker ) ! = None : newline newtab entities [ biker ] [ prepare ] = food newline print ( biker [ prepare ] ) newline"
"girl be attentive . attentive be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( attentive [ be ] ) newline"
"water ride bike . water ride ?","if entities . find ( water ) ! = None : newline newtab entities [ water ] [ ride ] = bike newline print ( water [ ride ] ) newline"
"woman wear an . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = an newline print ( woman [ wear ] ) newline"
"dog be way . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = way newline print ( dog [ be ] ) newline"
"dog be people . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = people newline print ( dog [ be ] ) newline"
"man skateboard while . man skateboard ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ skateboard ] = while newline print ( man [ skateboard ] ) newline"
"woman do some . some do ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ do ] = woman newline print ( some [ do ] ) newline"
"log float wooden . wooden float ?","if entities . find ( log ) ! = None : newline newtab entities [ log ] [ float ] = log newline print ( wooden [ float ] ) newline"
"man pick out . out pick ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ pick ] = man newline print ( out [ pick ] ) newline"
"dog be sleeping . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = sleeping newline print ( dog [ be ] ) newline"
"sweater hold sandal . sweater hold ?","if entities . find ( sweater ) ! = None : newline newtab entities [ sweater ] [ hold ] = sandal newline print ( sweater [ hold ] ) newline"
"boy dress dance . boy dress ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ dress ] = dance newline print ( boy [ dress ] ) newline"
"jacket fish pole . jacket fish ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ fish ] = pole newline print ( jacket [ fish ] ) newline"
"laptop smile man . laptop smile ?","if entities . find ( laptop ) ! = None : newline newtab entities [ laptop ] [ smile ] = man newline print ( laptop [ smile ] ) newline"
"boy be lovely . lovely be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( lovely [ be ] ) newline"
"red short use . red short ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ short ] = use newline print ( red [ short ] ) newline"
"window advertise white . white advertise ?","if entities . find ( window ) ! = None : newline newtab entities [ window ] [ advertise ] = window newline print ( white [ advertise ] ) newline"
"biker jump out . out jump ?","if entities . find ( biker ) ! = None : newline newtab entities [ biker ] [ jump ] = biker newline print ( out [ jump ] ) newline"
"tan color indian . indian color ?","if entities . find ( tan ) ! = None : newline newtab entities [ tan ] [ color ] = tan newline print ( indian [ color ] ) newline"
"woman hold musical . musical hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = woman newline print ( musical [ hold ] ) newline"
"while hold umbrella . while hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = umbrella newline print ( while [ hold ] ) newline"
"people sit alone . alone sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( alone [ sit ] ) newline"
"red shirt an . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = an newline print ( red [ shirt ] ) newline"
"boy be high . high be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( high [ be ] ) newline"
"people be three . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = three newline print ( people [ be ] ) newline"
"man bend halfway . halfway bend ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ bend ] = man newline print ( halfway [ bend ] ) newline"
"guy play music . guy play ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ play ] = music newline print ( guy [ play ] ) newline"
"sunglasses lean out . out lean ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ lean ] = sunglasses newline print ( out [ lean ] ) newline"
"men be sleeping . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = sleeping newline print ( men [ be ] ) newline"
"man walk next . next walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = man newline print ( next [ walk ] ) newline"
"woman be brake . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = brake newline print ( woman [ be ] ) newline"
"person be sleeping . person be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = sleeping newline print ( person [ be ] ) newline"
"who be clustered . clustered be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( clustered [ be ] ) newline"
"an empty plastic . plastic empty ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ empty ] = an newline print ( plastic [ empty ] ) newline"
"men hold two . men hold ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ hold ] = two newline print ( men [ hold ] ) newline"
"people sit next . next sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( next [ sit ] ) newline"
"man be staring . staring be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( staring [ be ] ) newline"
"child smile woman . child smile ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ smile ] = woman newline print ( child [ smile ] ) newline"
"person be several . several be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = person newline print ( several [ be ] ) newline"
"dog run gear . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = gear newline print ( dog [ run ] ) newline"
"stadium deck out . out deck ?","if entities . find ( stadium ) ! = None : newline newtab entities [ stadium ] [ deck ] = stadium newline print ( out [ deck ] ) newline"
"dog chase pigeon . dog chase ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ chase ] = pigeon newline print ( dog [ chase ] ) newline"
"dreadlock smile little . little smile ?","if entities . find ( dreadlock ) ! = None : newline newtab entities [ dreadlock ] [ smile ] = dreadlock newline print ( little [ smile ] ) newline"
"woman be pole . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = pole newline print ( woman [ be ] ) newline"
"sheepdog be an . sheepdog be ?","if entities . find ( sheepdog ) ! = None : newline newtab entities [ sheepdog ] [ be ] = an newline print ( sheepdog [ be ] ) newline"
"policeman ride numerous . numerous ride ?","if entities . find ( policeman ) ! = None : newline newtab entities [ policeman ] [ ride ] = policeman newline print ( numerous [ ride ] ) newline"
"woman be pole . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = pole newline print ( woman [ be ] ) newline"
"music be three . music be ?","if entities . find ( music ) ! = None : newline newtab entities [ music ] [ be ] = three newline print ( music [ be ] ) newline"
"girl play ball . girl play ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ play ] = ball newline print ( girl [ play ] ) newline"
"men be many . many be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( many [ be ] ) newline"
"girl play musical . musical play ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ play ] = girl newline print ( musical [ play ] ) newline"
"person walk an . person walk ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ walk ] = an newline print ( person [ walk ] ) newline"
"man be one . one be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( one [ be ] ) newline"
"teeth bare it . teeth bare ?","if entities . find ( teeth ) ! = None : newline newtab entities [ teeth ] [ bare ] = it newline print ( teeth [ bare ] ) newline"
"horse be sleeping . horse be ?","if entities . find ( horse ) ! = None : newline newtab entities [ horse ] [ be ] = sleeping newline print ( horse [ be ] ) newline"
"straw hat who . straw hat ?","if entities . find ( straw ) ! = None : newline newtab entities [ straw ] [ hat ] = who newline print ( straw [ hat ] ) newline"
"man be orange . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = orange newline print ( man [ be ] ) newline"
"player jump backward . backward jump ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ jump ] = player newline print ( backward [ jump ] ) newline"
"people stand while . people stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = while newline print ( people [ stand ] ) newline"
"men be sleeping . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = sleeping newline print ( men [ be ] ) newline"
"jacket sit alone . alone sit ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ sit ] = jacket newline print ( alone [ sit ] ) newline"
"he play guitar . he play ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ play ] = guitar newline print ( he [ play ] ) newline"
"child be sleeping . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = sleeping newline print ( child [ be ] ) newline"
"people be swinging . swinging be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( swinging [ be ] ) newline"
"while dress all . all dress ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ dress ] = while newline print ( all [ dress ] ) newline"
"bikers stop sign . bikers stop ?","if entities . find ( bikers ) ! = None : newline newtab entities [ bikers ] [ stop ] = sign newline print ( bikers [ stop ] ) newline"
"people look man . people look ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ look ] = man newline print ( people [ look ] ) newline"
"man be cool . cool be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( cool [ be ] ) newline"
"child play guitar . child play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = guitar newline print ( child [ play ] ) newline"
"snowsuit be still . still be ?","if entities . find ( snowsuit ) ! = None : newline newtab entities [ snowsuit ] [ be ] = snowsuit newline print ( still [ be ] ) newline"
"team be sleeping . team be ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ be ] = sleeping newline print ( team [ be ] ) newline"
"people be all . all be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( all [ be ] ) newline"
"four speed white . white speed ?","if entities . find ( four ) ! = None : newline newtab entities [ four ] [ speed ] = four newline print ( white [ speed ] ) newline"
"boy wear black . black wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = boy newline print ( black [ wear ] ) newline"
"man stand alone . alone stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( alone [ stand ] ) newline"
"who be other . other be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( other [ be ] ) newline"
"athlete be white . white be ?","if entities . find ( athlete ) ! = None : newline newtab entities [ athlete ] [ be ] = athlete newline print ( white [ be ] ) newline"
"people stand next . next stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( next [ stand ] ) newline"
"man be sunday . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sunday newline print ( man [ be ] ) newline"
"man wear gray . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = gray newline print ( man [ wear ] ) newline"
"boy be group . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = group newline print ( boy [ be ] ) newline"
"people sit man . people sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = man newline print ( people [ sit ] ) newline"
"mouth be laughing . laughing be ?","if entities . find ( mouth ) ! = None : newline newtab entities [ mouth ] [ be ] = mouth newline print ( laughing [ be ] ) newline"
"people talk next . next talk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ talk ] = people newline print ( next [ talk ] ) newline"
"woman jump midair . woman jump ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ jump ] = midair newline print ( woman [ jump ] ) newline"
"dog put out . out put ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ put ] = dog newline print ( out [ put ] ) newline"
"race talk next . next talk ?","if entities . find ( race ) ! = None : newline newtab entities [ race ] [ talk ] = race newline print ( next [ talk ] ) newline"
"people stand idle . idle stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( idle [ stand ] ) newline"
"red play acoustic . acoustic play ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ play ] = red newline print ( acoustic [ play ] ) newline"
"dog be spray . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = spray newline print ( dog [ be ] ) newline"
"man wear red . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = red newline print ( man [ wear ] ) newline"
"jacket chase pigeon . jacket chase ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ chase ] = pigeon newline print ( jacket [ chase ] ) newline"
"brown shirt slide . brown shirt ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ shirt ] = slide newline print ( brown [ shirt ] ) newline"
"paper hat carousing . carousing hat ?","if entities . find ( paper ) ! = None : newline newtab entities [ paper ] [ hat ] = paper newline print ( carousing [ hat ] ) newline"
"girl be white . white be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( white [ be ] ) newline"
"boat call screaming . screaming call ?","if entities . find ( boat ) ! = None : newline newtab entities [ boat ] [ call ] = boat newline print ( screaming [ call ] ) newline"
"part eat cake . part eat ?","if entities . find ( part ) ! = None : newline newtab entities [ part ] [ eat ] = cake newline print ( part [ eat ] ) newline"
"girl be out . out be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( out [ be ] ) newline"
"who be several . several be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( several [ be ] ) newline"
"people wear bright . bright wear ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ wear ] = people newline print ( bright [ wear ] ) newline"
"people be out . out be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( out [ be ] ) newline"
"reveler participate white . white participate ?","if entities . find ( reveler ) ! = None : newline newtab entities [ reveler ] [ participate ] = reveler newline print ( white [ participate ] ) newline"
"street enjoy some . some enjoy ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ enjoy ] = street newline print ( some [ enjoy ] ) newline"
"family be ready . ready be ?","if entities . find ( family ) ! = None : newline newtab entities [ family ] [ be ] = family newline print ( ready [ be ] ) newline"
"people be staring . staring be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( staring [ be ] ) newline"
"street be open . open be ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ be ] = street newline print ( open [ be ] ) newline"
"worker wear camouflage . worker wear ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ wear ] = camouflage newline print ( worker [ wear ] ) newline"
"girl wear an . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = an newline print ( girl [ wear ] ) newline"
"child stand while . child stand ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ stand ] = while newline print ( child [ stand ] ) newline"
"dog run side . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = side newline print ( dog [ run ] ) newline"
"dog run out . out run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( out [ run ] ) newline"
"sea port white . white port ?","if entities . find ( sea ) ! = None : newline newtab entities [ sea ] [ port ] = sea newline print ( white [ port ] ) newline"
"sleeve be busy . busy be ?","if entities . find ( sleeve ) ! = None : newline newtab entities [ sleeve ] [ be ] = sleeve newline print ( busy [ be ] ) newline"
"tennis shoot white . white shoot ?","if entities . find ( tennis ) ! = None : newline newtab entities [ tennis ] [ shoot ] = tennis newline print ( white [ shoot ] ) newline"
"people gather bread . people gather ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ gather ] = bread newline print ( people [ gather ] ) newline"
"boy pour water . boy pour ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ pour ] = water newline print ( boy [ pour ] ) newline"
"bike take picture . bike take ?","if entities . find ( bike ) ! = None : newline newtab entities [ bike ] [ take ] = picture newline print ( bike [ take ] ) newline"
"jeans have one . one have ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ have ] = jeans newline print ( one [ have ] ) newline"
"car speed skater . car speed ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ speed ] = skater newline print ( car [ speed ] ) newline"
"man sit youth . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = youth newline print ( man [ sit ] ) newline"
"rock climb rock . rock climb ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ climb ] = rock newline print ( rock [ climb ] ) newline"
"jacket be laughing . laughing be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = jacket newline print ( laughing [ be ] ) newline"
"host take some . some take ?","if entities . find ( host ) ! = None : newline newtab entities [ host ] [ take ] = host newline print ( some [ take ] ) newline"
"ice cream cone . ice cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = cone newline print ( ice [ cream ] ) newline"
"man push cargo . man push ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ push ] = cargo newline print ( man [ push ] ) newline"
"salmon color plastic . plastic color ?","if entities . find ( salmon ) ! = None : newline newtab entities [ salmon ] [ color ] = salmon newline print ( plastic [ color ] ) newline"
"jacket be an . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = an newline print ( jacket [ be ] ) newline"
"child sit next . next sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = child newline print ( next [ sit ] ) newline"
"cap hold metal . cap hold ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ hold ] = metal newline print ( cap [ hold ] ) newline"
"woman wait next . next wait ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wait ] = woman newline print ( next [ wait ] ) newline"
"bag walk next . next walk ?","if entities . find ( bag ) ! = None : newline newtab entities [ bag ] [ walk ] = bag newline print ( next [ walk ] ) newline"
"pipe go home . pipe go ?","if entities . find ( pipe ) ! = None : newline newtab entities [ pipe ] [ go ] = home newline print ( pipe [ go ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"people be eager . eager be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( eager [ be ] ) newline"
"tights be textile . textile be ?","if entities . find ( tights ) ! = None : newline newtab entities [ tights ] [ be ] = tights newline print ( textile [ be ] ) newline"
"man be four . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = four newline print ( man [ be ] ) newline"
"child play various . various play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = child newline print ( various [ play ] ) newline"
"woman be opening . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = opening newline print ( woman [ be ] ) newline"
"pigeon fly overhead . pigeon fly ?","if entities . find ( pigeon ) ! = None : newline newtab entities [ pigeon ] [ fly ] = overhead newline print ( pigeon [ fly ] ) newline"
"woman be sleeping . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sleeping newline print ( woman [ be ] ) newline"
"woman walk or . woman walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = or newline print ( woman [ walk ] ) newline"
"while tread two . while tread ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ tread ] = two newline print ( while [ tread ] ) newline"
"people carry black . black carry ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ carry ] = people newline print ( black [ carry ] ) newline"
"men be spaced . spaced be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( spaced [ be ] ) newline"
"ice cream cool . cool cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = ice newline print ( cool [ cream ] ) newline"
"son walk next . next walk ?","if entities . find ( son ) ! = None : newline newtab entities [ son ] [ walk ] = son newline print ( next [ walk ] ) newline"
"girl exercise two . girl exercise ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ exercise ] = two newline print ( girl [ exercise ] ) newline"
"umbrella walk next . next walk ?","if entities . find ( umbrella ) ! = None : newline newtab entities [ umbrella ] [ walk ] = umbrella newline print ( next [ walk ] ) newline"
"red hat smoke . red hat ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ hat ] = smoke newline print ( red [ hat ] ) newline"
"kicker attempt white . white attempt ?","if entities . find ( kicker ) ! = None : newline newtab entities [ kicker ] [ attempt ] = kicker newline print ( white [ attempt ] ) newline"
"la take one . one take ?","if entities . find ( la ) ! = None : newline newtab entities [ la ] [ take ] = la newline print ( one [ take ] ) newline"
"guy wear pajama . guy wear ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ wear ] = pajama newline print ( guy [ wear ] ) newline"
"men be swinging . swinging be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( swinging [ be ] ) newline"
"ice cream truck . ice cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = truck newline print ( ice [ cream ] ) newline"
"woman be sheep . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sheep newline print ( woman [ be ] ) newline"
"men be many . many be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( many [ be ] ) newline"
"collar be rock . collar be ?","if entities . find ( collar ) ! = None : newline newtab entities [ collar ] [ be ] = rock newline print ( collar [ be ] ) newline"
"swimmer leap stance . swimmer leap ?","if entities . find ( swimmer ) ! = None : newline newtab entities [ swimmer ] [ leap ] = stance newline print ( swimmer [ leap ] ) newline"
"couple hold out . out hold ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ hold ] = couple newline print ( out [ hold ] ) newline"
"mountain try two . mountain try ?","if entities . find ( mountain ) ! = None : newline newtab entities [ mountain ] [ try ] = two newline print ( mountain [ try ] ) newline"
"man wear jeans . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = jeans newline print ( man [ wear ] ) newline"
"person sit next . next sit ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ sit ] = person newline print ( next [ sit ] ) newline"
"collar run tongue . collar run ?","if entities . find ( collar ) ! = None : newline newtab entities [ collar ] [ run ] = tongue newline print ( collar [ run ] ) newline"
"safety vest while . safety vest ?","if entities . find ( safety ) ! = None : newline newtab entities [ safety ] [ vest ] = while newline print ( safety [ vest ] ) newline"
"boy sit court . boy sit ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ sit ] = court newline print ( boy [ sit ] ) newline"
"two police uniform . uniform police ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ police ] = two newline print ( uniform [ police ] ) newline"
"bike ramp while . bike ramp ?","if entities . find ( bike ) ! = None : newline newtab entities [ bike ] [ ramp ] = while newline print ( bike [ ramp ] ) newline"
"men be sleeping . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = sleeping newline print ( men [ be ] ) newline"
"boy be many . many be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( many [ be ] ) newline"
"child kick it . child kick ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ kick ] = it newline print ( child [ kick ] ) newline"
"poodle be wooded . wooded be ?","if entities . find ( poodle ) ! = None : newline newtab entities [ poodle ] [ be ] = poodle newline print ( wooded [ be ] ) newline"
"baby hold bag . baby hold ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ hold ] = bag newline print ( baby [ hold ] ) newline"
"lady wear blue . blue wear ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ wear ] = lady newline print ( blue [ wear ] ) newline"
"kid climb an . kid climb ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ climb ] = an newline print ( kid [ climb ] ) newline"
"christmas tree white . white tree ?","if entities . find ( christmas ) ! = None : newline newtab entities [ christmas ] [ tree ] = christmas newline print ( white [ tree ] ) newline"
"men dress people . men dress ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ dress ] = people newline print ( men [ dress ] ) newline"
"pestle grind white . white grind ?","if entities . find ( pestle ) ! = None : newline newtab entities [ pestle ] [ grind ] = pestle newline print ( white [ grind ] ) newline"
"collar be sleeping . collar be ?","if entities . find ( collar ) ! = None : newline newtab entities [ collar ] [ be ] = sleeping newline print ( collar [ be ] ) newline"
"kid be two . kid be ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ be ] = two newline print ( kid [ be ] ) newline"
"girl walk next . next walk ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ walk ] = girl newline print ( next [ walk ] ) newline"
"dog stand knee . dog stand ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ stand ] = knee newline print ( dog [ stand ] ) newline"
"room be asleep . asleep be ?","if entities . find ( room ) ! = None : newline newtab entities [ room ] [ be ] = room newline print ( asleep [ be ] ) newline"
"tan short focus . tan short ?","if entities . find ( tan ) ! = None : newline newtab entities [ tan ] [ short ] = focus newline print ( tan [ short ] ) newline"
"platform read while . platform read ?","if entities . find ( platform ) ! = None : newline newtab entities [ platform ] [ read ] = while newline print ( platform [ read ] ) newline"
"baby wear purple . purple wear ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ wear ] = baby newline print ( purple [ wear ] ) newline"
"woman buy white . white buy ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ buy ] = woman newline print ( white [ buy ] ) newline"
"man dress orchestra . man dress ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ dress ] = orchestra newline print ( man [ dress ] ) newline"
"while hold an . while hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = an newline print ( while [ hold ] ) newline"
"bride hold an . bride hold ?","if entities . find ( bride ) ! = None : newline newtab entities [ bride ] [ hold ] = an newline print ( bride [ hold ] ) newline"
"boy look out . out look ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ look ] = boy newline print ( out [ look ] ) newline"
"while wear orange . while wear ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ wear ] = orange newline print ( while [ wear ] ) newline"
"while stand next . next stand ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ stand ] = while newline print ( next [ stand ] ) newline"
"men carry green . men carry ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ carry ] = green newline print ( men [ carry ] ) newline"
"who be asleep . asleep be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( asleep [ be ] ) newline"
"red shirt swinging . swinging shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( swinging [ shirt ] ) newline"
"firefighter be many . many be ?","if entities . find ( firefighter ) ! = None : newline newtab entities [ firefighter ] [ be ] = firefighter newline print ( many [ be ] ) newline"
"woman be way . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = way newline print ( woman [ be ] ) newline"
"child riot two . child riot ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ riot ] = two newline print ( child [ riot ] ) newline"
"red shirt swinging . swinging shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( swinging [ shirt ] ) newline"
"character hold white . white hold ?","if entities . find ( character ) ! = None : newline newtab entities [ character ] [ hold ] = character newline print ( white [ hold ] ) newline"
"side throw tomato . side throw ?","if entities . find ( side ) ! = None : newline newtab entities [ side ] [ throw ] = tomato newline print ( side [ throw ] ) newline"
"green shirt while . green shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = while newline print ( green [ shirt ] ) newline"
"man be swinging . swinging be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( swinging [ be ] ) newline"
"girl compete white . white compete ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ compete ] = girl newline print ( white [ compete ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"boy be blindfolded . blindfolded be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( blindfolded [ be ] ) newline"
"man shoot white . white shoot ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ shoot ] = man newline print ( white [ shoot ] ) newline"
"men hold another . another hold ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ hold ] = men newline print ( another [ hold ] ) newline"
"girl walk hand . girl walk ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ walk ] = hand newline print ( girl [ walk ] ) newline"
"woman look out . out look ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ look ] = woman newline print ( out [ look ] ) newline"
"woman be an . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = an newline print ( woman [ be ] ) newline"
"player prepare food . player prepare ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ prepare ] = food newline print ( player [ prepare ] ) newline"
"woman be sleeping . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sleeping newline print ( woman [ be ] ) newline"
"patch run dog . patch run ?","if entities . find ( patch ) ! = None : newline newtab entities [ patch ] [ run ] = dog newline print ( patch [ run ] ) newline"
"dog play next . next play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = dog newline print ( next [ play ] ) newline"
"businessman leave some . some leave ?","if entities . find ( businessman ) ! = None : newline newtab entities [ businessman ] [ leave ] = businessman newline print ( some [ leave ] ) newline"
"surfer catch an . surfer catch ?","if entities . find ( surfer ) ! = None : newline newtab entities [ surfer ] [ catch ] = an newline print ( surfer [ catch ] ) newline"
"food look out . out look ?","if entities . find ( food ) ! = None : newline newtab entities [ food ] [ look ] = food newline print ( out [ look ] ) newline"
"dog be out . out be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( out [ be ] ) newline"
"men run fast . fast run ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ run ] = men newline print ( fast [ run ] ) newline"
"cowboy hat construction . cowboy hat ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ hat ] = construction newline print ( cowboy [ hat ] ) newline"
"girl be two . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = two newline print ( girl [ be ] ) newline"
"hand push two . hand push ?","if entities . find ( hand ) ! = None : newline newtab entities [ hand ] [ push ] = two newline print ( hand [ push ] ) newline"
"woman squat next . next squat ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ squat ] = woman newline print ( next [ squat ] ) newline"
"four sit next . next sit ?","if entities . find ( four ) ! = None : newline newtab entities [ four ] [ sit ] = four newline print ( next [ sit ] ) newline"
"couple stand while . couple stand ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ stand ] = while newline print ( couple [ stand ] ) newline"
"dog jump while . dog jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = while newline print ( dog [ jump ] ) newline"
"man wear hot . hot wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( hot [ wear ] ) newline"
"men sit next . next sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = men newline print ( next [ sit ] ) newline"
"man sing while . man sing ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sing ] = while newline print ( man [ sing ] ) newline"
"top be four . top be ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ be ] = four newline print ( top [ be ] ) newline"
"parade wave american . parade wave ?","if entities . find ( parade ) ! = None : newline newtab entities [ parade ] [ wave ] = american newline print ( parade [ wave ] ) newline"
"man play dead . dead play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = man newline print ( dead [ play ] ) newline"
"street hold yellow . yellow hold ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ hold ] = street newline print ( yellow [ hold ] ) newline"
"while hold an . while hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = an newline print ( while [ hold ] ) newline"
"terrain border collie . terrain border ?","if entities . find ( terrain ) ! = None : newline newtab entities [ terrain ] [ border ] = collie newline print ( terrain [ border ] ) newline"
"climber try out . out try ?","if entities . find ( climber ) ! = None : newline newtab entities [ climber ] [ try ] = climber newline print ( out [ try ] ) newline"
"men practice dance . men practice ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ practice ] = dance newline print ( men [ practice ] ) newline"
"woman talk next . next talk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ talk ] = woman newline print ( next [ talk ] ) newline"
"dog hold shovel . dog hold ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ hold ] = shovel newline print ( dog [ hold ] ) newline"
"family be two . family be ?","if entities . find ( family ) ! = None : newline newtab entities [ family ] [ be ] = two newline print ( family [ be ] ) newline"
"suit hold gun . suit hold ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ hold ] = gun newline print ( suit [ hold ] ) newline"
"man dress out . out dress ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ dress ] = man newline print ( out [ dress ] ) newline"
"man be two . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = two newline print ( man [ be ] ) newline"
"two float wooden . wooden float ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ float ] = two newline print ( wooden [ float ] ) newline"
"professor be sleeping . professor be ?","if entities . find ( professor ) ! = None : newline newtab entities [ professor ] [ be ] = sleeping newline print ( professor [ be ] ) newline"
"girl stand next . next stand ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ stand ] = girl newline print ( next [ stand ] ) newline"
"jersey look woman . jersey look ?","if entities . find ( jersey ) ! = None : newline newtab entities [ jersey ] [ look ] = woman newline print ( jersey [ look ] ) newline"
"while tend white . white tend ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ tend ] = while newline print ( white [ tend ] ) newline"
"while watch some . some watch ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ watch ] = while newline print ( some [ watch ] ) newline"
"stone stack many . many stack ?","if entities . find ( stone ) ! = None : newline newtab entities [ stone ] [ stack ] = stone newline print ( many [ stack ] ) newline"
"sand sculpture white . white sculpture ?","if entities . find ( sand ) ! = None : newline newtab entities [ sand ] [ sculpture ] = sand newline print ( white [ sculpture ] ) newline"
"group set while . group set ?","if entities . find ( group ) ! = None : newline newtab entities [ group ] [ set ] = while newline print ( group [ set ] ) newline"
"people be swinging . swinging be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( swinging [ be ] ) newline"
"parent hold some . some hold ?","if entities . find ( parent ) ! = None : newline newtab entities [ parent ] [ hold ] = parent newline print ( some [ hold ] ) newline"
"people mill two . people mill ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ mill ] = two newline print ( people [ mill ] ) newline"
"man be asleep . asleep be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( asleep [ be ] ) newline"
"helmet be young . helmet be ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ be ] = young newline print ( helmet [ be ] ) newline"
"outfit be airborne . airborne be ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ be ] = outfit newline print ( airborne [ be ] ) newline"
"people pose while . people pose ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ pose ] = while newline print ( people [ pose ] ) newline"
"boy give out . out give ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ give ] = boy newline print ( out [ give ] ) newline"
"man hold an . man hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = an newline print ( man [ hold ] ) newline"
"red uniform use . red uniform ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ uniform ] = use newline print ( red [ uniform ] ) newline"
"hair look man . hair look ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ look ] = man newline print ( hair [ look ] ) newline"
"red uniform use . red uniform ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ uniform ] = use newline print ( red [ uniform ] ) newline"
"people ride one . one ride ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ ride ] = people newline print ( one [ ride ] ) newline"
"man be an . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = an newline print ( man [ be ] ) newline"
"outfit be screaming . screaming be ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ be ] = outfit newline print ( screaming [ be ] ) newline"
"vendor smile next . next smile ?","if entities . find ( vendor ) ! = None : newline newtab entities [ vendor ] [ smile ] = vendor newline print ( next [ smile ] ) newline"
"people stand next . next stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( next [ stand ] ) newline"
"men look out . out look ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ look ] = men newline print ( out [ look ] ) newline"
"gear be many . many be ?","if entities . find ( gear ) ! = None : newline newtab entities [ gear ] [ be ] = gear newline print ( many [ be ] ) newline"
"people play musical . musical play ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ play ] = people newline print ( musical [ play ] ) newline"
"child balance upside . child balance ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ balance ] = upside newline print ( child [ balance ] ) newline"
"pizza shop bag . pizza shop ?","if entities . find ( pizza ) ! = None : newline newtab entities [ pizza ] [ shop ] = bag newline print ( pizza [ shop ] ) newline"
"pole sit while . pole sit ?","if entities . find ( pole ) ! = None : newline newtab entities [ pole ] [ sit ] = while newline print ( pole [ sit ] ) newline"
"pine tree white . white tree ?","if entities . find ( pine ) ! = None : newline newtab entities [ pine ] [ tree ] = pine newline print ( white [ tree ] ) newline"
"people sit while . people sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = while newline print ( people [ sit ] ) newline"
"people drink alcohol . people drink ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ drink ] = alcohol newline print ( people [ drink ] ) newline"
"red stand guard . red stand ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ stand ] = guard newline print ( red [ stand ] ) newline"
"dog be neck . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = neck newline print ( dog [ be ] ) newline"
"snowboarder kick wood . snowboarder kick ?","if entities . find ( snowboarder ) ! = None : newline newtab entities [ snowboarder ] [ kick ] = wood newline print ( snowboarder [ kick ] ) newline"
"flower be hula . flower be ?","if entities . find ( flower ) ! = None : newline newtab entities [ flower ] [ be ] = hula newline print ( flower [ be ] ) newline"
"people mingle two . people mingle ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ mingle ] = two newline print ( people [ mingle ] ) newline"
"girl be warming . warming be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( warming [ be ] ) newline"
"student be older . older be ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ be ] = student newline print ( older [ be ] ) newline"
"person wear neon . person wear ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ wear ] = neon newline print ( person [ wear ] ) newline"
"men look man . men look ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ look ] = man newline print ( men [ look ] ) newline"
"boy climb while . boy climb ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ climb ] = while newline print ( boy [ climb ] ) newline"
"performance be rock . performance be ?","if entities . find ( performance ) ! = None : newline newtab entities [ performance ] [ be ] = rock newline print ( performance [ be ] ) newline"
"jeans be some . some be ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ be ] = jeans newline print ( some [ be ] ) newline"
"food cart it . food cart ?","if entities . find ( food ) ! = None : newline newtab entities [ food ] [ cart ] = it newline print ( food [ cart ] ) newline"
"men play field . men play ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ play ] = field newline print ( men [ play ] ) newline"
"child play an . child play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = an newline print ( child [ play ] ) newline"
"metal barrel white . white barrel ?","if entities . find ( metal ) ! = None : newline newtab entities [ metal ] [ barrel ] = metal newline print ( white [ barrel ] ) newline"
"palm tree white . white tree ?","if entities . find ( palm ) ! = None : newline newtab entities [ palm ] [ tree ] = palm newline print ( white [ tree ] ) newline"
"man be asleep . asleep be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( asleep [ be ] ) newline"
"neon color polo . neon color ?","if entities . find ( neon ) ! = None : newline newtab entities [ neon ] [ color ] = polo newline print ( neon [ color ] ) newline"
"couple stand new . new stand ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ stand ] = couple newline print ( new [ stand ] ) newline"
"while talk next . next talk ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ talk ] = while newline print ( next [ talk ] ) newline"
"bartender serve food . bartender serve ?","if entities . find ( bartender ) ! = None : newline newtab entities [ bartender ] [ serve ] = food newline print ( bartender [ serve ] ) newline"
"boy lay food . boy lay ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ lay ] = food newline print ( boy [ lay ] ) newline"
"jacket reach arm . jacket reach ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ reach ] = arm newline print ( jacket [ reach ] ) newline"
"red build or . red build ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ build ] = or newline print ( red [ build ] ) newline"
"people enjoy relaxation . people enjoy ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ enjoy ] = relaxation newline print ( people [ enjoy ] ) newline"
"woman be married . married be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( married [ be ] ) newline"
"man walk hand . man walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = hand newline print ( man [ walk ] ) newline"
"people play some . some play ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ play ] = people newline print ( some [ play ] ) newline"
"man be light . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = light newline print ( man [ be ] ) newline"
"fancy dress child . fancy dress ?","if entities . find ( fancy ) ! = None : newline newtab entities [ fancy ] [ dress ] = child newline print ( fancy [ dress ] ) newline"
"person jump some . some jump ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ jump ] = person newline print ( some [ jump ] ) newline"
"woman read an . woman read ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ read ] = an newline print ( woman [ read ] ) newline"
"people be open . open be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( open [ be ] ) newline"
"handyman work hard . hard work ?","if entities . find ( handyman ) ! = None : newline newtab entities [ handyman ] [ work ] = handyman newline print ( hard [ work ] ) newline"
"man perform karate . man perform ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ perform ] = karate newline print ( man [ perform ] ) newline"
"dog walk while . dog walk ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ walk ] = while newline print ( dog [ walk ] ) newline"
"girl wear life . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = life newline print ( girl [ wear ] ) newline"
"kid be laughing . laughing be ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ be ] = kid newline print ( laughing [ be ] ) newline"
"person walk while . person walk ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ walk ] = while newline print ( person [ walk ] ) newline"
"beard eat some . some eat ?","if entities . find ( beard ) ! = None : newline newtab entities [ beard ] [ eat ] = beard newline print ( some [ eat ] ) newline"
"metal fence area . metal fence ?","if entities . find ( metal ) ! = None : newline newtab entities [ metal ] [ fence ] = area newline print ( metal [ fence ] ) newline"
"gray hat ice . gray hat ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ hat ] = ice newline print ( gray [ hat ] ) newline"
"man take out . out take ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ take ] = man newline print ( out [ take ] ) newline"
"third be swinging . swinging be ?","if entities . find ( third ) ! = None : newline newtab entities [ third ] [ be ] = third newline print ( swinging [ be ] ) newline"
"person wear white . white wear ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ wear ] = person newline print ( white [ wear ] ) newline"
"woman be open . open be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( open [ be ] ) newline"
"soap bubble underwater . underwater bubble ?","if entities . find ( soap ) ! = None : newline newtab entities [ soap ] [ bubble ] = soap newline print ( underwater [ bubble ] ) newline"
"girl jump next . next jump ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ jump ] = girl newline print ( next [ jump ] ) newline"
"people be airborne . airborne be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( airborne [ be ] ) newline"
"image use bookstore . image use ?","if entities . find ( image ) ! = None : newline newtab entities [ image ] [ use ] = bookstore newline print ( image [ use ] ) newline"
"man look woman . man look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = woman newline print ( man [ look ] ) newline"
"while hold out . out hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = while newline print ( out [ hold ] ) newline"
"hardware warehouse white . white warehouse ?","if entities . find ( hardware ) ! = None : newline newtab entities [ hardware ] [ warehouse ] = hardware newline print ( white [ warehouse ] ) newline"
"outfit hang rug . outfit hang ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ hang ] = rug newline print ( outfit [ hang ] ) newline"
"mother cook food . mother cook ?","if entities . find ( mother ) ! = None : newline newtab entities [ mother ] [ cook ] = food newline print ( mother [ cook ] ) newline"
"dog leap while . dog leap ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ leap ] = while newline print ( dog [ leap ] ) newline"
"background sit while . background sit ?","if entities . find ( background ) ! = None : newline newtab entities [ background ] [ sit ] = while newline print ( background [ sit ] ) newline"
"people sit man . people sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = man newline print ( people [ sit ] ) newline"
"girl look young . girl look ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ look ] = young newline print ( girl [ look ] ) newline"
"man lie face . man lie ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ lie ] = face newline print ( man [ lie ] ) newline"
"man iron fabric . man iron ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ iron ] = fabric newline print ( man [ iron ] ) newline"
"store call swatch . store call ?","if entities . find ( store ) ! = None : newline newtab entities [ store ] [ call ] = swatch newline print ( store [ call ] ) newline"
"green coat point . green coat ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ coat ] = point newline print ( green [ coat ] ) newline"
"woman be part . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = part newline print ( woman [ be ] ) newline"
"rollerblader perform amazing . amazing perform ?","if entities . find ( rollerblader ) ! = None : newline newtab entities [ rollerblader ] [ perform ] = rollerblader newline print ( amazing [ perform ] ) newline"
"boy be snow . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = snow newline print ( boy [ be ] ) newline"
"rock overlook scenic . scenic overlook ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ overlook ] = rock newline print ( scenic [ overlook ] ) newline"
"pigtail be trophy . pigtail be ?","if entities . find ( pigtail ) ! = None : newline newtab entities [ pigtail ] [ be ] = trophy newline print ( pigtail [ be ] ) newline"
"woman dress little . little dress ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dress ] = woman newline print ( little [ dress ] ) newline"
"green plant next . next plant ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ plant ] = green newline print ( next [ plant ] ) newline"
"firefighter stand next . next stand ?","if entities . find ( firefighter ) ! = None : newline newtab entities [ firefighter ] [ stand ] = firefighter newline print ( next [ stand ] ) newline"
"pole be many . many be ?","if entities . find ( pole ) ! = None : newline newtab entities [ pole ] [ be ] = pole newline print ( many [ be ] ) newline"
"bar set chessboard . bar set ?","if entities . find ( bar ) ! = None : newline newtab entities [ bar ] [ set ] = chessboard newline print ( bar [ set ] ) newline"
"he hold umbrella . he hold ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ hold ] = umbrella newline print ( he [ hold ] ) newline"
"palm tree trunk . palm tree ?","if entities . find ( palm ) ! = None : newline newtab entities [ palm ] [ tree ] = trunk newline print ( palm [ tree ] ) newline"
"people watch another . another watch ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ watch ] = people newline print ( another [ watch ] ) newline"
"woman hold multicolored . multicolored hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = woman newline print ( multicolored [ hold ] ) newline"
"field fight while . field fight ?","if entities . find ( field ) ! = None : newline newtab entities [ field ] [ fight ] = while newline print ( field [ fight ] ) newline"
"child write white . white write ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ write ] = child newline print ( white [ write ] ) newline"
"woman walk don . woman walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = don newline print ( woman [ walk ] ) newline"
"boy lick it . boy lick ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ lick ] = it newline print ( boy [ lick ] ) newline"
"man wear red . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = red newline print ( man [ wear ] ) newline"
"yankee be asleep . asleep be ?","if entities . find ( yankee ) ! = None : newline newtab entities [ yankee ] [ be ] = yankee newline print ( asleep [ be ] ) newline"
"athlete pose next . next pose ?","if entities . find ( athlete ) ! = None : newline newtab entities [ athlete ] [ pose ] = athlete newline print ( next [ pose ] ) newline"
"dog jump next . next jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = dog newline print ( next [ jump ] ) newline"
"man be brake . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = brake newline print ( man [ be ] ) newline"
"bike ride bike . bike ride ?","if entities . find ( bike ) ! = None : newline newtab entities [ bike ] [ ride ] = bike newline print ( bike [ ride ] ) newline"
"ballerina dress while . ballerina dress ?","if entities . find ( ballerina ) ! = None : newline newtab entities [ ballerina ] [ dress ] = while newline print ( ballerina [ dress ] ) newline"
"graffiti cover another . another cover ?","if entities . find ( graffiti ) ! = None : newline newtab entities [ graffiti ] [ cover ] = graffiti newline print ( another [ cover ] ) newline"
"woman wear blue . blue wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( blue [ wear ] ) newline"
"child be swinging . swinging be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( swinging [ be ] ) newline"
"boy be several . several be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( several [ be ] ) newline"
"woman wear silver . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = silver newline print ( woman [ wear ] ) newline"
"man sing live . live sing ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sing ] = man newline print ( live [ sing ] ) newline"
"cock be people . cock be ?","if entities . find ( cock ) ! = None : newline newtab entities [ cock ] [ be ] = people newline print ( cock [ be ] ) newline"
"child play musical . musical play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = child newline print ( musical [ play ] ) newline"
"cheerleader be married . married be ?","if entities . find ( cheerleader ) ! = None : newline newtab entities [ cheerleader ] [ be ] = cheerleader newline print ( married [ be ] ) newline"
"people wear orange . people wear ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ wear ] = orange newline print ( people [ wear ] ) newline"
"man wear black . black wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( black [ wear ] ) newline"
"face be sleeping . face be ?","if entities . find ( face ) ! = None : newline newtab entities [ face ] [ be ] = sleeping newline print ( face [ be ] ) newline"
"people walk out . out walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( out [ walk ] ) newline"
"men look content . men look ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ look ] = content newline print ( men [ look ] ) newline"
"woman be hunched . hunched be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( hunched [ be ] ) newline"
"person trail bike . person trail ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ trail ] = bike newline print ( person [ trail ] ) newline"
"park stand next . next stand ?","if entities . find ( park ) ! = None : newline newtab entities [ park ] [ stand ] = park newline print ( next [ stand ] ) newline"
"child carry black . black carry ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ carry ] = child newline print ( black [ carry ] ) newline"
"table use concrete . concrete use ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ use ] = table newline print ( concrete [ use ] ) newline"
"man hold flower . man hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = flower newline print ( man [ hold ] ) newline"
"camouflage pant or . camouflage pant ?","if entities . find ( camouflage ) ! = None : newline newtab entities [ camouflage ] [ pant ] = or newline print ( camouflage [ pant ] ) newline"
"girl stand next . next stand ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ stand ] = girl newline print ( next [ stand ] ) newline"
"man wait next . next wait ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wait ] = man newline print ( next [ wait ] ) newline"
"men be sleeping . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = sleeping newline print ( men [ be ] ) newline"
"mane pull things . mane pull ?","if entities . find ( mane ) ! = None : newline newtab entities [ mane ] [ pull ] = things newline print ( mane [ pull ] ) newline"
"man be out . out be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( out [ be ] ) newline"
"cloth trade material . cloth trade ?","if entities . find ( cloth ) ! = None : newline newtab entities [ cloth ] [ trade ] = material newline print ( cloth [ trade ] ) newline"
"woman walk dog . woman walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = dog newline print ( woman [ walk ] ) newline"
"child walk path . child walk ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ walk ] = path newline print ( child [ walk ] ) newline"
"player return white . white return ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ return ] = player newline print ( white [ return ] ) newline"
"people be rock . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = rock newline print ( people [ be ] ) newline"
"photographer be older . older be ?","if entities . find ( photographer ) ! = None : newline newtab entities [ photographer ] [ be ] = photographer newline print ( older [ be ] ) newline"
"holder take picture . holder take ?","if entities . find ( holder ) ! = None : newline newtab entities [ holder ] [ take ] = picture newline print ( holder [ take ] ) newline"
"jacket be swinging . swinging be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = jacket newline print ( swinging [ be ] ) newline"
"child swim competitor . child swim ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ swim ] = competitor newline print ( child [ swim ] ) newline"
"player listen or . player listen ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ listen ] = or newline print ( player [ listen ] ) newline"
"porch step stone . porch step ?","if entities . find ( porch ) ! = None : newline newtab entities [ porch ] [ step ] = stone newline print ( porch [ step ] ) newline"
"choir perform some . some perform ?","if entities . find ( choir ) ! = None : newline newtab entities [ choir ] [ perform ] = choir newline print ( some [ perform ] ) newline"
"couch smile next . next smile ?","if entities . find ( couch ) ! = None : newline newtab entities [ couch ] [ smile ] = couch newline print ( next [ smile ] ) newline"
"dog be sad . sad be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( sad [ be ] ) newline"
"worker hang upside . worker hang ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ hang ] = upside newline print ( worker [ hang ] ) newline"
"road be all . all be ?","if entities . find ( road ) ! = None : newline newtab entities [ road ] [ be ] = road newline print ( all [ be ] ) newline"
"spectator look out . out look ?","if entities . find ( spectator ) ! = None : newline newtab entities [ spectator ] [ look ] = spectator newline print ( out [ look ] ) newline"
"girl splash water . girl splash ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ splash ] = water newline print ( girl [ splash ] ) newline"
"kid play mobile . mobile play ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ play ] = kid newline print ( mobile [ play ] ) newline"
"woman sit man . woman sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = man newline print ( woman [ sit ] ) newline"
"man walk three . man walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = three newline print ( man [ walk ] ) newline"
"gray shirt scoop . gray shirt ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ shirt ] = scoop newline print ( gray [ shirt ] ) newline"
"red shirt uniform . uniform shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( uniform [ shirt ] ) newline"
"girl be swinging . swinging be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( swinging [ be ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"person be hula . person be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = hula newline print ( person [ be ] ) newline"
"helmet ride one . one ride ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ ride ] = helmet newline print ( one [ ride ] ) newline"
"an injure bull . an injure ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ injure ] = bull newline print ( an [ injure ] ) newline"
"man stare two . man stare ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stare ] = two newline print ( man [ stare ] ) newline"
"people be two . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = two newline print ( people [ be ] ) newline"
"brick build while . brick build ?","if entities . find ( brick ) ! = None : newline newtab entities [ brick ] [ build ] = while newline print ( brick [ build ] ) newline"
"jersey pass out . out pass ?","if entities . find ( jersey ) ! = None : newline newtab entities [ jersey ] [ pass ] = jersey newline print ( out [ pass ] ) newline"
"jacket buy white . white buy ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ buy ] = jacket newline print ( white [ buy ] ) newline"
"men stand or . men stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = or newline print ( men [ stand ] ) newline"
"jacket take one . one take ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ take ] = jacket newline print ( one [ take ] ) newline"
"woman be hunched . hunched be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( hunched [ be ] ) newline"
"man be upside . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = upside newline print ( man [ be ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"woman be midair . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = midair newline print ( woman [ be ] ) newline"
"dog walk an . dog walk ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ walk ] = an newline print ( dog [ walk ] ) newline"
"girl lie next . next lie ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ lie ] = girl newline print ( next [ lie ] ) newline"
"straw hat while . straw hat ?","if entities . find ( straw ) ! = None : newline newtab entities [ straw ] [ hat ] = while newline print ( straw [ hat ] ) newline"
"personnel learn vocabulary . personnel learn ?","if entities . find ( personnel ) ! = None : newline newtab entities [ personnel ] [ learn ] = vocabulary newline print ( personnel [ learn ] ) newline"
"dog be purple . purple be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( purple [ be ] ) newline"
"wings be laughing . laughing be ?","if entities . find ( wings ) ! = None : newline newtab entities [ wings ] [ be ] = wings newline print ( laughing [ be ] ) newline"
"man play dead . dead play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = man newline print ( dead [ play ] ) newline"
"toddler play another . another play ?","if entities . find ( toddler ) ! = None : newline newtab entities [ toddler ] [ play ] = toddler newline print ( another [ play ] ) newline"
"sleeve be pictured . pictured be ?","if entities . find ( sleeve ) ! = None : newline newtab entities [ sleeve ] [ be ] = sleeve newline print ( pictured [ be ] ) newline"
"lady play some . some play ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ play ] = lady newline print ( some [ play ] ) newline"
"while work man . while work ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ work ] = man newline print ( while [ work ] ) newline"
"toddler wear sock . toddler wear ?","if entities . find ( toddler ) ! = None : newline newtab entities [ toddler ] [ wear ] = sock newline print ( toddler [ wear ] ) newline"
"dog run gear . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = gear newline print ( dog [ run ] ) newline"
"child pose next . next pose ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ pose ] = child newline print ( next [ pose ] ) newline"
"female be elevated . elevated be ?","if entities . find ( female ) ! = None : newline newtab entities [ female ] [ be ] = female newline print ( elevated [ be ] ) newline"
"woman be rock . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = rock newline print ( woman [ be ] ) newline"
"apron be one . one be ?","if entities . find ( apron ) ! = None : newline newtab entities [ apron ] [ be ] = apron newline print ( one [ be ] ) newline"
"boy cut real . real cut ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ cut ] = boy newline print ( real [ cut ] ) newline"
"board advertise white . white advertise ?","if entities . find ( board ) ! = None : newline newtab entities [ board ] [ advertise ] = board newline print ( white [ advertise ] ) newline"
"man read while . man read ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ read ] = while newline print ( man [ read ] ) newline"
"person be asleep . asleep be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = person newline print ( asleep [ be ] ) newline"
"who be staring . staring be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( staring [ be ] ) newline"
"boy sit next . next sit ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ sit ] = boy newline print ( next [ sit ] ) newline"
"pool give another . another give ?","if entities . find ( pool ) ! = None : newline newtab entities [ pool ] [ give ] = pool newline print ( another [ give ] ) newline"
"he read comic . comic read ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ read ] = he newline print ( comic [ read ] ) newline"
"man aim white . white aim ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ aim ] = man newline print ( white [ aim ] ) newline"
"officer knock white . white knock ?","if entities . find ( officer ) ! = None : newline newtab entities [ officer ] [ knock ] = officer newline print ( white [ knock ] ) newline"
"clown be several . several be ?","if entities . find ( clown ) ! = None : newline newtab entities [ clown ] [ be ] = clown newline print ( several [ be ] ) newline"
"baby crawl two . baby crawl ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ crawl ] = two newline print ( baby [ crawl ] ) newline"
"an injure man . an injure ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ injure ] = man newline print ( an [ injure ] ) newline"
"top be an . top be ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ be ] = an newline print ( top [ be ] ) newline"
"umbrella walk hand . umbrella walk ?","if entities . find ( umbrella ) ! = None : newline newtab entities [ umbrella ] [ walk ] = hand newline print ( umbrella [ walk ] ) newline"
"person wipe clean . clean wipe ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ wipe ] = person newline print ( clean [ wipe ] ) newline"
"jacket take picture . jacket take ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ take ] = picture newline print ( jacket [ take ] ) newline"
"meadow look man . meadow look ?","if entities . find ( meadow ) ! = None : newline newtab entities [ meadow ] [ look ] = man newline print ( meadow [ look ] ) newline"
"outfit decide white . white decide ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ decide ] = outfit newline print ( white [ decide ] ) newline"
"vega shirt next . next shirt ?","if entities . find ( vega ) ! = None : newline newtab entities [ vega ] [ shirt ] = vega newline print ( next [ shirt ] ) newline"
"chest be busy . busy be ?","if entities . find ( chest ) ! = None : newline newtab entities [ chest ] [ be ] = chest newline print ( busy [ be ] ) newline"
"blanket cover another . another cover ?","if entities . find ( blanket ) ! = None : newline newtab entities [ blanket ] [ cover ] = blanket newline print ( another [ cover ] ) newline"
"frisbee act out . out act ?","if entities . find ( frisbee ) ! = None : newline newtab entities [ frisbee ] [ act ] = frisbee newline print ( out [ act ] ) newline"
"girl be extreme . extreme be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( extreme [ be ] ) newline"
"lab coat gesture . lab coat ?","if entities . find ( lab ) ! = None : newline newtab entities [ lab ] [ coat ] = gesture newline print ( lab [ coat ] ) newline"
"stomach tattoo man . stomach tattoo ?","if entities . find ( stomach ) ! = None : newline newtab entities [ stomach ] [ tattoo ] = man newline print ( stomach [ tattoo ] ) newline"
"orange shoe while . orange shoe ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ shoe ] = while newline print ( orange [ shoe ] ) newline"
"someone be sleeping . someone be ?","if entities . find ( someone ) ! = None : newline newtab entities [ someone ] [ be ] = sleeping newline print ( someone [ be ] ) newline"
"skydiver fly frisbee . skydiver fly ?","if entities . find ( skydiver ) ! = None : newline newtab entities [ skydiver ] [ fly ] = frisbee newline print ( skydiver [ fly ] ) newline"
"man dress figure . man dress ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ dress ] = figure newline print ( man [ dress ] ) newline"
"man stand while . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = while newline print ( man [ stand ] ) newline"
"tan pant or . tan pant ?","if entities . find ( tan ) ! = None : newline newtab entities [ tan ] [ pant ] = or newline print ( tan [ pant ] ) newline"
"man wear lei . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = lei newline print ( man [ wear ] ) newline"
"snowboarder take great . great take ?","if entities . find ( snowboarder ) ! = None : newline newtab entities [ snowboarder ] [ take ] = snowboarder newline print ( great [ take ] ) newline"
"man cover mountain . man cover ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ cover ] = mountain newline print ( man [ cover ] ) newline"
"child be person . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = person newline print ( child [ be ] ) newline"
"boy stand chest . boy stand ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ stand ] = chest newline print ( boy [ stand ] ) newline"
"people stand next . next stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( next [ stand ] ) newline"
"pole be available . available be ?","if entities . find ( pole ) ! = None : newline newtab entities [ pole ] [ be ] = pole newline print ( available [ be ] ) newline"
"woman be an . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = an newline print ( woman [ be ] ) newline"
"man wear red . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = red newline print ( man [ wear ] ) newline"
"two compete white . white compete ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ compete ] = two newline print ( white [ compete ] ) newline"
"boy jump next . next jump ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ jump ] = boy newline print ( next [ jump ] ) newline"
"worker dress small . small dress ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ dress ] = worker newline print ( small [ dress ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"woman be an . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = an newline print ( woman [ be ] ) newline"
"business attire swinging . swinging attire ?","if entities . find ( business ) ! = None : newline newtab entities [ business ] [ attire ] = business newline print ( swinging [ attire ] ) newline"
"woman serve food . woman serve ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ serve ] = food newline print ( woman [ serve ] ) newline"
"print shirt swinging . swinging shirt ?","if entities . find ( print ) ! = None : newline newtab entities [ print ] [ shirt ] = print newline print ( swinging [ shirt ] ) newline"
"woman paint another . another paint ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ paint ] = woman newline print ( another [ paint ] ) newline"
"dog stand next . next stand ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ stand ] = dog newline print ( next [ stand ] ) newline"
"people be rock . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = rock newline print ( people [ be ] ) newline"
"dog be people . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = people newline print ( dog [ be ] ) newline"
"mountain bike helmet . mountain bike ?","if entities . find ( mountain ) ! = None : newline newtab entities [ mountain ] [ bike ] = helmet newline print ( mountain [ bike ] ) newline"
"couple dance while . couple dance ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ dance ] = while newline print ( couple [ dance ] ) newline"
"people pass child . people pass ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ pass ] = child newline print ( people [ pass ] ) newline"
"dog be staring . staring be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( staring [ be ] ) newline"
"men be next . next be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( next [ be ] ) newline"
"student play table . student play ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ play ] = table newline print ( student [ play ] ) newline"
"men paint an . men paint ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ paint ] = an newline print ( men [ paint ] ) newline"
"construction work an . construction work ?","if entities . find ( construction ) ! = None : newline newtab entities [ construction ] [ work ] = an newline print ( construction [ work ] ) newline"
"man walk out . out walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = man newline print ( out [ walk ] ) newline"
"woman hug one . one hug ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hug ] = woman newline print ( one [ hug ] ) newline"
"dog catch ice . dog catch ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ catch ] = ice newline print ( dog [ catch ] ) newline"
"woman stand next . next stand ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ stand ] = woman newline print ( next [ stand ] ) newline"
"girl have red . girl have ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ have ] = red newline print ( girl [ have ] ) newline"
"cowboy hat opening . cowboy hat ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ hat ] = opening newline print ( cowboy [ hat ] ) newline"
"people photograph while . people photograph ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ photograph ] = while newline print ( people [ photograph ] ) newline"
"civilian be laughing . laughing be ?","if entities . find ( civilian ) ! = None : newline newtab entities [ civilian ] [ be ] = civilian newline print ( laughing [ be ] ) newline"
"table wear sunglasses . table wear ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ wear ] = sunglasses newline print ( table [ wear ] ) newline"
"boy study two . boy study ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ study ] = two newline print ( boy [ study ] ) newline"
"boy rake two . boy rake ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ rake ] = two newline print ( boy [ rake ] ) newline"
"seaweed sit while . seaweed sit ?","if entities . find ( seaweed ) ! = None : newline newtab entities [ seaweed ] [ sit ] = while newline print ( seaweed [ sit ] ) newline"
"boy sit or . boy sit ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ sit ] = or newline print ( boy [ sit ] ) newline"
"jersey pass out . out pass ?","if entities . find ( jersey ) ! = None : newline newtab entities [ jersey ] [ pass ] = jersey newline print ( out [ pass ] ) newline"
"sign reference school . sign reference ?","if entities . find ( sign ) ! = None : newline newtab entities [ sign ] [ reference ] = school newline print ( sign [ reference ] ) newline"
"girl make funny . funny make ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ make ] = girl newline print ( funny [ make ] ) newline"
"dog leap high . high leap ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ leap ] = dog newline print ( high [ leap ] ) newline"
"beard be sleeping . beard be ?","if entities . find ( beard ) ! = None : newline newtab entities [ beard ] [ be ] = sleeping newline print ( beard [ be ] ) newline"
"jacket stand next . next stand ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ stand ] = jacket newline print ( next [ stand ] ) newline"
"woman work glove . woman work ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ work ] = glove newline print ( woman [ work ] ) newline"
"green grass track . green grass ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ grass ] = track newline print ( green [ grass ] ) newline"
"child sit next . next sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = child newline print ( next [ sit ] ) newline"
"kid jump high . high jump ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ jump ] = kid newline print ( high [ jump ] ) newline"
"man be an . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = an newline print ( man [ be ] ) newline"
"carriage drive jeep . carriage drive ?","if entities . find ( carriage ) ! = None : newline newtab entities [ carriage ] [ drive ] = jeep newline print ( carriage [ drive ] ) newline"
"child carry many . many carry ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ carry ] = child newline print ( many [ carry ] ) newline"
"son be white . white be ?","if entities . find ( son ) ! = None : newline newtab entities [ son ] [ be ] = son newline print ( white [ be ] ) newline"
"player be out . out be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = player newline print ( out [ be ] ) newline"
"person be horseback . person be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = horseback newline print ( person [ be ] ) newline"
"player try out . out try ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ try ] = player newline print ( out [ try ] ) newline"
"woman look blond . woman look ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ look ] = blond newline print ( woman [ look ] ) newline"
"daughter stop big . big stop ?","if entities . find ( daughter ) ! = None : newline newtab entities [ daughter ] [ stop ] = daughter newline print ( big [ stop ] ) newline"
"dog run next . next run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( next [ run ] ) newline"
"man wear mickey . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = mickey newline print ( man [ wear ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"couple be rock . couple be ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ be ] = rock newline print ( couple [ be ] ) newline"
"ice pop it . ice pop ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ pop ] = it newline print ( ice [ pop ] ) newline"
"man be red . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = red newline print ( man [ be ] ) newline"
"woman read next . next read ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ read ] = woman newline print ( next [ read ] ) newline"
"boy run track . boy run ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ run ] = track newline print ( boy [ run ] ) newline"
"men work out . out work ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ work ] = men newline print ( out [ work ] ) newline"
"dog play musical . musical play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = dog newline print ( musical [ play ] ) newline"
"group travel white . white travel ?","if entities . find ( group ) ! = None : newline newtab entities [ group ] [ travel ] = group newline print ( white [ travel ] ) newline"
"an unwrap two . an unwrap ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ unwrap ] = two newline print ( an [ unwrap ] ) newline"
"an empty new . new empty ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ empty ] = an newline print ( new [ empty ] ) newline"
"outfit be able . able be ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ be ] = outfit newline print ( able [ be ] ) newline"
"child wear gold . child wear ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wear ] = gold newline print ( child [ wear ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"girl wear an . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = an newline print ( girl [ wear ] ) newline"
"men push many . many push ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ push ] = men newline print ( many [ push ] ) newline"
"people sit next . next sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( next [ sit ] ) newline"
"exercise clothe staring . staring clothe ?","if entities . find ( exercise ) ! = None : newline newtab entities [ exercise ] [ clothe ] = exercise newline print ( staring [ clothe ] ) newline"
"woman wear blue . blue wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( blue [ wear ] ) newline"
"bungee cord two . bungee cord ?","if entities . find ( bungee ) ! = None : newline newtab entities [ bungee ] [ cord ] = two newline print ( bungee [ cord ] ) newline"
"people hold several . several hold ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ hold ] = people newline print ( several [ hold ] ) newline"
"sweater chisel an . sweater chisel ?","if entities . find ( sweater ) ! = None : newline newtab entities [ sweater ] [ chisel ] = an newline print ( sweater [ chisel ] ) newline"
"green surfboard out . out surfboard ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ surfboard ] = green newline print ( out [ surfboard ] ) newline"
"girl be sleeping . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = sleeping newline print ( girl [ be ] ) newline"
"woman carry several . several carry ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ carry ] = woman newline print ( several [ carry ] ) newline"
"skier fly high . high fly ?","if entities . find ( skier ) ! = None : newline newtab entities [ skier ] [ fly ] = skier newline print ( high [ fly ] ) newline"
"while enjoy some . some enjoy ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ enjoy ] = while newline print ( some [ enjoy ] ) newline"
"man swim deep . deep swim ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ swim ] = man newline print ( deep [ swim ] ) newline"
"girl pose next . next pose ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ pose ] = girl newline print ( next [ pose ] ) newline"
"men play guitar . men play ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ play ] = guitar newline print ( men [ play ] ) newline"
"man sit court . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = court newline print ( man [ sit ] ) newline"
"man wear all . all wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( all [ wear ] ) newline"
"stone build next . next build ?","if entities . find ( stone ) ! = None : newline newtab entities [ stone ] [ build ] = stone newline print ( next [ build ] ) newline"
"lady wear apron . lady wear ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ wear ] = apron newline print ( lady [ wear ] ) newline"
"skateboarder be asleep . asleep be ?","if entities . find ( skateboarder ) ! = None : newline newtab entities [ skateboarder ] [ be ] = skateboarder newline print ( asleep [ be ] ) newline"
"woman wear high . high wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( high [ wear ] ) newline"
"woman be sleeping . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sleeping newline print ( woman [ be ] ) newline"
"daughter sit next . next sit ?","if entities . find ( daughter ) ! = None : newline newtab entities [ daughter ] [ sit ] = daughter newline print ( next [ sit ] ) newline"
"man wear jeans . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = jeans newline print ( man [ wear ] ) newline"
"suit speak white . white speak ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ speak ] = suit newline print ( white [ speak ] ) newline"
"bag stand knee . bag stand ?","if entities . find ( bag ) ! = None : newline newtab entities [ bag ] [ stand ] = knee newline print ( bag [ stand ] ) newline"
"plaid shirt half . half shirt ?","if entities . find ( plaid ) ! = None : newline newtab entities [ plaid ] [ shirt ] = plaid newline print ( half [ shirt ] ) newline"
"while converse while . while converse ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ converse ] = while newline print ( while [ converse ] ) newline"
"lady be many . many be ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ be ] = lady newline print ( many [ be ] ) newline"
"boy sit youth . boy sit ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ sit ] = youth newline print ( boy [ sit ] ) newline"
"man read next . next read ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ read ] = man newline print ( next [ read ] ) newline"
"passenger train wheel . passenger train ?","if entities . find ( passenger ) ! = None : newline newtab entities [ passenger ] [ train ] = wheel newline print ( passenger [ train ] ) newline"
"child play mobile . mobile play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = child newline print ( mobile [ play ] ) newline"
"car look out . out look ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ look ] = car newline print ( out [ look ] ) newline"
"child stand man . child stand ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ stand ] = man newline print ( child [ stand ] ) newline"
"arena wear red . arena wear ?","if entities . find ( arena ) ! = None : newline newtab entities [ arena ] [ wear ] = red newline print ( arena [ wear ] ) newline"
"boy lay next . next lay ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ lay ] = boy newline print ( next [ lay ] ) newline"
"man be identical . identical be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( identical [ be ] ) newline"
"woman be people . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = people newline print ( woman [ be ] ) newline"
"boy be white . white be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( white [ be ] ) newline"
"woman talk next . next talk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ talk ] = woman newline print ( next [ talk ] ) newline"
"man be painted . painted be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( painted [ be ] ) newline"
"people be several . several be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( several [ be ] ) newline"
"people be sleeping . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = sleeping newline print ( people [ be ] ) newline"
"man watch some . some watch ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ watch ] = man newline print ( some [ watch ] ) newline"
"boy be many . many be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( many [ be ] ) newline"
"man be opening . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = opening newline print ( man [ be ] ) newline"
"hair back hair . hair back ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ back ] = hair newline print ( hair [ back ] ) newline"
"dog be two . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = two newline print ( dog [ be ] ) newline"
"boy look man . boy look ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ look ] = man newline print ( boy [ look ] ) newline"
"who be out . out be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( out [ be ] ) newline"
"green jump log . green jump ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ jump ] = log newline print ( green [ jump ] ) newline"
"while wear red . while wear ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ wear ] = red newline print ( while [ wear ] ) newline"
"woman be laughing . laughing be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( laughing [ be ] ) newline"
"man wear blue . blue wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( blue [ wear ] ) newline"
"dog jump high . high jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = dog newline print ( high [ jump ] ) newline"
"plaid shirt brown . plaid shirt ?","if entities . find ( plaid ) ! = None : newline newtab entities [ plaid ] [ shirt ] = brown newline print ( plaid [ shirt ] ) newline"
"man be laughing . laughing be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( laughing [ be ] ) newline"
"man wear blue . blue wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( blue [ wear ] ) newline"
"people wear medical . medical wear ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ wear ] = people newline print ( medical [ wear ] ) newline"
"boy walk while . boy walk ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ walk ] = while newline print ( boy [ walk ] ) newline"
"woman help people . woman help ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ help ] = people newline print ( woman [ help ] ) newline"
"racer take note . racer take ?","if entities . find ( racer ) ! = None : newline newtab entities [ racer ] [ take ] = note newline print ( racer [ take ] ) newline"
"softball take some . some take ?","if entities . find ( softball ) ! = None : newline newtab entities [ softball ] [ take ] = softball newline print ( some [ take ] ) newline"
"street have torch . street have ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ have ] = torch newline print ( street [ have ] ) newline"
"boy raise another . another raise ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ raise ] = boy newline print ( another [ raise ] ) newline"
"orange vest next . next vest ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ vest ] = orange newline print ( next [ vest ] ) newline"
"people be two . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = two newline print ( people [ be ] ) newline"
"green shirt ready . ready shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = green newline print ( ready [ shirt ] ) newline"
"umbrella take picture . umbrella take ?","if entities . find ( umbrella ) ! = None : newline newtab entities [ umbrella ] [ take ] = picture newline print ( umbrella [ take ] ) newline"
"puppy run careful . careful run ?","if entities . find ( puppy ) ! = None : newline newtab entities [ puppy ] [ run ] = puppy newline print ( careful [ run ] ) newline"
"people gather next . next gather ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ gather ] = people newline print ( next [ gather ] ) newline"
"dog be sleeping . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = sleeping newline print ( dog [ be ] ) newline"
"people sit alone . alone sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( alone [ sit ] ) newline"
"dog be several . several be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( several [ be ] ) newline"
"men sit next . next sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = men newline print ( next [ sit ] ) newline"
"men sit low . low sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = men newline print ( low [ sit ] ) newline"
"red short vacuum . red short ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ short ] = vacuum newline print ( red [ short ] ) newline"
"top be sleeping . top be ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ be ] = sleeping newline print ( top [ be ] ) newline"
"dog run while . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = while newline print ( dog [ run ] ) newline"
"man look unsure . unsure look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = man newline print ( unsure [ look ] ) newline"
"jeans work site . jeans work ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ work ] = site newline print ( jeans [ work ] ) newline"
"team wear black . black wear ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ wear ] = team newline print ( black [ wear ] ) newline"
"child play long . long play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = child newline print ( long [ play ] ) newline"
"man sit while . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = while newline print ( man [ sit ] ) newline"
"while take care . while take ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ take ] = care newline print ( while [ take ] ) newline"
"top be out . out be ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ be ] = top newline print ( out [ be ] ) newline"
"man sweep some . some sweep ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sweep ] = man newline print ( some [ sweep ] ) newline"
"boy be sleeping . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = sleeping newline print ( boy [ be ] ) newline"
"men look young . men look ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ look ] = young newline print ( men [ look ] ) newline"
"metal sink white . white sink ?","if entities . find ( metal ) ! = None : newline newtab entities [ metal ] [ sink ] = metal newline print ( white [ sink ] ) newline"
"boy be two . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = two newline print ( boy [ be ] ) newline"
"person take flight . person take ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ take ] = flight newline print ( person [ take ] ) newline"
"while play pool . while play ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ play ] = pool newline print ( while [ play ] ) newline"
"child be out . out be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( out [ be ] ) newline"
"surfer ride animal . surfer ride ?","if entities . find ( surfer ) ! = None : newline newtab entities [ surfer ] [ ride ] = animal newline print ( surfer [ ride ] ) newline"
"woman carry bag . woman carry ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ carry ] = bag newline print ( woman [ carry ] ) newline"
"brown be rock . brown be ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ be ] = rock newline print ( brown [ be ] ) newline"
"girl wear jeans . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = jeans newline print ( girl [ wear ] ) newline"
"people sit while . people sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = while newline print ( people [ sit ] ) newline"
"woman be several . several be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( several [ be ] ) newline"
"boy crouch low . low crouch ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ crouch ] = boy newline print ( low [ crouch ] ) newline"
"child wear protective . protective wear ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wear ] = child newline print ( protective [ wear ] ) newline"
"spectator watch another . another watch ?","if entities . find ( spectator ) ! = None : newline newtab entities [ spectator ] [ watch ] = spectator newline print ( another [ watch ] ) newline"
"people be swinging . swinging be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( swinging [ be ] ) newline"
"man squat while . man squat ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ squat ] = while newline print ( man [ squat ] ) newline"
"child be out . out be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( out [ be ] ) newline"
"men work hard . hard work ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ work ] = men newline print ( hard [ work ] ) newline"
"plate make some . some make ?","if entities . find ( plate ) ! = None : newline newtab entities [ plate ] [ make ] = plate newline print ( some [ make ] ) newline"
"dog be sledding . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = sledding newline print ( dog [ be ] ) newline"
"pine tree white . white tree ?","if entities . find ( pine ) ! = None : newline newtab entities [ pine ] [ tree ] = pine newline print ( white [ tree ] ) newline"
"woman relax next . next relax ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ relax ] = woman newline print ( next [ relax ] ) newline"
"people walk out . out walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( out [ walk ] ) newline"
"cat be swinging . swinging be ?","if entities . find ( cat ) ! = None : newline newtab entities [ cat ] [ be ] = cat newline print ( swinging [ be ] ) newline"
"dog look trolley . dog look ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ look ] = trolley newline print ( dog [ look ] ) newline"
"while sit while . while sit ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ sit ] = while newline print ( while [ sit ] ) newline"
"who adopt white . white adopt ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ adopt ] = who newline print ( white [ adopt ] ) newline"
"red pant swinging . swinging pant ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ pant ] = red newline print ( swinging [ pant ] ) newline"
"orange shirt next . next shirt ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ shirt ] = orange newline print ( next [ shirt ] ) newline"
"sunglasses be several . several be ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ be ] = sunglasses newline print ( several [ be ] ) newline"
"boy be swinging . swinging be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( swinging [ be ] ) newline"
"man be swinging . swinging be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( swinging [ be ] ) newline"
"suit be intimate . intimate be ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ be ] = suit newline print ( intimate [ be ] ) newline"
"jacket hold another . another hold ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ hold ] = jacket newline print ( another [ hold ] ) newline"
"woman stand men . woman stand ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ stand ] = men newline print ( woman [ stand ] ) newline"
"man walk while . man walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = while newline print ( man [ walk ] ) newline"
"helmet be raining . raining be ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ be ] = helmet newline print ( raining [ be ] ) newline"
"child play some . some play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = child newline print ( some [ play ] ) newline"
"green grass next . next grass ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ grass ] = green newline print ( next [ grass ] ) newline"
"boy be opening . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = opening newline print ( boy [ be ] ) newline"
"jacket watch people . jacket watch ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ watch ] = people newline print ( jacket [ watch ] ) newline"
"man be staring . staring be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( staring [ be ] ) newline"
"people ride beige . beige ride ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ ride ] = people newline print ( beige [ ride ] ) newline"
"collar splash water . collar splash ?","if entities . find ( collar ) ! = None : newline newtab entities [ collar ] [ splash ] = water newline print ( collar [ splash ] ) newline"
"kid do pastel . pastel do ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ do ] = kid newline print ( pastel [ do ] ) newline"
"woman wear white . white wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( white [ wear ] ) newline"
"baby cry out . out cry ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ cry ] = baby newline print ( out [ cry ] ) newline"
"couple gather next . next gather ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ gather ] = couple newline print ( next [ gather ] ) newline"
"girl wave small . small wave ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wave ] = girl newline print ( small [ wave ] ) newline"
"four stand side . four stand ?","if entities . find ( four ) ! = None : newline newtab entities [ four ] [ stand ] = side newline print ( four [ stand ] ) newline"
"woman walk an . woman walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = an newline print ( woman [ walk ] ) newline"
"child be swinging . swinging be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( swinging [ be ] ) newline"
"prevention vest next . next vest ?","if entities . find ( prevention ) ! = None : newline newtab entities [ prevention ] [ vest ] = prevention newline print ( next [ vest ] ) newline"
"man walk hand . man walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = hand newline print ( man [ walk ] ) newline"
"couple walk guard . couple walk ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ walk ] = guard newline print ( couple [ walk ] ) newline"
"air balloon figure . air balloon ?","if entities . find ( air ) ! = None : newline newtab entities [ air ] [ balloon ] = figure newline print ( air [ balloon ] ) newline"
"men be opening . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = opening newline print ( men [ be ] ) newline"
"child use old . old use ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ use ] = child newline print ( old [ use ] ) newline"
"man wear potato . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = potato newline print ( man [ wear ] ) newline"
"person sit bride . person sit ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ sit ] = bride newline print ( person [ sit ] ) newline"
"student pose next . next pose ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ pose ] = student newline print ( next [ pose ] ) newline"
"people be rock . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = rock newline print ( people [ be ] ) newline"
"man be staring . staring be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( staring [ be ] ) newline"
"woman run next . next run ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ run ] = woman newline print ( next [ run ] ) newline"
"woman hug woman . woman hug ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hug ] = woman newline print ( woman [ hug ] ) newline"
"area play some . some play ?","if entities . find ( area ) ! = None : newline newtab entities [ area ] [ play ] = area newline print ( some [ play ] ) newline"
"grocery be asleep . asleep be ?","if entities . find ( grocery ) ! = None : newline newtab entities [ grocery ] [ be ] = grocery newline print ( asleep [ be ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"worker be bored . bored be ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ be ] = worker newline print ( bored [ be ] ) newline"
"red goggle while . red goggle ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ goggle ] = while newline print ( red [ goggle ] ) newline"
"boy be swinging . swinging be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( swinging [ be ] ) newline"
"someone wear hard . hard wear ?","if entities . find ( someone ) ! = None : newline newtab entities [ someone ] [ wear ] = someone newline print ( hard [ wear ] ) newline"
"man try two . man try ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ try ] = two newline print ( man [ try ] ) newline"
"mom sit next . next sit ?","if entities . find ( mom ) ! = None : newline newtab entities [ mom ] [ sit ] = mom newline print ( next [ sit ] ) newline"
"people be one . one be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( one [ be ] ) newline"
"snowboarder do some . some do ?","if entities . find ( snowboarder ) ! = None : newline newtab entities [ snowboarder ] [ do ] = snowboarder newline print ( some [ do ] ) newline"
"player swing white . white swing ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ swing ] = player newline print ( white [ swing ] ) newline"
"man surf two . man surf ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ surf ] = two newline print ( man [ surf ] ) newline"
"boy be next . next be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( next [ be ] ) newline"
"player drive blue . blue drive ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ drive ] = player newline print ( blue [ drive ] ) newline"
"street be laughing . laughing be ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ be ] = street newline print ( laughing [ be ] ) newline"
"or train white . white train ?","if entities . find ( or ) ! = None : newline newtab entities [ or ] [ train ] = or newline print ( white [ train ] ) newline"
"he will lead . he will ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ will ] = lead newline print ( he [ will ] ) newline"
"room talk next . next talk ?","if entities . find ( room ) ! = None : newline newtab entities [ room ] [ talk ] = room newline print ( next [ talk ] ) newline"
"two rake white . white rake ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ rake ] = two newline print ( white [ rake ] ) newline"
"jungle look pensive . pensive look ?","if entities . find ( jungle ) ! = None : newline newtab entities [ jungle ] [ look ] = jungle newline print ( pensive [ look ] ) newline"
"boy skate white . white skate ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ skate ] = boy newline print ( white [ skate ] ) newline"
"child play mobile . mobile play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = child newline print ( mobile [ play ] ) newline"
"red hat next . next hat ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ hat ] = red newline print ( next [ hat ] ) newline"
"red shirt ready . ready shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( ready [ shirt ] ) newline"
"couple prepare some . some prepare ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ prepare ] = couple newline print ( some [ prepare ] ) newline"
"boy stand side . boy stand ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ stand ] = side newline print ( boy [ stand ] ) newline"
"hair wear blue . blue wear ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ wear ] = hair newline print ( blue [ wear ] ) newline"
"woman be ballet . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = ballet newline print ( woman [ be ] ) newline"
"safety vest next . next vest ?","if entities . find ( safety ) ! = None : newline newtab entities [ safety ] [ vest ] = safety newline print ( next [ vest ] ) newline"
"music concert white . white concert ?","if entities . find ( music ) ! = None : newline newtab entities [ music ] [ concert ] = music newline print ( white [ concert ] ) newline"
"woman be teaching . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = teaching newline print ( woman [ be ] ) newline"
"people sit while . people sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = while newline print ( people [ sit ] ) newline"
"man record white . white record ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ record ] = man newline print ( white [ record ] ) newline"
"baby take out . out take ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ take ] = baby newline print ( out [ take ] ) newline"
"student pose while . student pose ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ pose ] = while newline print ( student [ pose ] ) newline"
"boy decide two . boy decide ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ decide ] = two newline print ( boy [ decide ] ) newline"
"army fatigue white . white fatigue ?","if entities . find ( army ) ! = None : newline newtab entities [ army ] [ fatigue ] = army newline print ( white [ fatigue ] ) newline"
"people carry handmade . handmade carry ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ carry ] = people newline print ( handmade [ carry ] ) newline"
"people be staring . staring be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( staring [ be ] ) newline"
"couple be all . all be ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ be ] = couple newline print ( all [ be ] ) newline"
"man reach arm . man reach ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ reach ] = arm newline print ( man [ reach ] ) newline"
"worker be full . full be ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ be ] = worker newline print ( full [ be ] ) newline"
"red shirt vacuum . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = vacuum newline print ( red [ shirt ] ) newline"
"jacket be ironing . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = ironing newline print ( jacket [ be ] ) newline"
"man climb gear . man climb ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ climb ] = gear newline print ( man [ climb ] ) newline"
"boy walk hand . boy walk ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ walk ] = hand newline print ( boy [ walk ] ) newline"
"town square full . full square ?","if entities . find ( town ) ! = None : newline newtab entities [ town ] [ square ] = town newline print ( full [ square ] ) newline"
"red shirt opponent . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = opponent newline print ( red [ shirt ] ) newline"
"woman wear jersey . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = jersey newline print ( woman [ wear ] ) newline"
"water be full . full be ?","if entities . find ( water ) ! = None : newline newtab entities [ water ] [ be ] = water newline print ( full [ be ] ) newline"
"dog leap stance . dog leap ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ leap ] = stance newline print ( dog [ leap ] ) newline"
"woman be swinging . swinging be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( swinging [ be ] ) newline"
"child get air . child get ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ get ] = air newline print ( child [ get ] ) newline"
"woman wear blue . blue wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( blue [ wear ] ) newline"
"men be sleeping . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = sleeping newline print ( men [ be ] ) newline"
"man wear false . false wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( false [ wear ] ) newline"
"people cross an . people cross ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ cross ] = an newline print ( people [ cross ] ) newline"
"woman play tennis . woman play ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ play ] = tennis newline print ( woman [ play ] ) newline"
"people look cup . people look ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ look ] = cup newline print ( people [ look ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"musician be unhappy . unhappy be ?","if entities . find ( musician ) ! = None : newline newtab entities [ musician ] [ be ] = musician newline print ( unhappy [ be ] ) newline"
"people be laughing . laughing be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( laughing [ be ] ) newline"
"man be three . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = three newline print ( man [ be ] ) newline"
"child be several . several be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( several [ be ] ) newline"
"people walk people . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( people [ walk ] ) newline"
"class be many . many be ?","if entities . find ( class ) ! = None : newline newtab entities [ class ] [ be ] = class newline print ( many [ be ] ) newline"
"dog swim trunks . dog swim ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ swim ] = trunks newline print ( dog [ swim ] ) newline"
"sunglasses accompany white . white accompany ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ accompany ] = sunglasses newline print ( white [ accompany ] ) newline"
"outfit jump brown . outfit jump ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ jump ] = brown newline print ( outfit [ jump ] ) newline"
"gear stand next . next stand ?","if entities . find ( gear ) ! = None : newline newtab entities [ gear ] [ stand ] = gear newline print ( next [ stand ] ) newline"
"dog be two . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = two newline print ( dog [ be ] ) newline"
"red hat who . red hat ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ hat ] = who newline print ( red [ hat ] ) newline"
"man hold white . white hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = man newline print ( white [ hold ] ) newline"
"child stand next . next stand ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ stand ] = child newline print ( next [ stand ] ) newline"
"top eat an . top eat ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ eat ] = an newline print ( top [ eat ] ) newline"
"team be people . team be ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ be ] = people newline print ( team [ be ] ) newline"
"street cover another . another cover ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ cover ] = street newline print ( another [ cover ] ) newline"
"cowboy attire swinging . swinging attire ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ attire ] = cowboy newline print ( swinging [ attire ] ) newline"
"man be prominent . prominent be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( prominent [ be ] ) newline"
"woman sweep brown . woman sweep ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sweep ] = brown newline print ( woman [ sweep ] ) newline"
"boy do trick . boy do ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ do ] = trick newline print ( boy [ do ] ) newline"
"dog be nude . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = nude newline print ( dog [ be ] ) newline"
"sandal walk four . sandal walk ?","if entities . find ( sandal ) ! = None : newline newtab entities [ sandal ] [ walk ] = four newline print ( sandal [ walk ] ) newline"
"dog bound while . dog bound ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ bound ] = while newline print ( dog [ bound ] ) newline"
"woman hold bagpipe . woman hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = bagpipe newline print ( woman [ hold ] ) newline"
"bikini pose while . bikini pose ?","if entities . find ( bikini ) ! = None : newline newtab entities [ bikini ] [ pose ] = while newline print ( bikini [ pose ] ) newline"
"karate uniform one . one uniform ?","if entities . find ( karate ) ! = None : newline newtab entities [ karate ] [ uniform ] = karate newline print ( one [ uniform ] ) newline"
"car wear sunglasses . car wear ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ wear ] = sunglasses newline print ( car [ wear ] ) newline"
"dog show different . different show ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ show ] = dog newline print ( different [ show ] ) newline"
"artist spar white . white spar ?","if entities . find ( artist ) ! = None : newline newtab entities [ artist ] [ spar ] = artist newline print ( white [ spar ] ) newline"
"friend get ready . ready get ?","if entities . find ( friend ) ! = None : newline newtab entities [ friend ] [ get ] = friend newline print ( ready [ get ] ) newline"
"people be rock . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = rock newline print ( people [ be ] ) newline"
"boy skateboard next . next skateboard ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ skateboard ] = boy newline print ( next [ skateboard ] ) newline"
"worker carry staff . worker carry ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ carry ] = staff newline print ( worker [ carry ] ) newline"
"two be several . several be ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ be ] = two newline print ( several [ be ] ) newline"
"boat get picture . boat get ?","if entities . find ( boat ) ! = None : newline newtab entities [ boat ] [ get ] = picture newline print ( boat [ get ] ) newline"
"gray shirt clean . clean shirt ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ shirt ] = gray newline print ( clean [ shirt ] ) newline"
"outfit be three . outfit be ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ be ] = three newline print ( outfit [ be ] ) newline"
"player attempt white . white attempt ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ attempt ] = player newline print ( white [ attempt ] ) newline"
"man adjust blue . blue adjust ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ adjust ] = man newline print ( blue [ adjust ] ) newline"
"stone build next . next build ?","if entities . find ( stone ) ! = None : newline newtab entities [ stone ] [ build ] = stone newline print ( next [ build ] ) newline"
"woman wear gray . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = gray newline print ( woman [ wear ] ) newline"
"people stand next . next stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( next [ stand ] ) newline"
"men be an . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = an newline print ( men [ be ] ) newline"
"kitchen hold an . kitchen hold ?","if entities . find ( kitchen ) ! = None : newline newtab entities [ kitchen ] [ hold ] = an newline print ( kitchen [ hold ] ) newline"
"guy walk next . next walk ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ walk ] = guy newline print ( next [ walk ] ) newline"
"red shirt swinging . swinging shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( swinging [ shirt ] ) newline"
"ice cream out . out cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = ice newline print ( out [ cream ] ) newline"
"cheerleader be three . cheerleader be ?","if entities . find ( cheerleader ) ! = None : newline newtab entities [ cheerleader ] [ be ] = three newline print ( cheerleader [ be ] ) newline"
"people be laughing . laughing be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( laughing [ be ] ) newline"
"men be underway . underway be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( underway [ be ] ) newline"
"bus stop bus . bus stop ?","if entities . find ( bus ) ! = None : newline newtab entities [ bus ] [ stop ] = bus newline print ( bus [ stop ] ) newline"
"red dress all . all dress ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ dress ] = red newline print ( all [ dress ] ) newline"
"woman be an . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = an newline print ( woman [ be ] ) newline"
"people be ready . ready be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( ready [ be ] ) newline"
"dirt trail bike . dirt trail ?","if entities . find ( dirt ) ! = None : newline newtab entities [ dirt ] [ trail ] = bike newline print ( dirt [ trail ] ) newline"
"boy be sleeping . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = sleeping newline print ( boy [ be ] ) newline"
"player dress all . all dress ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ dress ] = player newline print ( all [ dress ] ) newline"
"child attempt white . white attempt ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ attempt ] = child newline print ( white [ attempt ] ) newline"
"child jump out . out jump ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ jump ] = child newline print ( out [ jump ] ) newline"
"men stand or . men stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = or newline print ( men [ stand ] ) newline"
"hiker walk while . hiker walk ?","if entities . find ( hiker ) ! = None : newline newtab entities [ hiker ] [ walk ] = while newline print ( hiker [ walk ] ) newline"
"man wear bright . bright wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( bright [ wear ] ) newline"
"child sit side . child sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = side newline print ( child [ sit ] ) newline"
"skate be several . several be ?","if entities . find ( skate ) ! = None : newline newtab entities [ skate ] [ be ] = skate newline print ( several [ be ] ) newline"
"boy jump backward . backward jump ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ jump ] = boy newline print ( backward [ jump ] ) newline"
"child play baseball . child play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = baseball newline print ( child [ play ] ) newline"
"truck park space . truck park ?","if entities . find ( truck ) ! = None : newline newtab entities [ truck ] [ park ] = space newline print ( truck [ park ] ) newline"
"player be multicolored . multicolored be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = player newline print ( multicolored [ be ] ) newline"
"figure stand man . figure stand ?","if entities . find ( figure ) ! = None : newline newtab entities [ figure ] [ stand ] = man newline print ( figure [ stand ] ) newline"
"people be opening . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = opening newline print ( people [ be ] ) newline"
"people wear tight . tight wear ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ wear ] = people newline print ( tight [ wear ] ) newline"
"jacket have some . some have ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ have ] = jacket newline print ( some [ have ] ) newline"
"green dress elderly . elderly dress ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ dress ] = green newline print ( elderly [ dress ] ) newline"
"miner work men . miner work ?","if entities . find ( miner ) ! = None : newline newtab entities [ miner ] [ work ] = men newline print ( miner [ work ] ) newline"
"spark fly frisbee . spark fly ?","if entities . find ( spark ) ! = None : newline newtab entities [ spark ] [ fly ] = frisbee newline print ( spark [ fly ] ) newline"
"while stand men . while stand ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ stand ] = men newline print ( while [ stand ] ) newline"
"people enjoy athletic . athletic enjoy ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ enjoy ] = people newline print ( athletic [ enjoy ] ) newline"
"baby be midair . baby be ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ be ] = midair newline print ( baby [ be ] ) newline"
"red shirt finish . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = finish newline print ( red [ shirt ] ) newline"
"people stand face . people stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = face newline print ( people [ stand ] ) newline"
"flower surround scenery . flower surround ?","if entities . find ( flower ) ! = None : newline newtab entities [ flower ] [ surround ] = scenery newline print ( flower [ surround ] ) newline"
"artist work area . artist work ?","if entities . find ( artist ) ! = None : newline newtab entities [ artist ] [ work ] = area newline print ( artist [ work ] ) newline"
"woman wear jacket . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = jacket newline print ( woman [ wear ] ) newline"
"man jump while . man jump ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ jump ] = while newline print ( man [ jump ] ) newline"
"team be staged . staged be ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ be ] = team newline print ( staged [ be ] ) newline"
"horse draw character . horse draw ?","if entities . find ( horse ) ! = None : newline newtab entities [ horse ] [ draw ] = character newline print ( horse [ draw ] ) newline"
"horse walk an . horse walk ?","if entities . find ( horse ) ! = None : newline newtab entities [ horse ] [ walk ] = an newline print ( horse [ walk ] ) newline"
"chalk draw colorful . colorful draw ?","if entities . find ( chalk ) ! = None : newline newtab entities [ chalk ] [ draw ] = chalk newline print ( colorful [ draw ] ) newline"
"man be airborne . airborne be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( airborne [ be ] ) newline"
"lady sit while . lady sit ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ sit ] = while newline print ( lady [ sit ] ) newline"
"man run race . man run ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ run ] = race newline print ( man [ run ] ) newline"
"father read out . out read ?","if entities . find ( father ) ! = None : newline newtab entities [ father ] [ read ] = father newline print ( out [ read ] ) newline"
"woman wear red . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = red newline print ( woman [ wear ] ) newline"
"red bicycle wheel . red bicycle ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ bicycle ] = wheel newline print ( red [ bicycle ] ) newline"
"child hide white . white hide ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ hide ] = child newline print ( white [ hide ] ) newline"
"tee be several . several be ?","if entities . find ( tee ) ! = None : newline newtab entities [ tee ] [ be ] = tee newline print ( several [ be ] ) newline"
"men sit next . next sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = men newline print ( next [ sit ] ) newline"
"exercise involve object . exercise involve ?","if entities . find ( exercise ) ! = None : newline newtab entities [ exercise ] [ involve ] = object newline print ( exercise [ involve ] ) newline"
"woman sit side . woman sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = side newline print ( woman [ sit ] ) newline"
"musician hold black . black hold ?","if entities . find ( musician ) ! = None : newline newtab entities [ musician ] [ hold ] = musician newline print ( black [ hold ] ) newline"
"dog jump high . high jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = dog newline print ( high [ jump ] ) newline"
"men be asleep . asleep be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( asleep [ be ] ) newline"
"air attach white . white attach ?","if entities . find ( air ) ! = None : newline newtab entities [ air ] [ attach ] = air newline print ( white [ attach ] ) newline"
"two motorcycle owned . owned motorcycle ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ motorcycle ] = two newline print ( owned [ motorcycle ] ) newline"
"people overlook garden . people overlook ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ overlook ] = garden newline print ( people [ overlook ] ) newline"
"surfer ride camel . surfer ride ?","if entities . find ( surfer ) ! = None : newline newtab entities [ surfer ] [ ride ] = camel newline print ( surfer [ ride ] ) newline"
"lady walk while . lady walk ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ walk ] = while newline print ( lady [ walk ] ) newline"
"dog be girl . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = girl newline print ( dog [ be ] ) newline"
"girl wear orange . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = orange newline print ( girl [ wear ] ) newline"
"document use blacksmith . document use ?","if entities . find ( document ) ! = None : newline newtab entities [ document ] [ use ] = blacksmith newline print ( document [ use ] ) newline"
"man sweep out . out sweep ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sweep ] = man newline print ( out [ sweep ] ) newline"
"people work out . out work ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ work ] = people newline print ( out [ work ] ) newline"
"woman sit man . woman sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = man newline print ( woman [ sit ] ) newline"
"sombrero ride mower . sombrero ride ?","if entities . find ( sombrero ) ! = None : newline newtab entities [ sombrero ] [ ride ] = mower newline print ( sombrero [ ride ] ) newline"
"woman be asleep . asleep be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( asleep [ be ] ) newline"
"corgi run fast . fast run ?","if entities . find ( corgi ) ! = None : newline newtab entities [ corgi ] [ run ] = corgi newline print ( fast [ run ] ) newline"
"woman be next . next be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( next [ be ] ) newline"
"person walk or . person walk ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ walk ] = or newline print ( person [ walk ] ) newline"
"man drink out . out drink ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ drink ] = man newline print ( out [ drink ] ) newline"
"good shop mart . good shop ?","if entities . find ( good ) ! = None : newline newtab entities [ good ] [ shop ] = mart newline print ( good [ shop ] ) newline"
"man fly overhead . man fly ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ fly ] = overhead newline print ( man [ fly ] ) newline"
"red shirt use . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = use newline print ( red [ shirt ] ) newline"
"baby swing white . white swing ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ swing ] = baby newline print ( white [ swing ] ) newline"
"who be prominent . prominent be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( prominent [ be ] ) newline"
"woman hold several . several hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = woman newline print ( several [ hold ] ) newline"
"he play badminton . he play ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ play ] = badminton newline print ( he [ play ] ) newline"
"woman carry open . open carry ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ carry ] = woman newline print ( open [ carry ] ) newline"
"dock surround one . one surround ?","if entities . find ( dock ) ! = None : newline newtab entities [ dock ] [ surround ] = dock newline print ( one [ surround ] ) newline"
"he concentrate while . he concentrate ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ concentrate ] = while newline print ( he [ concentrate ] ) newline"
"summer concert white . white concert ?","if entities . find ( summer ) ! = None : newline newtab entities [ summer ] [ concert ] = summer newline print ( white [ concert ] ) newline"
"hair play an . hair play ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ play ] = an newline print ( hair [ play ] ) newline"
"woman be staring . staring be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( staring [ be ] ) newline"
"men dress out . out dress ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ dress ] = men newline print ( out [ dress ] ) newline"
"person be sleeping . person be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = sleeping newline print ( person [ be ] ) newline"
"corgi run next . next run ?","if entities . find ( corgi ) ! = None : newline newtab entities [ corgi ] [ run ] = corgi newline print ( next [ run ] ) newline"
"drummer play musical . musical play ?","if entities . find ( drummer ) ! = None : newline newtab entities [ drummer ] [ play ] = drummer newline print ( musical [ play ] ) newline"
"woman be parasailing . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = parasailing newline print ( woman [ be ] ) newline"
"couple return white . white return ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ return ] = couple newline print ( white [ return ] ) newline"
"lady sit next . next sit ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ sit ] = lady newline print ( next [ sit ] ) newline"
"man stand while . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = while newline print ( man [ stand ] ) newline"
"bird soar two . bird soar ?","if entities . find ( bird ) ! = None : newline newtab entities [ bird ] [ soar ] = two newline print ( bird [ soar ] ) newline"
"logo shirt uniform . uniform shirt ?","if entities . find ( logo ) ! = None : newline newtab entities [ logo ] [ shirt ] = logo newline print ( uniform [ shirt ] ) newline"
"girl be red . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = red newline print ( girl [ be ] ) newline"
"girl hold umbrella . girl hold ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ hold ] = umbrella newline print ( girl [ hold ] ) newline"
"student pose next . next pose ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ pose ] = student newline print ( next [ pose ] ) newline"
"rock overlook mountain . rock overlook ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ overlook ] = mountain newline print ( rock [ overlook ] ) newline"
"two thumb two . two thumb ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ thumb ] = two newline print ( two [ thumb ] ) newline"
"woman set out . out set ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ set ] = woman newline print ( out [ set ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"people stand next . next stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( next [ stand ] ) newline"
"couple read comic . comic read ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ read ] = couple newline print ( comic [ read ] ) newline"
"woman walk two . woman walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = two newline print ( woman [ walk ] ) newline"
"woman be ready . ready be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( ready [ be ] ) newline"
"music set sun . music set ?","if entities . find ( music ) ! = None : newline newtab entities [ music ] [ set ] = sun newline print ( music [ set ] ) newline"
"man be two . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = two newline print ( man [ be ] ) newline"
"woman wear orange . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = orange newline print ( woman [ wear ] ) newline"
"worker saw some . some saw ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ saw ] = worker newline print ( some [ saw ] ) newline"
"people stand next . next stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( next [ stand ] ) newline"
"people be two . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = two newline print ( people [ be ] ) newline"
"chair smile little . little smile ?","if entities . find ( chair ) ! = None : newline newtab entities [ chair ] [ smile ] = chair newline print ( little [ smile ] ) newline"
"snow cover another . another cover ?","if entities . find ( snow ) ! = None : newline newtab entities [ snow ] [ cover ] = snow newline print ( another [ cover ] ) newline"
"collar bark white . white bark ?","if entities . find ( collar ) ! = None : newline newtab entities [ collar ] [ bark ] = collar newline print ( white [ bark ] ) newline"
"red balloon animal . animal balloon ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ balloon ] = red newline print ( animal [ balloon ] ) newline"
"men pick flower . men pick ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ pick ] = flower newline print ( men [ pick ] ) newline"
"people be four . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = four newline print ( people [ be ] ) newline"
"outfit stop sign . outfit stop ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ stop ] = sign newline print ( outfit [ stop ] ) newline"
"he pull an . he pull ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ pull ] = an newline print ( he [ pull ] ) newline"
"people head toddler . people head ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ head ] = toddler newline print ( people [ head ] ) newline"
"red box another . another box ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ box ] = red newline print ( another [ box ] ) newline"
"woman look out . out look ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ look ] = woman newline print ( out [ look ] ) newline"
"men be ready . ready be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( ready [ be ] ) newline"
"lady be lovely . lovely be ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ be ] = lady newline print ( lovely [ be ] ) newline"
"people look unhappy . unhappy look ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ look ] = people newline print ( unhappy [ look ] ) newline"
"man walk next . next walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = man newline print ( next [ walk ] ) newline"
"texas hold an . texas hold ?","if entities . find ( texas ) ! = None : newline newtab entities [ texas ] [ hold ] = an newline print ( texas [ hold ] ) newline"
"men wear white . white wear ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ wear ] = men newline print ( white [ wear ] ) newline"
"audience sit next . next sit ?","if entities . find ( audience ) ! = None : newline newtab entities [ audience ] [ sit ] = audience newline print ( next [ sit ] ) newline"
"men practice trick . men practice ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ practice ] = trick newline print ( men [ practice ] ) newline"
"man play pool . man play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = pool newline print ( man [ play ] ) newline"
"woman stand chest . woman stand ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ stand ] = chest newline print ( woman [ stand ] ) newline"
"while stand next . next stand ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ stand ] = while newline print ( next [ stand ] ) newline"
"couple walk out . out walk ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ walk ] = couple newline print ( out [ walk ] ) newline"
"arts move while . arts move ?","if entities . find ( arts ) ! = None : newline newtab entities [ arts ] [ move ] = while newline print ( arts [ move ] ) newline"
"kid be two . kid be ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ be ] = two newline print ( kid [ be ] ) newline"
"dog be asleep . asleep be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( asleep [ be ] ) newline"
"people raft gear . people raft ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ raft ] = gear newline print ( people [ raft ] ) newline"
"people be sleeping . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = sleeping newline print ( people [ be ] ) newline"
"woman sit while . woman sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = while newline print ( woman [ sit ] ) newline"
"brick build sand . brick build ?","if entities . find ( brick ) ! = None : newline newtab entities [ brick ] [ build ] = sand newline print ( brick [ build ] ) newline"
"dancer be shielding . dancer be ?","if entities . find ( dancer ) ! = None : newline newtab entities [ dancer ] [ be ] = shielding newline print ( dancer [ be ] ) newline"
"woman participate white . white participate ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ participate ] = woman newline print ( white [ participate ] ) newline"
"jacket be all . all be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = jacket newline print ( all [ be ] ) newline"
"people be blindfolded . blindfolded be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( blindfolded [ be ] ) newline"
"daughter be five . daughter be ?","if entities . find ( daughter ) ! = None : newline newtab entities [ daughter ] [ be ] = five newline print ( daughter [ be ] ) newline"
"man be staged . staged be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( staged [ be ] ) newline"
"girl talk next . next talk ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ talk ] = girl newline print ( next [ talk ] ) newline"
"man paint horse . man paint ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ paint ] = horse newline print ( man [ paint ] ) newline"
"dog run full . full run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( full [ run ] ) newline"
"woman sit while . woman sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = while newline print ( woman [ sit ] ) newline"
"man be swinging . swinging be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( swinging [ be ] ) newline"
"dog jump high . high jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = dog newline print ( high [ jump ] ) newline"
"jazz cover mountain . jazz cover ?","if entities . find ( jazz ) ! = None : newline newtab entities [ jazz ] [ cover ] = mountain newline print ( jazz [ cover ] ) newline"
"people paddle out . out paddle ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ paddle ] = people newline print ( out [ paddle ] ) newline"
"spectator be full . full be ?","if entities . find ( spectator ) ! = None : newline newtab entities [ spectator ] [ be ] = spectator newline print ( full [ be ] ) newline"
"dancer dress all . all dress ?","if entities . find ( dancer ) ! = None : newline newtab entities [ dancer ] [ dress ] = dancer newline print ( all [ dress ] ) newline"
"lady gather straw . lady gather ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ gather ] = straw newline print ( lady [ gather ] ) newline"
"woman wait while . woman wait ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wait ] = while newline print ( woman [ wait ] ) newline"
"man be brake . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = brake newline print ( man [ be ] ) newline"
"direction include pineapple . direction include ?","if entities . find ( direction ) ! = None : newline newtab entities [ direction ] [ include ] = pineapple newline print ( direction [ include ] ) newline"
"polo stick it . polo stick ?","if entities . find ( polo ) ! = None : newline newtab entities [ polo ] [ stick ] = it newline print ( polo [ stick ] ) newline"
"church play an . church play ?","if entities . find ( church ) ! = None : newline newtab entities [ church ] [ play ] = an newline print ( church [ play ] ) newline"
"people be sleeping . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = sleeping newline print ( people [ be ] ) newline"
"boy climb an . boy climb ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ climb ] = an newline print ( boy [ climb ] ) newline"
"people stand guard . people stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = guard newline print ( people [ stand ] ) newline"
"kid have an . kid have ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ have ] = an newline print ( kid [ have ] ) newline"
"coffee walk out . out walk ?","if entities . find ( coffee ) ! = None : newline newtab entities [ coffee ] [ walk ] = coffee newline print ( out [ walk ] ) newline"
"jacket do construction . jacket do ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ do ] = construction newline print ( jacket [ do ] ) newline"
"people lounge next . next lounge ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ lounge ] = people newline print ( next [ lounge ] ) newline"
"man repair bronze . bronze repair ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ repair ] = man newline print ( bronze [ repair ] ) newline"
"man wear black . black wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( black [ wear ] ) newline"
"sword stand or . sword stand ?","if entities . find ( sword ) ! = None : newline newtab entities [ sword ] [ stand ] = or newline print ( sword [ stand ] ) newline"
"band be sleeping . band be ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ be ] = sleeping newline print ( band [ be ] ) newline"
"jersey be an . jersey be ?","if entities . find ( jersey ) ! = None : newline newtab entities [ jersey ] [ be ] = an newline print ( jersey [ be ] ) newline"
"woman be many . many be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( many [ be ] ) newline"
"people stand next . next stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( next [ stand ] ) newline"
"man wear life . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = life newline print ( man [ wear ] ) newline"
"woman dress bow . woman dress ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dress ] = bow newline print ( woman [ dress ] ) newline"
"people be multicolored . multicolored be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( multicolored [ be ] ) newline"
"gentleman play instrument . gentleman play ?","if entities . find ( gentleman ) ! = None : newline newtab entities [ gentleman ] [ play ] = instrument newline print ( gentleman [ play ] ) newline"
"woman check out . out check ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ check ] = woman newline print ( out [ check ] ) newline"
"ladder prop two . ladder prop ?","if entities . find ( ladder ) ! = None : newline newtab entities [ ladder ] [ prop ] = two newline print ( ladder [ prop ] ) newline"
"snowsuit play musical . musical play ?","if entities . find ( snowsuit ) ! = None : newline newtab entities [ snowsuit ] [ play ] = snowsuit newline print ( musical [ play ] ) newline"
"tattoo hold out . out hold ?","if entities . find ( tattoo ) ! = None : newline newtab entities [ tattoo ] [ hold ] = tattoo newline print ( out [ hold ] ) newline"
"park relax next . next relax ?","if entities . find ( park ) ! = None : newline newtab entities [ park ] [ relax ] = park newline print ( next [ relax ] ) newline"
"hiker walk alone . alone walk ?","if entities . find ( hiker ) ! = None : newline newtab entities [ hiker ] [ walk ] = hiker newline print ( alone [ walk ] ) newline"
"ice cream house . ice cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = house newline print ( ice [ cream ] ) newline"
"people stand knee . people stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = knee newline print ( people [ stand ] ) newline"
"people walk next . next walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( next [ walk ] ) newline"
"someone be sleeping . someone be ?","if entities . find ( someone ) ! = None : newline newtab entities [ someone ] [ be ] = sleeping newline print ( someone [ be ] ) newline"
"jean short vacuum . jean short ?","if entities . find ( jean ) ! = None : newline newtab entities [ jean ] [ short ] = vacuum newline print ( jean [ short ] ) newline"
"dog wear sunglasses . dog wear ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ wear ] = sunglasses newline print ( dog [ wear ] ) newline"
"boy crawl white . white crawl ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ crawl ] = boy newline print ( white [ crawl ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"man wear yellow . yellow wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( yellow [ wear ] ) newline"
"woman be upside . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = upside newline print ( woman [ be ] ) newline"
"street cover another . another cover ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ cover ] = street newline print ( another [ cover ] ) newline"
"girl sit next . next sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = girl newline print ( next [ sit ] ) newline"
"top eat blue . blue eat ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ eat ] = top newline print ( blue [ eat ] ) newline"
"girl play instrument . girl play ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ play ] = instrument newline print ( girl [ play ] ) newline"
"trunks dive board . trunks dive ?","if entities . find ( trunks ) ! = None : newline newtab entities [ trunks ] [ dive ] = board newline print ( trunks [ dive ] ) newline"
"gymnast be waist . gymnast be ?","if entities . find ( gymnast ) ! = None : newline newtab entities [ gymnast ] [ be ] = waist newline print ( gymnast [ be ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"sidewalk surround one . one surround ?","if entities . find ( sidewalk ) ! = None : newline newtab entities [ sidewalk ] [ surround ] = sidewalk newline print ( one [ surround ] ) newline"
"man wear rain . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = rain newline print ( man [ wear ] ) newline"
"boy wear athletic . athletic wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = boy newline print ( athletic [ wear ] ) newline"
"woman hold some . some hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = woman newline print ( some [ hold ] ) newline"
"woman wait area . woman wait ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wait ] = area newline print ( woman [ wait ] ) newline"
"woman dance while . woman dance ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dance ] = while newline print ( woman [ dance ] ) newline"
"mortarboard be midair . mortarboard be ?","if entities . find ( mortarboard ) ! = None : newline newtab entities [ mortarboard ] [ be ] = midair newline print ( mortarboard [ be ] ) newline"
"people be sumo . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = sumo newline print ( people [ be ] ) newline"
"safety vest wave . safety vest ?","if entities . find ( safety ) ! = None : newline newtab entities [ safety ] [ vest ] = wave newline print ( safety [ vest ] ) newline"
"woman try two . woman try ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ try ] = two newline print ( woman [ try ] ) newline"
"cigarette be sleeping . cigarette be ?","if entities . find ( cigarette ) ! = None : newline newtab entities [ cigarette ] [ be ] = sleeping newline print ( cigarette [ be ] ) newline"
"noodle be five . noodle be ?","if entities . find ( noodle ) ! = None : newline newtab entities [ noodle ] [ be ] = five newline print ( noodle [ be ] ) newline"
"brown hold magazine . brown hold ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ hold ] = magazine newline print ( brown [ hold ] ) newline"
"man get direction . man get ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ get ] = direction newline print ( man [ get ] ) newline"
"doctor wear sandal . doctor wear ?","if entities . find ( doctor ) ! = None : newline newtab entities [ doctor ] [ wear ] = sandal newline print ( doctor [ wear ] ) newline"
"boy be asleep . asleep be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( asleep [ be ] ) newline"
"people be rock . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = rock newline print ( people [ be ] ) newline"
"dog leap stance . dog leap ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ leap ] = stance newline print ( dog [ leap ] ) newline"
"top be two . top be ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ be ] = two newline print ( top [ be ] ) newline"
"man watch other . other watch ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ watch ] = man newline print ( other [ watch ] ) newline"
"friend smile while . friend smile ?","if entities . find ( friend ) ! = None : newline newtab entities [ friend ] [ smile ] = while newline print ( friend [ smile ] ) newline"
"people be five . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = five newline print ( people [ be ] ) newline"
"worker be sleeping . worker be ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ be ] = sleeping newline print ( worker [ be ] ) newline"
"men be turing . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = turing newline print ( men [ be ] ) newline"
"people stand alone . alone stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( alone [ stand ] ) newline"
"girl talk or . girl talk ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ talk ] = or newline print ( girl [ talk ] ) newline"
"green shirt wave . green shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = wave newline print ( green [ shirt ] ) newline"
"red shirt clean . clean shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( clean [ shirt ] ) newline"
"cinder block another . another block ?","if entities . find ( cinder ) ! = None : newline newtab entities [ cinder ] [ block ] = cinder newline print ( another [ block ] ) newline"
"men stand knee . men stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = knee newline print ( men [ stand ] ) newline"
"red shirt rock . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = rock newline print ( red [ shirt ] ) newline"
"man be out . out be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( out [ be ] ) newline"
"dog jump midair . dog jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = midair newline print ( dog [ jump ] ) newline"
"doctor consult two . doctor consult ?","if entities . find ( doctor ) ! = None : newline newtab entities [ doctor ] [ consult ] = two newline print ( doctor [ consult ] ) newline"
"dog be busy . busy be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( busy [ be ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"couple sit next . next sit ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ sit ] = couple newline print ( next [ sit ] ) newline"
"red short harvest . red short ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ short ] = harvest newline print ( red [ short ] ) newline"
"kid dress all . all dress ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ dress ] = kid newline print ( all [ dress ] ) newline"
"man work hard . hard work ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ work ] = man newline print ( hard [ work ] ) newline"
"people walk out . out walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( out [ walk ] ) newline"
"boy look man . boy look ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ look ] = man newline print ( boy [ look ] ) newline"
"man be identical . identical be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( identical [ be ] ) newline"
"red shirt swinging . swinging shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( swinging [ shirt ] ) newline"
"he sit low . low sit ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ sit ] = he newline print ( low [ sit ] ) newline"
"people stand while . people stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = while newline print ( people [ stand ] ) newline"
"dog have an . dog have ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ have ] = an newline print ( dog [ have ] ) newline"
"equipment be sleeping . equipment be ?","if entities . find ( equipment ) ! = None : newline newtab entities [ equipment ] [ be ] = sleeping newline print ( equipment [ be ] ) newline"
"figure stand while . figure stand ?","if entities . find ( figure ) ! = None : newline newtab entities [ figure ] [ stand ] = while newline print ( figure [ stand ] ) newline"
"guy sit man . guy sit ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ sit ] = man newline print ( guy [ sit ] ) newline"
"two pass out . out pass ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ pass ] = two newline print ( out [ pass ] ) newline"
"boy skateboard trick . boy skateboard ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ skateboard ] = trick newline print ( boy [ skateboard ] ) newline"
"master play electric . electric play ?","if entities . find ( master ) ! = None : newline newtab entities [ master ] [ play ] = master newline print ( electric [ play ] ) newline"
"girl do some . some do ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ do ] = girl newline print ( some [ do ] ) newline"
"man be unexcited . unexcited be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( unexcited [ be ] ) newline"
"men be whispering . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = whispering newline print ( men [ be ] ) newline"
"boy lounge next . next lounge ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ lounge ] = boy newline print ( next [ lounge ] ) newline"
"helmet ride bike . helmet ride ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ ride ] = bike newline print ( helmet [ ride ] ) newline"
"man be fun . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = fun newline print ( man [ be ] ) newline"
"man walk little . little walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = man newline print ( little [ walk ] ) newline"
"safety vest next . next vest ?","if entities . find ( safety ) ! = None : newline newtab entities [ safety ] [ vest ] = safety newline print ( next [ vest ] ) newline"
"he be spray . he be ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ be ] = spray newline print ( he [ be ] ) newline"
"people be sleeping . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = sleeping newline print ( people [ be ] ) newline"
"men be several . several be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( several [ be ] ) newline"
"people be out . out be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( out [ be ] ) newline"
"couple be multicolored . multicolored be ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ be ] = couple newline print ( multicolored [ be ] ) newline"
"dog be some . some be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( some [ be ] ) newline"
"craftsman sit alone . alone sit ?","if entities . find ( craftsman ) ! = None : newline newtab entities [ craftsman ] [ sit ] = craftsman newline print ( alone [ sit ] ) newline"
"goalie crouch low . low crouch ?","if entities . find ( goalie ) ! = None : newline newtab entities [ goalie ] [ crouch ] = goalie newline print ( low [ crouch ] ) newline"
"man juggle four . man juggle ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ juggle ] = four newline print ( man [ juggle ] ) newline"
"wings be sleeping . wings be ?","if entities . find ( wings ) ! = None : newline newtab entities [ wings ] [ be ] = sleeping newline print ( wings [ be ] ) newline"
"sort consist two . sort consist ?","if entities . find ( sort ) ! = None : newline newtab entities [ sort ] [ consist ] = two newline print ( sort [ consist ] ) newline"
"while look out . out look ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ look ] = while newline print ( out [ look ] ) newline"
"man do pastel . pastel do ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ do ] = man newline print ( pastel [ do ] ) newline"
"rower pull out . out pull ?","if entities . find ( rower ) ! = None : newline newtab entities [ rower ] [ pull ] = rower newline print ( out [ pull ] ) newline"
"umbrella shop fresh . fresh shop ?","if entities . find ( umbrella ) ! = None : newline newtab entities [ umbrella ] [ shop ] = umbrella newline print ( fresh [ shop ] ) newline"
"man dress while . man dress ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ dress ] = while newline print ( man [ dress ] ) newline"
"boy be three . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = three newline print ( boy [ be ] ) newline"
"outfit be sorting . outfit be ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ be ] = sorting newline print ( outfit [ be ] ) newline"
"midday break fast . fast break ?","if entities . find ( midday ) ! = None : newline newtab entities [ midday ] [ break ] = midday newline print ( fast [ break ] ) newline"
"room use crosswalk . room use ?","if entities . find ( room ) ! = None : newline newtab entities [ room ] [ use ] = crosswalk newline print ( room [ use ] ) newline"
"child play musical . musical play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = child newline print ( musical [ play ] ) newline"
"boot jump house . boot jump ?","if entities . find ( boot ) ! = None : newline newtab entities [ boot ] [ jump ] = house newline print ( boot [ jump ] ) newline"
"man prepare food . man prepare ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ prepare ] = food newline print ( man [ prepare ] ) newline"
"officer stand next . next stand ?","if entities . find ( officer ) ! = None : newline newtab entities [ officer ] [ stand ] = officer newline print ( next [ stand ] ) newline"
"car fire out . out fire ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ fire ] = car newline print ( out [ fire ] ) newline"
"dog play colorful . colorful play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = dog newline print ( colorful [ play ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"arts pose next . next pose ?","if entities . find ( arts ) ! = None : newline newtab entities [ arts ] [ pose ] = arts newline print ( next [ pose ] ) newline"
"food be miniature . food be ?","if entities . find ( food ) ! = None : newline newtab entities [ food ] [ be ] = miniature newline print ( food [ be ] ) newline"
"grocery shop next . next shop ?","if entities . find ( grocery ) ! = None : newline newtab entities [ grocery ] [ shop ] = grocery newline print ( next [ shop ] ) newline"
"surfer jump out . out jump ?","if entities . find ( surfer ) ! = None : newline newtab entities [ surfer ] [ jump ] = surfer newline print ( out [ jump ] ) newline"
"photographer kneel next . next kneel ?","if entities . find ( photographer ) ! = None : newline newtab entities [ photographer ] [ kneel ] = photographer newline print ( next [ kneel ] ) newline"
"boy try out . out try ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ try ] = boy newline print ( out [ try ] ) newline"
"who be white . white be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( white [ be ] ) newline"
"fish be several . several be ?","if entities . find ( fish ) ! = None : newline newtab entities [ fish ] [ be ] = fish newline print ( several [ be ] ) newline"
"logo shirt motion . logo shirt ?","if entities . find ( logo ) ! = None : newline newtab entities [ logo ] [ shirt ] = motion newline print ( logo [ shirt ] ) newline"
"brown shirt sleep . brown shirt ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ shirt ] = sleep newline print ( brown [ shirt ] ) newline"
"man surf two . man surf ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ surf ] = two newline print ( man [ surf ] ) newline"
"worker wear jacket . worker wear ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ wear ] = jacket newline print ( worker [ wear ] ) newline"
"while inspect some . some inspect ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ inspect ] = while newline print ( some [ inspect ] ) newline"
"sweatshirt place while . sweatshirt place ?","if entities . find ( sweatshirt ) ! = None : newline newtab entities [ sweatshirt ] [ place ] = while newline print ( sweatshirt [ place ] ) newline"
"girl be girl . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( girl [ be ] ) newline"
"player look out . out look ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ look ] = player newline print ( out [ look ] ) newline"
"woman be raining . raining be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( raining [ be ] ) newline"
"jersey be one . one be ?","if entities . find ( jersey ) ! = None : newline newtab entities [ jersey ] [ be ] = jersey newline print ( one [ be ] ) newline"
"girl stand next . next stand ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ stand ] = girl newline print ( next [ stand ] ) newline"
"lady dress couple . lady dress ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ dress ] = couple newline print ( lady [ dress ] ) newline"
"men play an . men play ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ play ] = an newline print ( men [ play ] ) newline"
"woman be wooded . wooded be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( wooded [ be ] ) newline"
"dog be married . married be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( married [ be ] ) newline"
"rodeo try two . rodeo try ?","if entities . find ( rodeo ) ! = None : newline newtab entities [ rodeo ] [ try ] = two newline print ( rodeo [ try ] ) newline"
"skate be swinging . swinging be ?","if entities . find ( skate ) ! = None : newline newtab entities [ skate ] [ be ] = skate newline print ( swinging [ be ] ) newline"
"while ride an . while ride ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ ride ] = an newline print ( while [ ride ] ) newline"
"girl play tennis . girl play ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ play ] = tennis newline print ( girl [ play ] ) newline"
"man be staring . staring be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( staring [ be ] ) newline"
"boy ride alone . alone ride ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ ride ] = boy newline print ( alone [ ride ] ) newline"
"worker work construction . worker work ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ work ] = construction newline print ( worker [ work ] ) newline"
"cannon ball white . white ball ?","if entities . find ( cannon ) ! = None : newline newtab entities [ cannon ] [ ball ] = cannon newline print ( white [ ball ] ) newline"
"three race uniform . uniform race ?","if entities . find ( three ) ! = None : newline newtab entities [ three ] [ race ] = three newline print ( uniform [ race ] ) newline"
"men look happy . happy look ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ look ] = men newline print ( happy [ look ] ) newline"
"soldier march band . soldier march ?","if entities . find ( soldier ) ! = None : newline newtab entities [ soldier ] [ march ] = band newline print ( soldier [ march ] ) newline"
"man walk out . out walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = man newline print ( out [ walk ] ) newline"
"girl be both . both be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( both [ be ] ) newline"
"kilt be opening . kilt be ?","if entities . find ( kilt ) ! = None : newline newtab entities [ kilt ] [ be ] = opening newline print ( kilt [ be ] ) newline"
"men sit while . men sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = while newline print ( men [ sit ] ) newline"
"who be teaching . who be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = teaching newline print ( who [ be ] ) newline"
"sidewalk be asleep . asleep be ?","if entities . find ( sidewalk ) ! = None : newline newtab entities [ sidewalk ] [ be ] = sidewalk newline print ( asleep [ be ] ) newline"
"woman do some . some do ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ do ] = woman newline print ( some [ do ] ) newline"
"men be an . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = an newline print ( men [ be ] ) newline"
"red shirt an . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = an newline print ( red [ shirt ] ) newline"
"jeans stand alone . alone stand ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ stand ] = jeans newline print ( alone [ stand ] ) newline"
"runner be sleeping . runner be ?","if entities . find ( runner ) ! = None : newline newtab entities [ runner ] [ be ] = sleeping newline print ( runner [ be ] ) newline"
"woman be upside . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = upside newline print ( woman [ be ] ) newline"
"while hold an . while hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = an newline print ( while [ hold ] ) newline"
"lady be bigger . bigger be ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ be ] = lady newline print ( bigger [ be ] ) newline"
"tutu get ready . ready get ?","if entities . find ( tutu ) ! = None : newline newtab entities [ tutu ] [ get ] = tutu newline print ( ready [ get ] ) newline"
"violinist play musical . musical play ?","if entities . find ( violinist ) ! = None : newline newtab entities [ violinist ] [ play ] = violinist newline print ( musical [ play ] ) newline"
"girl be swinging . swinging be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( swinging [ be ] ) newline"
"christmas present another . another present ?","if entities . find ( christmas ) ! = None : newline newtab entities [ christmas ] [ present ] = christmas newline print ( another [ present ] ) newline"
"man be white . white be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( white [ be ] ) newline"
"while cook pot . while cook ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ cook ] = pot newline print ( while [ cook ] ) newline"
"boy stand or . boy stand ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ stand ] = or newline print ( boy [ stand ] ) newline"
"man play guitar . man play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = guitar newline print ( man [ play ] ) newline"
"man be laughing . laughing be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( laughing [ be ] ) newline"
"guy wear helmet . guy wear ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ wear ] = helmet newline print ( guy [ wear ] ) newline"
"child stand or . child stand ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ stand ] = or newline print ( child [ stand ] ) newline"
"man be child . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = child newline print ( man [ be ] ) newline"
"child bond white . white bond ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ bond ] = child newline print ( white [ bond ] ) newline"
"red swim next . next swim ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ swim ] = red newline print ( next [ swim ] ) newline"
"woman cover street . woman cover ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ cover ] = street newline print ( woman [ cover ] ) newline"
"while seat next . next seat ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ seat ] = while newline print ( next [ seat ] ) newline"
"woman give toy . woman give ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ give ] = toy newline print ( woman [ give ] ) newline"
"woman be opening . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = opening newline print ( woman [ be ] ) newline"
"boy wrestle while . boy wrestle ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wrestle ] = while newline print ( boy [ wrestle ] ) newline"
"skateboarder be out . out be ?","if entities . find ( skateboarder ) ! = None : newline newtab entities [ skateboarder ] [ be ] = skateboarder newline print ( out [ be ] ) newline"
"dog jump out . out jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = dog newline print ( out [ jump ] ) newline"
"he get some . some get ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ get ] = he newline print ( some [ get ] ) newline"
"chef be midair . chef be ?","if entities . find ( chef ) ! = None : newline newtab entities [ chef ] [ be ] = midair newline print ( chef [ be ] ) newline"
"people sit next . next sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( next [ sit ] ) newline"
"player wear black . black wear ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ wear ] = player newline print ( black [ wear ] ) newline"
"motorcyclist ride orange . motorcyclist ride ?","if entities . find ( motorcyclist ) ! = None : newline newtab entities [ motorcyclist ] [ ride ] = orange newline print ( motorcyclist [ ride ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"horse jockey white . white jockey ?","if entities . find ( horse ) ! = None : newline newtab entities [ horse ] [ jockey ] = horse newline print ( white [ jockey ] ) newline"
"florist shop mart . florist shop ?","if entities . find ( florist ) ! = None : newline newtab entities [ florist ] [ shop ] = mart newline print ( florist [ shop ] ) newline"
"man photograph buffalo . man photograph ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ photograph ] = buffalo newline print ( man [ photograph ] ) newline"
"girl ride elephant . girl ride ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ ride ] = elephant newline print ( girl [ ride ] ) newline"
"drum set out . out set ?","if entities . find ( drum ) ! = None : newline newtab entities [ drum ] [ set ] = drum newline print ( out [ set ] ) newline"
"people be laughing . laughing be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( laughing [ be ] ) newline"
"person ride stationary . stationary ride ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ ride ] = person newline print ( stationary [ ride ] ) newline"
"child look grumpy . grumpy look ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ look ] = child newline print ( grumpy [ look ] ) newline"
"guy hold newborn . newborn hold ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ hold ] = guy newline print ( newborn [ hold ] ) newline"
"men be swinging . swinging be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( swinging [ be ] ) newline"
"worker toil white . white toil ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ toil ] = worker newline print ( white [ toil ] ) newline"
"tan hat point . tan hat ?","if entities . find ( tan ) ! = None : newline newtab entities [ tan ] [ hat ] = point newline print ( tan [ hat ] ) newline"
"people congregate white . white congregate ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ congregate ] = people newline print ( white [ congregate ] ) newline"
"man shoot candle . man shoot ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ shoot ] = candle newline print ( man [ shoot ] ) newline"
"chair read book . chair read ?","if entities . find ( chair ) ! = None : newline newtab entities [ chair ] [ read ] = book newline print ( chair [ read ] ) newline"
"woman be woman . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( woman [ be ] ) newline"
"men carve wooden . wooden carve ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ carve ] = men newline print ( wooden [ carve ] ) newline"
"or unload item . or unload ?","if entities . find ( or ) ! = None : newline newtab entities [ or ] [ unload ] = item newline print ( or [ unload ] ) newline"
"boy wear sunglasses . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = sunglasses newline print ( boy [ wear ] ) newline"
"people walk next . next walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( next [ walk ] ) newline"
"water be opening . water be ?","if entities . find ( water ) ! = None : newline newtab entities [ water ] [ be ] = opening newline print ( water [ be ] ) newline"
"bicyclist ride bike . bicyclist ride ?","if entities . find ( bicyclist ) ! = None : newline newtab entities [ bicyclist ] [ ride ] = bike newline print ( bicyclist [ ride ] ) newline"
"outfit serve white . white serve ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ serve ] = outfit newline print ( white [ serve ] ) newline"
"while play next . next play ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ play ] = while newline print ( next [ play ] ) newline"
"ice cream cool . cool cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = ice newline print ( cool [ cream ] ) newline"
"sweater hold flower . sweater hold ?","if entities . find ( sweater ) ! = None : newline newtab entities [ sweater ] [ hold ] = flower newline print ( sweater [ hold ] ) newline"
"people be asleep . asleep be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( asleep [ be ] ) newline"
"woman stand or . woman stand ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ stand ] = or newline print ( woman [ stand ] ) newline"
"people sit net . people sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = net newline print ( people [ sit ] ) newline"
"black sit youth . black sit ?","if entities . find ( black ) ! = None : newline newtab entities [ black ] [ sit ] = youth newline print ( black [ sit ] ) newline"
"person hold an . person hold ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ hold ] = an newline print ( person [ hold ] ) newline"
"man lean out . out lean ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ lean ] = man newline print ( out [ lean ] ) newline"
"dog chase some . some chase ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ chase ] = dog newline print ( some [ chase ] ) newline"
"rock hike white . white hike ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ hike ] = rock newline print ( white [ hike ] ) newline"
"woman walk two . woman walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = two newline print ( woman [ walk ] ) newline"
"helmet strap white . white strap ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ strap ] = helmet newline print ( white [ strap ] ) newline"
"people be asleep . asleep be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( asleep [ be ] ) newline"
"bag hold some . some hold ?","if entities . find ( bag ) ! = None : newline newtab entities [ bag ] [ hold ] = bag newline print ( some [ hold ] ) newline"
"woman dance alone . alone dance ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dance ] = woman newline print ( alone [ dance ] ) newline"
"dog wear blue . blue wear ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ wear ] = dog newline print ( blue [ wear ] ) newline"
"babushka be food . babushka be ?","if entities . find ( babushka ) ! = None : newline newtab entities [ babushka ] [ be ] = food newline print ( babushka [ be ] ) newline"
"art sculpture while . art sculpture ?","if entities . find ( art ) ! = None : newline newtab entities [ art ] [ sculpture ] = while newline print ( art [ sculpture ] ) newline"
"dog run side . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = side newline print ( dog [ run ] ) newline"
"book sign book . book sign ?","if entities . find ( book ) ! = None : newline newtab entities [ book ] [ sign ] = book newline print ( book [ sign ] ) newline"
"child wear blue . blue wear ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wear ] = child newline print ( blue [ wear ] ) newline"
"men be opening . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = opening newline print ( men [ be ] ) newline"
"two be food . two be ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ be ] = food newline print ( two [ be ] ) newline"
"men be india . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = india newline print ( men [ be ] ) newline"
"while do next . next do ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ do ] = while newline print ( next [ do ] ) newline"
"man wear blue . blue wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( blue [ wear ] ) newline"
"man wear construction . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = construction newline print ( man [ wear ] ) newline"
"man be unexcited . unexcited be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( unexcited [ be ] ) newline"
"fireman be sleeping . fireman be ?","if entities . find ( fireman ) ! = None : newline newtab entities [ fireman ] [ be ] = sleeping newline print ( fireman [ be ] ) newline"
"men be comforting . comforting be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( comforting [ be ] ) newline"
"man push ice . man push ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ push ] = ice newline print ( man [ push ] ) newline"
"asian stand applause . asian stand ?","if entities . find ( asian ) ! = None : newline newtab entities [ asian ] [ stand ] = applause newline print ( asian [ stand ] ) newline"
"jacket be pilot . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = pilot newline print ( jacket [ be ] ) newline"
"hiker rest next . next rest ?","if entities . find ( hiker ) ! = None : newline newtab entities [ hiker ] [ rest ] = hiker newline print ( next [ rest ] ) newline"
"guitar sing live . live sing ?","if entities . find ( guitar ) ! = None : newline newtab entities [ guitar ] [ sing ] = guitar newline print ( live [ sing ] ) newline"
"sweatshirt grab some . some grab ?","if entities . find ( sweatshirt ) ! = None : newline newtab entities [ sweatshirt ] [ grab ] = sweatshirt newline print ( some [ grab ] ) newline"
"machine be proud . proud be ?","if entities . find ( machine ) ! = None : newline newtab entities [ machine ] [ be ] = machine newline print ( proud [ be ] ) newline"
"showgirl put linen . showgirl put ?","if entities . find ( showgirl ) ! = None : newline newtab entities [ showgirl ] [ put ] = linen newline print ( showgirl [ put ] ) newline"
"vegetable wait next . next wait ?","if entities . find ( vegetable ) ! = None : newline newtab entities [ vegetable ] [ wait ] = vegetable newline print ( next [ wait ] ) newline"
"guy be white . white be ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ be ] = guy newline print ( white [ be ] ) newline"
"boy crouch low . low crouch ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ crouch ] = boy newline print ( low [ crouch ] ) newline"
"people walk trough . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = trough newline print ( people [ walk ] ) newline"
"boy be clustered . clustered be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( clustered [ be ] ) newline"
"green shirt light . green shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = light newline print ( green [ shirt ] ) newline"
"woman hold sign . woman hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = sign newline print ( woman [ hold ] ) newline"
"while play some . some play ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ play ] = while newline print ( some [ play ] ) newline"
"gear clear leader . gear clear ?","if entities . find ( gear ) ! = None : newline newtab entities [ gear ] [ clear ] = leader newline print ( gear [ clear ] ) newline"
"man be next . next be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( next [ be ] ) newline"
"boy fall water . boy fall ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ fall ] = water newline print ( boy [ fall ] ) newline"
"man look student . man look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = student newline print ( man [ look ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"red pop it . red pop ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ pop ] = it newline print ( red [ pop ] ) newline"
"sunglasses stand man . sunglasses stand ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ stand ] = man newline print ( sunglasses [ stand ] ) newline"
"man wear sunglasses . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = sunglasses newline print ( man [ wear ] ) newline"
"man descend stairs . man descend ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ descend ] = stairs newline print ( man [ descend ] ) newline"
"background play acoustic . acoustic play ?","if entities . find ( background ) ! = None : newline newtab entities [ background ] [ play ] = background newline print ( acoustic [ play ] ) newline"
"woman walk next . next walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = woman newline print ( next [ walk ] ) newline"
"man be screaming . screaming be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( screaming [ be ] ) newline"
"people congregate white . white congregate ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ congregate ] = people newline print ( white [ congregate ] ) newline"
"people do various . various do ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ do ] = people newline print ( various [ do ] ) newline"
"men play instrument . men play ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ play ] = instrument newline print ( men [ play ] ) newline"
"who look out . out look ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ look ] = who newline print ( out [ look ] ) newline"
"rock climb large . large climb ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ climb ] = rock newline print ( large [ climb ] ) newline"
"stage play musical . musical play ?","if entities . find ( stage ) ! = None : newline newtab entities [ stage ] [ play ] = stage newline print ( musical [ play ] ) newline"
"people be sleeping . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = sleeping newline print ( people [ be ] ) newline"
"hair sit next . next sit ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ sit ] = hair newline print ( next [ sit ] ) newline"
"man wear protective . protective wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( protective [ wear ] ) newline"
"woman have fun . woman have ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ have ] = fun newline print ( woman [ have ] ) newline"
"man be three . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = three newline print ( man [ be ] ) newline"
"people sit next . next sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( next [ sit ] ) newline"
"people be sleeping . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = sleeping newline print ( people [ be ] ) newline"
"man stand elbow . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = elbow newline print ( man [ stand ] ) newline"
"man lean out . out lean ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ lean ] = man newline print ( out [ lean ] ) newline"
"dog run careful . careful run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( careful [ run ] ) newline"
"man be opening . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = opening newline print ( man [ be ] ) newline"
"girl dress all . all dress ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ dress ] = girl newline print ( all [ dress ] ) newline"
"cycle clog sandal . cycle clog ?","if entities . find ( cycle ) ! = None : newline newtab entities [ cycle ] [ clog ] = sandal newline print ( cycle [ clog ] ) newline"
"guy sit or . guy sit ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ sit ] = or newline print ( guy [ sit ] ) newline"
"picture take picture . picture take ?","if entities . find ( picture ) ! = None : newline newtab entities [ picture ] [ take ] = picture newline print ( picture [ take ] ) newline"
"men take outdoor . outdoor take ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ take ] = men newline print ( outdoor [ take ] ) newline"
"men be staring . staring be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( staring [ be ] ) newline"
"man enjoy athletic . athletic enjoy ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ enjoy ] = man newline print ( athletic [ enjoy ] ) newline"
"pitcher be laughing . laughing be ?","if entities . find ( pitcher ) ! = None : newline newtab entities [ pitcher ] [ be ] = pitcher newline print ( laughing [ be ] ) newline"
"diver extend ladder . diver extend ?","if entities . find ( diver ) ! = None : newline newtab entities [ diver ] [ extend ] = ladder newline print ( diver [ extend ] ) newline"
"picture take photo . picture take ?","if entities . find ( picture ) ! = None : newline newtab entities [ picture ] [ take ] = photo newline print ( picture [ take ] ) newline"
"men dress woman . men dress ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ dress ] = woman newline print ( men [ dress ] ) newline"
"suit be laughing . laughing be ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ be ] = suit newline print ( laughing [ be ] ) newline"
"woman be full . full be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( full [ be ] ) newline"
"man stand staring . staring stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( staring [ stand ] ) newline"
"girl gather next . next gather ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ gather ] = girl newline print ( next [ gather ] ) newline"
"woman wrestle gear . woman wrestle ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wrestle ] = gear newline print ( woman [ wrestle ] ) newline"
"student watch television . student watch ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ watch ] = television newline print ( student [ watch ] ) newline"
"person ride high . high ride ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ ride ] = person newline print ( high [ ride ] ) newline"
"stage hold umbrella . stage hold ?","if entities . find ( stage ) ! = None : newline newtab entities [ stage ] [ hold ] = umbrella newline print ( stage [ hold ] ) newline"
"man be midair . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = midair newline print ( man [ be ] ) newline"
"cameraman be swinging . swinging be ?","if entities . find ( cameraman ) ! = None : newline newtab entities [ cameraman ] [ be ] = cameraman newline print ( swinging [ be ] ) newline"
"red race gear . red race ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ race ] = gear newline print ( red [ race ] ) newline"
"orange work man . orange work ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ work ] = man newline print ( orange [ work ] ) newline"
"boy wear black . black wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = boy newline print ( black [ wear ] ) newline"
"woman pose an . woman pose ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ pose ] = an newline print ( woman [ pose ] ) newline"
"people compete white . white compete ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ compete ] = people newline print ( white [ compete ] ) newline"
"couple be pictured . pictured be ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ be ] = couple newline print ( pictured [ be ] ) newline"
"child wear jeans . child wear ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wear ] = jeans newline print ( child [ wear ] ) newline"
"man play some . some play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = man newline print ( some [ play ] ) newline"
"office build next . next build ?","if entities . find ( office ) ! = None : newline newtab entities [ office ] [ build ] = office newline print ( next [ build ] ) newline"
"people sit next . next sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( next [ sit ] ) newline"
"girl sit while . girl sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = while newline print ( girl [ sit ] ) newline"
"leg cover pavement . leg cover ?","if entities . find ( leg ) ! = None : newline newtab entities [ leg ] [ cover ] = pavement newline print ( leg [ cover ] ) newline"
"red glass next . next glass ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ glass ] = red newline print ( next [ glass ] ) newline"
"lady be two . lady be ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ be ] = two newline print ( lady [ be ] ) newline"
"hula hoop while . hula hoop ?","if entities . find ( hula ) ! = None : newline newtab entities [ hula ] [ hoop ] = while newline print ( hula [ hoop ] ) newline"
"man be asleep . asleep be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( asleep [ be ] ) newline"
"coffee shop bag . coffee shop ?","if entities . find ( coffee ) ! = None : newline newtab entities [ coffee ] [ shop ] = bag newline print ( coffee [ shop ] ) newline"
"baby sit next . next sit ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ sit ] = baby newline print ( next [ sit ] ) newline"
"dog be sleeping . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = sleeping newline print ( dog [ be ] ) newline"
"santa be an . santa be ?","if entities . find ( santa ) ! = None : newline newtab entities [ santa ] [ be ] = an newline print ( santa [ be ] ) newline"
"son cut real . real cut ?","if entities . find ( son ) ! = None : newline newtab entities [ son ] [ cut ] = son newline print ( real [ cut ] ) newline"
"man do some . some do ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ do ] = man newline print ( some [ do ] ) newline"
"cowboy rope apparatus . cowboy rope ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ rope ] = apparatus newline print ( cowboy [ rope ] ) newline"
"tan pant other . other pant ?","if entities . find ( tan ) ! = None : newline newtab entities [ tan ] [ pant ] = tan newline print ( other [ pant ] ) newline"
"man tip white . white tip ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ tip ] = man newline print ( white [ tip ] ) newline"
"dance move tarp . dance move ?","if entities . find ( dance ) ! = None : newline newtab entities [ dance ] [ move ] = tarp newline print ( dance [ move ] ) newline"
"man be people . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = people newline print ( man [ be ] ) newline"
"man hold several . several hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = man newline print ( several [ hold ] ) newline"
"men stand camera . men stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = camera newline print ( men [ stand ] ) newline"
"water wash machine . water wash ?","if entities . find ( water ) ! = None : newline newtab entities [ water ] [ wash ] = machine newline print ( water [ wash ] ) newline"
"men sail race . men sail ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sail ] = race newline print ( men [ sail ] ) newline"
"boy hold two . boy hold ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ hold ] = two newline print ( boy [ hold ] ) newline"
"people walk hand . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = hand newline print ( people [ walk ] ) newline"
"woman dress boy . woman dress ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dress ] = boy newline print ( woman [ dress ] ) newline"
"gentleman walk trough . gentleman walk ?","if entities . find ( gentleman ) ! = None : newline newtab entities [ gentleman ] [ walk ] = trough newline print ( gentleman [ walk ] ) newline"
"red shirt opening . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = opening newline print ( red [ shirt ] ) newline"
"people ride horse . people ride ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ ride ] = horse newline print ( people [ ride ] ) newline"
"bag slouch white . white slouch ?","if entities . find ( bag ) ! = None : newline newtab entities [ bag ] [ slouch ] = bag newline print ( white [ slouch ] ) newline"
"swimmer come out . out come ?","if entities . find ( swimmer ) ! = None : newline newtab entities [ swimmer ] [ come ] = swimmer newline print ( out [ come ] ) newline"
"while load white . white load ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ load ] = while newline print ( white [ load ] ) newline"
"while sit side . while sit ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ sit ] = side newline print ( while [ sit ] ) newline"
"musician play soccer . musician play ?","if entities . find ( musician ) ! = None : newline newtab entities [ musician ] [ play ] = soccer newline print ( musician [ play ] ) newline"
"man be scuba . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = scuba newline print ( man [ be ] ) newline"
"people prepare some . some prepare ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ prepare ] = people newline print ( some [ prepare ] ) newline"
"musician perform martial . martial perform ?","if entities . find ( musician ) ! = None : newline newtab entities [ musician ] [ perform ] = musician newline print ( martial [ perform ] ) newline"
"ear look out . out look ?","if entities . find ( ear ) ! = None : newline newtab entities [ ear ] [ look ] = ear newline print ( out [ look ] ) newline"
"street be four . street be ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ be ] = four newline print ( street [ be ] ) newline"
"skateboarder leap high . high leap ?","if entities . find ( skateboarder ) ! = None : newline newtab entities [ skateboarder ] [ leap ] = skateboarder newline print ( high [ leap ] ) newline"
"people hold an . people hold ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ hold ] = an newline print ( people [ hold ] ) newline"
"girl create portrait . girl create ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ create ] = portrait newline print ( girl [ create ] ) newline"
"horse play professional . professional play ?","if entities . find ( horse ) ! = None : newline newtab entities [ horse ] [ play ] = horse newline print ( professional [ play ] ) newline"
"girl be napping . napping be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( napping [ be ] ) newline"
"skateboarder look man . skateboarder look ?","if entities . find ( skateboarder ) ! = None : newline newtab entities [ skateboarder ] [ look ] = man newline print ( skateboarder [ look ] ) newline"
"man be disinterested . disinterested be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( disinterested [ be ] ) newline"
"outfit wear all . all wear ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ wear ] = outfit newline print ( all [ wear ] ) newline"
"flower dress boy . flower dress ?","if entities . find ( flower ) ! = None : newline newtab entities [ flower ] [ dress ] = boy newline print ( flower [ dress ] ) newline"
"gray shirt swinging . swinging shirt ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ shirt ] = gray newline print ( swinging [ shirt ] ) newline"
"men sit next . next sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = men newline print ( next [ sit ] ) newline"
"man be three . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = three newline print ( man [ be ] ) newline"
"men dress swinging . swinging dress ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ dress ] = men newline print ( swinging [ dress ] ) newline"
"table cut another . another cut ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ cut ] = table newline print ( another [ cut ] ) newline"
"violinist play xylophone . violinist play ?","if entities . find ( violinist ) ! = None : newline newtab entities [ violinist ] [ play ] = xylophone newline print ( violinist [ play ] ) newline"
"man play musical . musical play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = man newline print ( musical [ play ] ) newline"
"camera be many . many be ?","if entities . find ( camera ) ! = None : newline newtab entities [ camera ] [ be ] = camera newline print ( many [ be ] ) newline"
"face paint an . face paint ?","if entities . find ( face ) ! = None : newline newtab entities [ face ] [ paint ] = an newline print ( face [ paint ] ) newline"
"top play an . top play ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ play ] = an newline print ( top [ play ] ) newline"
"youngster be three . youngster be ?","if entities . find ( youngster ) ! = None : newline newtab entities [ youngster ] [ be ] = three newline print ( youngster [ be ] ) newline"
"dog tread two . dog tread ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ tread ] = two newline print ( dog [ tread ] ) newline"
"woman mix gender . woman mix ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ mix ] = gender newline print ( woman [ mix ] ) newline"
"people stand still . still stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( still [ stand ] ) newline"
"player catch fish . player catch ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ catch ] = fish newline print ( player [ catch ] ) newline"
"people be people . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( people [ be ] ) newline"
"man walk out . out walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = man newline print ( out [ walk ] ) newline"
"people look woman . people look ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ look ] = woman newline print ( people [ look ] ) newline"
"girl make color . girl make ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ make ] = color newline print ( girl [ make ] ) newline"
"boy wear black . black wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = boy newline print ( black [ wear ] ) newline"
"individual be opening . individual be ?","if entities . find ( individual ) ! = None : newline newtab entities [ individual ] [ be ] = opening newline print ( individual [ be ] ) newline"
"runner jog next . next jog ?","if entities . find ( runner ) ! = None : newline newtab entities [ runner ] [ jog ] = runner newline print ( next [ jog ] ) newline"
"people be two . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = two newline print ( people [ be ] ) newline"
"business attire swinging . swinging attire ?","if entities . find ( business ) ! = None : newline newtab entities [ business ] [ attire ] = business newline print ( swinging [ attire ] ) newline"
"guard rail next . next rail ?","if entities . find ( guard ) ! = None : newline newtab entities [ guard ] [ rail ] = guard newline print ( next [ rail ] ) newline"
"girl walk while . girl walk ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ walk ] = while newline print ( girl [ walk ] ) newline"
"stone eat wedding . stone eat ?","if entities . find ( stone ) ! = None : newline newtab entities [ stone ] [ eat ] = wedding newline print ( stone [ eat ] ) newline"
"while do mean . mean do ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ do ] = while newline print ( mean [ do ] ) newline"
"man jump next . next jump ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ jump ] = man newline print ( next [ jump ] ) newline"
"men be beautiful . beautiful be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( beautiful [ be ] ) newline"
"woman be parasailing . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = parasailing newline print ( woman [ be ] ) newline"
"player swerve white . white swerve ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ swerve ] = player newline print ( white [ swerve ] ) newline"
"red shirt who . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = who newline print ( red [ shirt ] ) newline"
"cap be pole . cap be ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ be ] = pole newline print ( cap [ be ] ) newline"
"child be painted . painted be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( painted [ be ] ) newline"
"head wrap paper . head wrap ?","if entities . find ( head ) ! = None : newline newtab entities [ head ] [ wrap ] = paper newline print ( head [ wrap ] ) newline"
"player look sad . sad look ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ look ] = player newline print ( sad [ look ] ) newline"
"sleeve be trophy . sleeve be ?","if entities . find ( sleeve ) ! = None : newline newtab entities [ sleeve ] [ be ] = trophy newline print ( sleeve [ be ] ) newline"
"man stand or . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = or newline print ( man [ stand ] ) newline"
"men pour water . men pour ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ pour ] = water newline print ( men [ pour ] ) newline"
"hiker wear white . white wear ?","if entities . find ( hiker ) ! = None : newline newtab entities [ hiker ] [ wear ] = hiker newline print ( white [ wear ] ) newline"
"girl do different . different do ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ do ] = girl newline print ( different [ do ] ) newline"
"red shirt staring . staring shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( staring [ shirt ] ) newline"
"girl sit or . girl sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = or newline print ( girl [ sit ] ) newline"
"group be sleeping . group be ?","if entities . find ( group ) ! = None : newline newtab entities [ group ] [ be ] = sleeping newline print ( group [ be ] ) newline"
"hiker stand next . next stand ?","if entities . find ( hiker ) ! = None : newline newtab entities [ hiker ] [ stand ] = hiker newline print ( next [ stand ] ) newline"
"worker clean an . worker clean ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ clean ] = an newline print ( worker [ clean ] ) newline"
"woman sit while . woman sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = while newline print ( woman [ sit ] ) newline"
"jeans be rock . jeans be ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ be ] = rock newline print ( jeans [ be ] ) newline"
"men be married . married be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( married [ be ] ) newline"
"family sit next . next sit ?","if entities . find ( family ) ! = None : newline newtab entities [ family ] [ sit ] = family newline print ( next [ sit ] ) newline"
"baby be airborne . airborne be ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ be ] = baby newline print ( airborne [ be ] ) newline"
"sweatshirt work construction . sweatshirt work ?","if entities . find ( sweatshirt ) ! = None : newline newtab entities [ sweatshirt ] [ work ] = construction newline print ( sweatshirt [ work ] ) newline"
"doctor be napping . napping be ?","if entities . find ( doctor ) ! = None : newline newtab entities [ doctor ] [ be ] = doctor newline print ( napping [ be ] ) newline"
"orange shirt who . orange shirt ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ shirt ] = who newline print ( orange [ shirt ] ) newline"
"man stand knee . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = knee newline print ( man [ stand ] ) newline"
"sunglasses sit while . sunglasses sit ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ sit ] = while newline print ( sunglasses [ sit ] ) newline"
"two thumb out . out thumb ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ thumb ] = two newline print ( out [ thumb ] ) newline"
"girl be cool . cool be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( cool [ be ] ) newline"
"bandanna be parasailing . bandanna be ?","if entities . find ( bandanna ) ! = None : newline newtab entities [ bandanna ] [ be ] = parasailing newline print ( bandanna [ be ] ) newline"
"stage play next . next play ?","if entities . find ( stage ) ! = None : newline newtab entities [ stage ] [ play ] = stage newline print ( next [ play ] ) newline"
"adult gather next . next gather ?","if entities . find ( adult ) ! = None : newline newtab entities [ adult ] [ gather ] = adult newline print ( next [ gather ] ) newline"
"kitchen be spaced . spaced be ?","if entities . find ( kitchen ) ! = None : newline newtab entities [ kitchen ] [ be ] = kitchen newline print ( spaced [ be ] ) newline"
"girl stand next . next stand ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ stand ] = girl newline print ( next [ stand ] ) newline"
"boat wear white . white wear ?","if entities . find ( boat ) ! = None : newline newtab entities [ boat ] [ wear ] = boat newline print ( white [ wear ] ) newline"
"man dig steak . man dig ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ dig ] = steak newline print ( man [ dig ] ) newline"
"people be staring . staring be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( staring [ be ] ) newline"
"sign say nike . sign say ?","if entities . find ( sign ) ! = None : newline newtab entities [ sign ] [ say ] = nike newline print ( sign [ say ] ) newline"
"dog lay dog . dog lay ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ lay ] = dog newline print ( dog [ lay ] ) newline"
"sign rest next . next rest ?","if entities . find ( sign ) ! = None : newline newtab entities [ sign ] [ rest ] = sign newline print ( next [ rest ] ) newline"
"dog sit low . low sit ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ sit ] = dog newline print ( low [ sit ] ) newline"
"fairway shop area . fairway shop ?","if entities . find ( fairway ) ! = None : newline newtab entities [ fairway ] [ shop ] = area newline print ( fairway [ shop ] ) newline"
"kid play an . kid play ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ play ] = an newline print ( kid [ play ] ) newline"
"lady dress small . small dress ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ dress ] = lady newline print ( small [ dress ] ) newline"
"woman look out . out look ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ look ] = woman newline print ( out [ look ] ) newline"
"lady show pride . lady show ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ show ] = pride newline print ( lady [ show ] ) newline"
"dog be staring . staring be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( staring [ be ] ) newline"
"child wear white . white wear ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wear ] = child newline print ( white [ wear ] ) newline"
"red stripe white . white stripe ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ stripe ] = red newline print ( white [ stripe ] ) newline"
"girl sit next . next sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = girl newline print ( next [ sit ] ) newline"
"men sit youth . men sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = youth newline print ( men [ sit ] ) newline"
"dog emerge white . white emerge ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ emerge ] = dog newline print ( white [ emerge ] ) newline"
"cap bake good . cap bake ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ bake ] = good newline print ( cap [ bake ] ) newline"
"people be hula . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = hula newline print ( people [ be ] ) newline"
"dog try out . out try ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ try ] = dog newline print ( out [ try ] ) newline"
"red shirt vacuum . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = vacuum newline print ( red [ shirt ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"individual look man . individual look ?","if entities . find ( individual ) ! = None : newline newtab entities [ individual ] [ look ] = man newline print ( individual [ look ] ) newline"
"people be way . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = way newline print ( people [ be ] ) newline"
"red shirt worker . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = worker newline print ( red [ shirt ] ) newline"
"vendor be featured . featured be ?","if entities . find ( vendor ) ! = None : newline newtab entities [ vendor ] [ be ] = vendor newline print ( featured [ be ] ) newline"
"player be older . older be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = player newline print ( older [ be ] ) newline"
"he tie handkerchief . he tie ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ tie ] = handkerchief newline print ( he [ tie ] ) newline"
"player hold one . one hold ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ hold ] = player newline print ( one [ hold ] ) newline"
"people stand next . next stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( next [ stand ] ) newline"
"people be part . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = part newline print ( people [ be ] ) newline"
"couple be many . many be ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ be ] = couple newline print ( many [ be ] ) newline"
"man appear two . man appear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ appear ] = two newline print ( man [ appear ] ) newline"
"men be four . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = four newline print ( men [ be ] ) newline"
"jeans walk next . next walk ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ walk ] = jeans newline print ( next [ walk ] ) newline"
"woman present various . various present ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ present ] = woman newline print ( various [ present ] ) newline"
"helmet ride an . helmet ride ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ ride ] = an newline print ( helmet [ ride ] ) newline"
"bike be ready . ready be ?","if entities . find ( bike ) ! = None : newline newtab entities [ bike ] [ be ] = bike newline print ( ready [ be ] ) newline"
"table fill out . out fill ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ fill ] = table newline print ( out [ fill ] ) newline"
"mascot perform dance . mascot perform ?","if entities . find ( mascot ) ! = None : newline newtab entities [ mascot ] [ perform ] = dance newline print ( mascot [ perform ] ) newline"
"men set out . out set ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ set ] = men newline print ( out [ set ] ) newline"
"dog run out . out run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( out [ run ] ) newline"
"machine call screaming . screaming call ?","if entities . find ( machine ) ! = None : newline newtab entities [ machine ] [ call ] = machine newline print ( screaming [ call ] ) newline"
"player be sleeping . player be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = sleeping newline print ( player [ be ] ) newline"
"bride hold small . small hold ?","if entities . find ( bride ) ! = None : newline newtab entities [ bride ] [ hold ] = bride newline print ( small [ hold ] ) newline"
"people be out . out be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( out [ be ] ) newline"
"two police uniform . uniform police ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ police ] = two newline print ( uniform [ police ] ) newline"
"man be miniature . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = miniature newline print ( man [ be ] ) newline"
"people gather various . various gather ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ gather ] = people newline print ( various [ gather ] ) newline"
"child wear bright . bright wear ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wear ] = child newline print ( bright [ wear ] ) newline"
"member run out . out run ?","if entities . find ( member ) ! = None : newline newtab entities [ member ] [ run ] = member newline print ( out [ run ] ) newline"
"men be sleeping . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = sleeping newline print ( men [ be ] ) newline"
"people be sleeping . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = sleeping newline print ( people [ be ] ) newline"
"red try two . red try ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ try ] = two newline print ( red [ try ] ) newline"
"people sit next . next sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( next [ sit ] ) newline"
"woman roll fresh . fresh roll ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ roll ] = woman newline print ( fresh [ roll ] ) newline"
"man sing while . man sing ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sing ] = while newline print ( man [ sing ] ) newline"
"gray shirt brush . gray shirt ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ shirt ] = brush newline print ( gray [ shirt ] ) newline"
"man busk white . white busk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ busk ] = man newline print ( white [ busk ] ) newline"
"people talk next . next talk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ talk ] = people newline print ( next [ talk ] ) newline"
"track enter it . track enter ?","if entities . find ( track ) ! = None : newline newtab entities [ track ] [ enter ] = it newline print ( track [ enter ] ) newline"
"officer ride bike . officer ride ?","if entities . find ( officer ) ! = None : newline newtab entities [ officer ] [ ride ] = bike newline print ( officer [ ride ] ) newline"
"tan be fun . tan be ?","if entities . find ( tan ) ! = None : newline newtab entities [ tan ] [ be ] = fun newline print ( tan [ be ] ) newline"
"who be hot . hot be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( hot [ be ] ) newline"
"couple walk next . next walk ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ walk ] = couple newline print ( next [ walk ] ) newline"
"surface leave some . some leave ?","if entities . find ( surface ) ! = None : newline newtab entities [ surface ] [ leave ] = surface newline print ( some [ leave ] ) newline"
"while lean out . out lean ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ lean ] = while newline print ( out [ lean ] ) newline"
"an oppose male . male oppose ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ oppose ] = an newline print ( male [ oppose ] ) newline"
"people look humanoid . people look ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ look ] = humanoid newline print ( people [ look ] ) newline"
"girl sit asian . asian sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = girl newline print ( asian [ sit ] ) newline"
"man wear bright . bright wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( bright [ wear ] ) newline"
"men work hard . hard work ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ work ] = men newline print ( hard [ work ] ) newline"
"girl be clustered . clustered be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( clustered [ be ] ) newline"
"child stand person . child stand ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ stand ] = person newline print ( child [ stand ] ) newline"
"dog be unclear . unclear be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( unclear [ be ] ) newline"
"red skateboard while . red skateboard ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ skateboard ] = while newline print ( red [ skateboard ] ) newline"
"red kayak white . white kayak ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ kayak ] = red newline print ( white [ kayak ] ) newline"
"scaffold work man . scaffold work ?","if entities . find ( scaffold ) ! = None : newline newtab entities [ scaffold ] [ work ] = man newline print ( scaffold [ work ] ) newline"
"scout be two . scout be ?","if entities . find ( scout ) ! = None : newline newtab entities [ scout ] [ be ] = two newline print ( scout [ be ] ) newline"
"blouse examine white . white examine ?","if entities . find ( blouse ) ! = None : newline newtab entities [ blouse ] [ examine ] = blouse newline print ( white [ examine ] ) newline"
"sunglasses be sleeping . sunglasses be ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ be ] = sleeping newline print ( sunglasses [ be ] ) newline"
"chair look happy . happy look ?","if entities . find ( chair ) ! = None : newline newtab entities [ chair ] [ look ] = chair newline print ( happy [ look ] ) newline"
"girl sit next . next sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = girl newline print ( next [ sit ] ) newline"
"toy be airborne . airborne be ?","if entities . find ( toy ) ! = None : newline newtab entities [ toy ] [ be ] = toy newline print ( airborne [ be ] ) newline"
"woman be teaching . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = teaching newline print ( woman [ be ] ) newline"
"family decide two . family decide ?","if entities . find ( family ) ! = None : newline newtab entities [ family ] [ decide ] = two newline print ( family [ decide ] ) newline"
"pajama be girl . pajama be ?","if entities . find ( pajama ) ! = None : newline newtab entities [ pajama ] [ be ] = girl newline print ( pajama [ be ] ) newline"
"transformer shirt while . transformer shirt ?","if entities . find ( transformer ) ! = None : newline newtab entities [ transformer ] [ shirt ] = while newline print ( transformer [ shirt ] ) newline"
"people stand face . people stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = face newline print ( people [ stand ] ) newline"
"basketball shoot white . white shoot ?","if entities . find ( basketball ) ! = None : newline newtab entities [ basketball ] [ shoot ] = basketball newline print ( white [ shoot ] ) newline"
"player be child . player be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = child newline print ( player [ be ] ) newline"
"men look one . one look ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ look ] = men newline print ( one [ look ] ) newline"
"necklace be airborne . airborne be ?","if entities . find ( necklace ) ! = None : newline newtab entities [ necklace ] [ be ] = necklace newline print ( airborne [ be ] ) newline"
"man catch right . right catch ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ catch ] = man newline print ( right [ catch ] ) newline"
"while make funny . funny make ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ make ] = while newline print ( funny [ make ] ) newline"
"someone tend white . white tend ?","if entities . find ( someone ) ! = None : newline newtab entities [ someone ] [ tend ] = someone newline print ( white [ tend ] ) newline"
"man skateboard next . next skateboard ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ skateboard ] = man newline print ( next [ skateboard ] ) newline"
"third put out . out put ?","if entities . find ( third ) ! = None : newline newtab entities [ third ] [ put ] = third newline print ( out [ put ] ) newline"
"girl look out . out look ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ look ] = girl newline print ( out [ look ] ) newline"
"worker be sad . sad be ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ be ] = worker newline print ( sad [ be ] ) newline"
"men sit man . men sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = man newline print ( men [ sit ] ) newline"
"hair sit or . hair sit ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ sit ] = or newline print ( hair [ sit ] ) newline"
"dancer pose next . next pose ?","if entities . find ( dancer ) ! = None : newline newtab entities [ dancer ] [ pose ] = dancer newline print ( next [ pose ] ) newline"
"couple wear an . couple wear ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ wear ] = an newline print ( couple [ wear ] ) newline"
"man pull another . another pull ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ pull ] = man newline print ( another [ pull ] ) newline"
"man walk alone . alone walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = man newline print ( alone [ walk ] ) newline"
"event hold an . event hold ?","if entities . find ( event ) ! = None : newline newtab entities [ event ] [ hold ] = an newline print ( event [ hold ] ) newline"
"woman crouch man . woman crouch ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ crouch ] = man newline print ( woman [ crouch ] ) newline"
"child gather next . next gather ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ gather ] = child newline print ( next [ gather ] ) newline"
"glass smile next . next smile ?","if entities . find ( glass ) ! = None : newline newtab entities [ glass ] [ smile ] = glass newline print ( next [ smile ] ) newline"
"people spend time . people spend ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ spend ] = time newline print ( people [ spend ] ) newline"
"text message white . white message ?","if entities . find ( text ) ! = None : newline newtab entities [ text ] [ message ] = text newline print ( white [ message ] ) newline"
"boy hold red . boy hold ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ hold ] = red newline print ( boy [ hold ] ) newline"
"man wear red . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = red newline print ( man [ wear ] ) newline"
"road divide white . white divide ?","if entities . find ( road ) ! = None : newline newtab entities [ road ] [ divide ] = road newline print ( white [ divide ] ) newline"
"man wear orange . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = orange newline print ( man [ wear ] ) newline"
"biker ride an . biker ride ?","if entities . find ( biker ) ! = None : newline newtab entities [ biker ] [ ride ] = an newline print ( biker [ ride ] ) newline"
"pine tree branch . pine tree ?","if entities . find ( pine ) ! = None : newline newtab entities [ pine ] [ tree ] = branch newline print ( pine [ tree ] ) newline"
"horse be laughing . laughing be ?","if entities . find ( horse ) ! = None : newline newtab entities [ horse ] [ be ] = horse newline print ( laughing [ be ] ) newline"
"people sit next . next sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( next [ sit ] ) newline"
"restaurant eat apple . restaurant eat ?","if entities . find ( restaurant ) ! = None : newline newtab entities [ restaurant ] [ eat ] = apple newline print ( restaurant [ eat ] ) newline"
"green shoe staring . staring shoe ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shoe ] = green newline print ( staring [ shoe ] ) newline"
"youth stand ready . ready stand ?","if entities . find ( youth ) ! = None : newline newtab entities [ youth ] [ stand ] = youth newline print ( ready [ stand ] ) newline"
"men wear white . white wear ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ wear ] = men newline print ( white [ wear ] ) newline"
"glove be both . both be ?","if entities . find ( glove ) ! = None : newline newtab entities [ glove ] [ be ] = glove newline print ( both [ be ] ) newline"
"policeman stand next . next stand ?","if entities . find ( policeman ) ! = None : newline newtab entities [ policeman ] [ stand ] = policeman newline print ( next [ stand ] ) newline"
"child be way . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = way newline print ( child [ be ] ) newline"
"woman dress dance . woman dress ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dress ] = dance newline print ( woman [ dress ] ) newline"
"daughter pose next . next pose ?","if entities . find ( daughter ) ! = None : newline newtab entities [ daughter ] [ pose ] = daughter newline print ( next [ pose ] ) newline"
"men be member . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = member newline print ( men [ be ] ) newline"
"people gather vegetable . people gather ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ gather ] = vegetable newline print ( people [ gather ] ) newline"
"couple relax line . couple relax ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ relax ] = line newline print ( couple [ relax ] ) newline"
"orange dress all . all dress ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ dress ] = orange newline print ( all [ dress ] ) newline"
"record shop late . late shop ?","if entities . find ( record ) ! = None : newline newtab entities [ record ] [ shop ] = record newline print ( late [ shop ] ) newline"
"barber shop bag . barber shop ?","if entities . find ( barber ) ! = None : newline newtab entities [ barber ] [ shop ] = bag newline print ( barber [ shop ] ) newline"
"dog wear earphone . dog wear ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ wear ] = earphone newline print ( dog [ wear ] ) newline"
"wave surf high . high surf ?","if entities . find ( wave ) ! = None : newline newtab entities [ wave ] [ surf ] = wave newline print ( high [ surf ] ) newline"
"man prepare many . many prepare ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ prepare ] = man newline print ( many [ prepare ] ) newline"
"men be several . several be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( several [ be ] ) newline"
"hair stand chest . hair stand ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ stand ] = chest newline print ( hair [ stand ] ) newline"
"woman wear an . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = an newline print ( woman [ wear ] ) newline"
"monk robe while . monk robe ?","if entities . find ( monk ) ! = None : newline newtab entities [ monk ] [ robe ] = while newline print ( monk [ robe ] ) newline"
"while hold some . some hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = while newline print ( some [ hold ] ) newline"
"girl sit or . girl sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = or newline print ( girl [ sit ] ) newline"
"while carry many . many carry ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ carry ] = while newline print ( many [ carry ] ) newline"
"guy stop black . black stop ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ stop ] = guy newline print ( black [ stop ] ) newline"
"people be beer . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = beer newline print ( people [ be ] ) newline"
"businessman wear red . businessman wear ?","if entities . find ( businessman ) ! = None : newline newtab entities [ businessman ] [ wear ] = red newline print ( businessman [ wear ] ) newline"
"skier wear red . skier wear ?","if entities . find ( skier ) ! = None : newline newtab entities [ skier ] [ wear ] = red newline print ( skier [ wear ] ) newline"
"man accompany two . man accompany ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ accompany ] = two newline print ( man [ accompany ] ) newline"
"ring toss plastic . plastic toss ?","if entities . find ( ring ) ! = None : newline newtab entities [ ring ] [ toss ] = ring newline print ( plastic [ toss ] ) newline"
"he pull two . he pull ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ pull ] = two newline print ( he [ pull ] ) newline"
"bus hit white . white hit ?","if entities . find ( bus ) ! = None : newline newtab entities [ bus ] [ hit ] = bus newline print ( white [ hit ] ) newline"
"jacket hold out . out hold ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ hold ] = jacket newline print ( out [ hold ] ) newline"
"man work environment . man work ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ work ] = environment newline print ( man [ work ] ) newline"
"girl be out . out be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( out [ be ] ) newline"
"girl play tennis . girl play ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ play ] = tennis newline print ( girl [ play ] ) newline"
"four copy machine . four copy ?","if entities . find ( four ) ! = None : newline newtab entities [ four ] [ copy ] = machine newline print ( four [ copy ] ) newline"
"band perform while . band perform ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ perform ] = while newline print ( band [ perform ] ) newline"
"teammate be adjacent . adjacent be ?","if entities . find ( teammate ) ! = None : newline newtab entities [ teammate ] [ be ] = teammate newline print ( adjacent [ be ] ) newline"
"wall take great . great take ?","if entities . find ( wall ) ! = None : newline newtab entities [ wall ] [ take ] = wall newline print ( great [ take ] ) newline"
"child wear an . child wear ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wear ] = an newline print ( child [ wear ] ) newline"
"girl examine white . white examine ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ examine ] = girl newline print ( white [ examine ] ) newline"
"man be visible . visible be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( visible [ be ] ) newline"
"rock overlook land . rock overlook ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ overlook ] = land newline print ( rock [ overlook ] ) newline"
"man be teaching . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = teaching newline print ( man [ be ] ) newline"
"audience watch other . other watch ?","if entities . find ( audience ) ! = None : newline newtab entities [ audience ] [ watch ] = audience newline print ( other [ watch ] ) newline"
"boy be rock . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = rock newline print ( boy [ be ] ) newline"
"man be several . several be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( several [ be ] ) newline"
"people crowd outdoor . outdoor crowd ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ crowd ] = people newline print ( outdoor [ crowd ] ) newline"
"men perform martial . martial perform ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ perform ] = men newline print ( martial [ perform ] ) newline"
"helmet jump high . high jump ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ jump ] = helmet newline print ( high [ jump ] ) newline"
"head bow white . white bow ?","if entities . find ( head ) ! = None : newline newtab entities [ head ] [ bow ] = head newline print ( white [ bow ] ) newline"
"people talk while . people talk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ talk ] = while newline print ( people [ talk ] ) newline"
"bike jump backward . backward jump ?","if entities . find ( bike ) ! = None : newline newtab entities [ bike ] [ jump ] = bike newline print ( backward [ jump ] ) newline"
"dog play dead . dead play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = dog newline print ( dead [ play ] ) newline"
"skateboarder be waist . skateboarder be ?","if entities . find ( skateboarder ) ! = None : newline newtab entities [ skateboarder ] [ be ] = waist newline print ( skateboarder [ be ] ) newline"
"man wear navy . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = navy newline print ( man [ wear ] ) newline"
"jeans be india . jeans be ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ be ] = india newline print ( jeans [ be ] ) newline"
"woman be fun . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = fun newline print ( woman [ be ] ) newline"
"woman be next . next be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( next [ be ] ) newline"
"woman be laughing . laughing be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( laughing [ be ] ) newline"
"woman be asleep . asleep be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( asleep [ be ] ) newline"
"table set sun . table set ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ set ] = sun newline print ( table [ set ] ) newline"
"men be sleeping . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = sleeping newline print ( men [ be ] ) newline"
"man pose while . man pose ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ pose ] = while newline print ( man [ pose ] ) newline"
"child play musical . musical play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = child newline print ( musical [ play ] ) newline"
"man be young . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = young newline print ( man [ be ] ) newline"
"men act out . out act ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ act ] = men newline print ( out [ act ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"plaid shirt clean . clean shirt ?","if entities . find ( plaid ) ! = None : newline newtab entities [ plaid ] [ shirt ] = plaid newline print ( clean [ shirt ] ) newline"
"while hold an . while hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = an newline print ( while [ hold ] ) newline"
"people be number . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = number newline print ( people [ be ] ) newline"
"orange collar two . orange collar ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ collar ] = two newline print ( orange [ collar ] ) newline"
"man create art . man create ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ create ] = art newline print ( man [ create ] ) newline"
"dog be visible . visible be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( visible [ be ] ) newline"
"adult sit alone . alone sit ?","if entities . find ( adult ) ! = None : newline newtab entities [ adult ] [ sit ] = adult newline print ( alone [ sit ] ) newline"
"makeup apply black . black apply ?","if entities . find ( makeup ) ! = None : newline newtab entities [ makeup ] [ apply ] = makeup newline print ( black [ apply ] ) newline"
"dog jump while . dog jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = while newline print ( dog [ jump ] ) newline"
"headscarf stand next . next stand ?","if entities . find ( headscarf ) ! = None : newline newtab entities [ headscarf ] [ stand ] = headscarf newline print ( next [ stand ] ) newline"
"man be turing . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = turing newline print ( man [ be ] ) newline"
"outfit be swinging . swinging be ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ be ] = outfit newline print ( swinging [ be ] ) newline"
"cowboy hat out . out hat ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ hat ] = cowboy newline print ( out [ hat ] ) newline"
"sign be key . sign be ?","if entities . find ( sign ) ! = None : newline newtab entities [ sign ] [ be ] = key newline print ( sign [ be ] ) newline"
"child walk while . child walk ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ walk ] = while newline print ( child [ walk ] ) newline"
"orange work site . orange work ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ work ] = site newline print ( orange [ work ] ) newline"
"while sit alone . alone sit ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ sit ] = while newline print ( alone [ sit ] ) newline"
"woman retrieve white . white retrieve ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ retrieve ] = woman newline print ( white [ retrieve ] ) newline"
"woman stand next . next stand ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ stand ] = woman newline print ( next [ stand ] ) newline"
"girl wear van . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = van newline print ( girl [ wear ] ) newline"
"man wear sunglasses . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = sunglasses newline print ( man [ wear ] ) newline"
"guard rail while . guard rail ?","if entities . find ( guard ) ! = None : newline newtab entities [ guard ] [ rail ] = while newline print ( guard [ rail ] ) newline"
"hula hoop white . white hoop ?","if entities . find ( hula ) ! = None : newline newtab entities [ hula ] [ hoop ] = hula newline print ( white [ hoop ] ) newline"
"woman wear badge . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = badge newline print ( woman [ wear ] ) newline"
"lizard be next . next be ?","if entities . find ( lizard ) ! = None : newline newtab entities [ lizard ] [ be ] = lizard newline print ( next [ be ] ) newline"
"red hat while . red hat ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ hat ] = while newline print ( red [ hat ] ) newline"
"an injure lady . an injure ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ injure ] = lady newline print ( an [ injure ] ) newline"
"girl run fast . fast run ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ run ] = girl newline print ( fast [ run ] ) newline"
"kid hold instrument . kid hold ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ hold ] = instrument newline print ( kid [ hold ] ) newline"
"barber shop next . next shop ?","if entities . find ( barber ) ! = None : newline newtab entities [ barber ] [ shop ] = barber newline print ( next [ shop ] ) newline"
"green kayak rider . green kayak ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ kayak ] = rider newline print ( green [ kayak ] ) newline"
"man wear an . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = an newline print ( man [ wear ] ) newline"
"sweater adjust music . sweater adjust ?","if entities . find ( sweater ) ! = None : newline newtab entities [ sweater ] [ adjust ] = music newline print ( sweater [ adjust ] ) newline"
"race pass blue . blue pass ?","if entities . find ( race ) ! = None : newline newtab entities [ race ] [ pass ] = race newline print ( blue [ pass ] ) newline"
"man watch traffic . man watch ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ watch ] = traffic newline print ( man [ watch ] ) newline"
"man dress all . all dress ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ dress ] = man newline print ( all [ dress ] ) newline"
"child be baby . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = baby newline print ( child [ be ] ) newline"
"girl be an . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = an newline print ( girl [ be ] ) newline"
"snow cover another . another cover ?","if entities . find ( snow ) ! = None : newline newtab entities [ snow ] [ cover ] = snow newline print ( another [ cover ] ) newline"
"green paint graffiti . green paint ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ paint ] = graffiti newline print ( green [ paint ] ) newline"
"dog be many . many be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( many [ be ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"id decorate blue . blue decorate ?","if entities . find ( id ) ! = None : newline newtab entities [ id ] [ decorate ] = id newline print ( blue [ decorate ] ) newline"
"reporter wear similar . similar wear ?","if entities . find ( reporter ) ! = None : newline newtab entities [ reporter ] [ wear ] = reporter newline print ( similar [ wear ] ) newline"
"people be two . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = two newline print ( people [ be ] ) newline"
"child color all . all color ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ color ] = child newline print ( all [ color ] ) newline"
"outfit hang upside . outfit hang ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ hang ] = upside newline print ( outfit [ hang ] ) newline"
"boy ride alone . alone ride ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ ride ] = boy newline print ( alone [ ride ] ) newline"
"couple sit next . next sit ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ sit ] = couple newline print ( next [ sit ] ) newline"
"man be next . next be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( next [ be ] ) newline"
"jacket be three . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = three newline print ( jacket [ be ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"object reflect white . white reflect ?","if entities . find ( object ) ! = None : newline newtab entities [ object ] [ reflect ] = object newline print ( white [ reflect ] ) newline"
"lady receive some . some receive ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ receive ] = lady newline print ( some [ receive ] ) newline"
"people be colorful . colorful be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( colorful [ be ] ) newline"
"man wear red . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = red newline print ( man [ wear ] ) newline"
"toddler help guide . toddler help ?","if entities . find ( toddler ) ! = None : newline newtab entities [ toddler ] [ help ] = guide newline print ( toddler [ help ] ) newline"
"woman be wind . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = wind newline print ( woman [ be ] ) newline"
"table discuss some . some discuss ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ discuss ] = table newline print ( some [ discuss ] ) newline"
"mother cook some . some cook ?","if entities . find ( mother ) ! = None : newline newtab entities [ mother ] [ cook ] = mother newline print ( some [ cook ] ) newline"
"gray be sleeping . gray be ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ be ] = sleeping newline print ( gray [ be ] ) newline"
"bagpiper walk two . bagpiper walk ?","if entities . find ( bagpiper ) ! = None : newline newtab entities [ bagpiper ] [ walk ] = two newline print ( bagpiper [ walk ] ) newline"
"woman be swinging . swinging be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( swinging [ be ] ) newline"
"child pass blue . blue pass ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ pass ] = child newline print ( blue [ pass ] ) newline"
"adult skateboard trick . adult skateboard ?","if entities . find ( adult ) ! = None : newline newtab entities [ adult ] [ skateboard ] = trick newline print ( adult [ skateboard ] ) newline"
"umbrella stand next . next stand ?","if entities . find ( umbrella ) ! = None : newline newtab entities [ umbrella ] [ stand ] = umbrella newline print ( next [ stand ] ) newline"
"woman relax next . next relax ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ relax ] = woman newline print ( next [ relax ] ) newline"
"instructor show multiple . multiple show ?","if entities . find ( instructor ) ! = None : newline newtab entities [ instructor ] [ show ] = instructor newline print ( multiple [ show ] ) newline"
"woman play chess . woman play ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ play ] = chess newline print ( woman [ play ] ) newline"
"family be wooden . wooden be ?","if entities . find ( family ) ! = None : newline newtab entities [ family ] [ be ] = family newline print ( wooden [ be ] ) newline"
"man walk little . little walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = man newline print ( little [ walk ] ) newline"
"man be all . all be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( all [ be ] ) newline"
"man wear dark . dark wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( dark [ wear ] ) newline"
"metal walk path . metal walk ?","if entities . find ( metal ) ! = None : newline newtab entities [ metal ] [ walk ] = path newline print ( metal [ walk ] ) newline"
"brown shirt next . next shirt ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ shirt ] = brown newline print ( next [ shirt ] ) newline"
"car be sleeping . car be ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ be ] = sleeping newline print ( car [ be ] ) newline"
"green grass next . next grass ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ grass ] = green newline print ( next [ grass ] ) newline"
"people look young . people look ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ look ] = young newline print ( people [ look ] ) newline"
"head cover another . another cover ?","if entities . find ( head ) ! = None : newline newtab entities [ head ] [ cover ] = head newline print ( another [ cover ] ) newline"
"individual climb out . out climb ?","if entities . find ( individual ) ! = None : newline newtab entities [ individual ] [ climb ] = individual newline print ( out [ climb ] ) newline"
"woman dress child . woman dress ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dress ] = child newline print ( woman [ dress ] ) newline"
"woman be unexcited . unexcited be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( unexcited [ be ] ) newline"
"green ride an . green ride ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ ride ] = an newline print ( green [ ride ] ) newline"
"gear clear blue . blue clear ?","if entities . find ( gear ) ! = None : newline newtab entities [ gear ] [ clear ] = gear newline print ( blue [ clear ] ) newline"
"child stand next . next stand ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ stand ] = child newline print ( next [ stand ] ) newline"
"dog run dog . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( dog [ run ] ) newline"
"woman wear blue . blue wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( blue [ wear ] ) newline"
"boy be ready . ready be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( ready [ be ] ) newline"
"woman ride bike . woman ride ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ ride ] = bike newline print ( woman [ ride ] ) newline"
"man entertain some . some entertain ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ entertain ] = man newline print ( some [ entertain ] ) newline"
"woman be asleep . asleep be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( asleep [ be ] ) newline"
"blouse sit alone . alone sit ?","if entities . find ( blouse ) ! = None : newline newtab entities [ blouse ] [ sit ] = blouse newline print ( alone [ sit ] ) newline"
"fun brush ice . fun brush ?","if entities . find ( fun ) ! = None : newline newtab entities [ fun ] [ brush ] = ice newline print ( fun [ brush ] ) newline"
"onlooker gather resource . onlooker gather ?","if entities . find ( onlooker ) ! = None : newline newtab entities [ onlooker ] [ gather ] = resource newline print ( onlooker [ gather ] ) newline"
"bungee jump log . bungee jump ?","if entities . find ( bungee ) ! = None : newline newtab entities [ bungee ] [ jump ] = log newline print ( bungee [ jump ] ) newline"
"while wear sunglasses . while wear ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ wear ] = sunglasses newline print ( while [ wear ] ) newline"
"men talk next . next talk ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ talk ] = men newline print ( next [ talk ] ) newline"
"shoulder use straw . shoulder use ?","if entities . find ( shoulder ) ! = None : newline newtab entities [ shoulder ] [ use ] = straw newline print ( shoulder [ use ] ) newline"
"sun sit while . sun sit ?","if entities . find ( sun ) ! = None : newline newtab entities [ sun ] [ sit ] = while newline print ( sun [ sit ] ) newline"
"orange clothe next . next clothe ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ clothe ] = orange newline print ( next [ clothe ] ) newline"
"couple sit next . next sit ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ sit ] = couple newline print ( next [ sit ] ) newline"
"someone work out . out work ?","if entities . find ( someone ) ! = None : newline newtab entities [ someone ] [ work ] = someone newline print ( out [ work ] ) newline"
"rock climb out . out climb ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ climb ] = rock newline print ( out [ climb ] ) newline"
"woman gather next . next gather ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ gather ] = woman newline print ( next [ gather ] ) newline"
"tricycle be an . tricycle be ?","if entities . find ( tricycle ) ! = None : newline newtab entities [ tricycle ] [ be ] = an newline print ( tricycle [ be ] ) newline"
"person hang upside . person hang ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ hang ] = upside newline print ( person [ hang ] ) newline"
"graffiti cover another . another cover ?","if entities . find ( graffiti ) ! = None : newline newtab entities [ graffiti ] [ cover ] = graffiti newline print ( another [ cover ] ) newline"
"girl sing while . girl sing ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sing ] = while newline print ( girl [ sing ] ) newline"
"sign say sweden . sign say ?","if entities . find ( sign ) ! = None : newline newtab entities [ sign ] [ say ] = sweden newline print ( sign [ say ] ) newline"
"boy splash another . another splash ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ splash ] = boy newline print ( another [ splash ] ) newline"
"cotton candy while . cotton candy ?","if entities . find ( cotton ) ! = None : newline newtab entities [ cotton ] [ candy ] = while newline print ( cotton [ candy ] ) newline"
"man be laughing . laughing be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( laughing [ be ] ) newline"
"men drink some . some drink ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ drink ] = men newline print ( some [ drink ] ) newline"
"guy play volleyball . guy play ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ play ] = volleyball newline print ( guy [ play ] ) newline"
"people be asleep . asleep be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( asleep [ be ] ) newline"
"sock walk two . sock walk ?","if entities . find ( sock ) ! = None : newline newtab entities [ sock ] [ walk ] = two newline print ( sock [ walk ] ) newline"
"men dress all . all dress ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ dress ] = men newline print ( all [ dress ] ) newline"
"man tickle white . white tickle ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ tickle ] = man newline print ( white [ tickle ] ) newline"
"man be laughing . laughing be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( laughing [ be ] ) newline"
"three finger while . three finger ?","if entities . find ( three ) ! = None : newline newtab entities [ three ] [ finger ] = while newline print ( three [ finger ] ) newline"
"bicyclist approach wave . bicyclist approach ?","if entities . find ( bicyclist ) ! = None : newline newtab entities [ bicyclist ] [ approach ] = wave newline print ( bicyclist [ approach ] ) newline"
"camera walk next . next walk ?","if entities . find ( camera ) ! = None : newline newtab entities [ camera ] [ walk ] = camera newline print ( next [ walk ] ) newline"
"men be dirt . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = dirt newline print ( men [ be ] ) newline"
"woman be all . all be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( all [ be ] ) newline"
"son read while . son read ?","if entities . find ( son ) ! = None : newline newtab entities [ son ] [ read ] = while newline print ( son [ read ] ) newline"
"red push an . red push ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ push ] = an newline print ( red [ push ] ) newline"
"player be rod . player be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = rod newline print ( player [ be ] ) newline"
"bathroom brush white . white brush ?","if entities . find ( bathroom ) ! = None : newline newtab entities [ bathroom ] [ brush ] = bathroom newline print ( white [ brush ] ) newline"
"toddler be staged . staged be ?","if entities . find ( toddler ) ! = None : newline newtab entities [ toddler ] [ be ] = toddler newline print ( staged [ be ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"playground swing broom . playground swing ?","if entities . find ( playground ) ! = None : newline newtab entities [ playground ] [ swing ] = broom newline print ( playground [ swing ] ) newline"
"woman ride bike . woman ride ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ ride ] = bike newline print ( woman [ ride ] ) newline"
"policeman be many . many be ?","if entities . find ( policeman ) ! = None : newline newtab entities [ policeman ] [ be ] = policeman newline print ( many [ be ] ) newline"
"woman talk while . woman talk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ talk ] = while newline print ( woman [ talk ] ) newline"
"racer zoom lense . racer zoom ?","if entities . find ( racer ) ! = None : newline newtab entities [ racer ] [ zoom ] = lense newline print ( racer [ zoom ] ) newline"
"student be metalworking . student be ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ be ] = metalworking newline print ( student [ be ] ) newline"
"child sit next . next sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = child newline print ( next [ sit ] ) newline"
"who be unhappy . unhappy be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( unhappy [ be ] ) newline"
"performer ride horse . performer ride ?","if entities . find ( performer ) ! = None : newline newtab entities [ performer ] [ ride ] = horse newline print ( performer [ ride ] ) newline"
"men lie half . half lie ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ lie ] = men newline print ( half [ lie ] ) newline"
"he walk next . next walk ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ walk ] = he newline print ( next [ walk ] ) newline"
"bag run next . next run ?","if entities . find ( bag ) ! = None : newline newtab entities [ bag ] [ run ] = bag newline print ( next [ run ] ) newline"
"dog play next . next play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = dog newline print ( next [ play ] ) newline"
"audience be painted . painted be ?","if entities . find ( audience ) ! = None : newline newtab entities [ audience ] [ be ] = audience newline print ( painted [ be ] ) newline"
"boy be staring . staring be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( staring [ be ] ) newline"
"alleyway get one . one get ?","if entities . find ( alleyway ) ! = None : newline newtab entities [ alleyway ] [ get ] = alleyway newline print ( one [ get ] ) newline"
"couple dance next . next dance ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ dance ] = couple newline print ( next [ dance ] ) newline"
"morse be asleep . asleep be ?","if entities . find ( morse ) ! = None : newline newtab entities [ morse ] [ be ] = morse newline print ( asleep [ be ] ) newline"
"sunglasses be one . one be ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ be ] = sunglasses newline print ( one [ be ] ) newline"
"man be group . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = group newline print ( man [ be ] ) newline"
"sun set while . sun set ?","if entities . find ( sun ) ! = None : newline newtab entities [ sun ] [ set ] = while newline print ( sun [ set ] ) newline"
"girl hold out . out hold ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ hold ] = girl newline print ( out [ hold ] ) newline"
"machine call la . machine call ?","if entities . find ( machine ) ! = None : newline newtab entities [ machine ] [ call ] = la newline print ( machine [ call ] ) newline"
"red vest next . next vest ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ vest ] = red newline print ( next [ vest ] ) newline"
"men wade white . white wade ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ wade ] = men newline print ( white [ wade ] ) newline"
"youth wait area . youth wait ?","if entities . find ( youth ) ! = None : newline newtab entities [ youth ] [ wait ] = area newline print ( youth [ wait ] ) newline"
"man be staring . staring be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( staring [ be ] ) newline"
"record shop next . next shop ?","if entities . find ( record ) ! = None : newline newtab entities [ record ] [ shop ] = record newline print ( next [ shop ] ) newline"
"dog be attentive . attentive be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( attentive [ be ] ) newline"
"green plant life . green plant ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ plant ] = life newline print ( green [ plant ] ) newline"
"sneaker talk next . next talk ?","if entities . find ( sneaker ) ! = None : newline newtab entities [ sneaker ] [ talk ] = sneaker newline print ( next [ talk ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"man be several . several be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( several [ be ] ) newline"
"dog race uniform . uniform race ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ race ] = dog newline print ( uniform [ race ] ) newline"
"girl wear cowboy . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = cowboy newline print ( girl [ wear ] ) newline"
"girl be abdomen . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = abdomen newline print ( girl [ be ] ) newline"
"kid play instrument . kid play ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ play ] = instrument newline print ( kid [ play ] ) newline"
"man be laughing . laughing be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( laughing [ be ] ) newline"
"woman be sleeping . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sleeping newline print ( woman [ be ] ) newline"
"man lie next . next lie ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ lie ] = man newline print ( next [ lie ] ) newline"
"trunks fly high . high fly ?","if entities . find ( trunks ) ! = None : newline newtab entities [ trunks ] [ fly ] = trunks newline print ( high [ fly ] ) newline"
"green hat smoke . green hat ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ hat ] = smoke newline print ( green [ hat ] ) newline"
"girl be sleeping . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = sleeping newline print ( girl [ be ] ) newline"
"olympics be asleep . asleep be ?","if entities . find ( olympics ) ! = None : newline newtab entities [ olympics ] [ be ] = olympics newline print ( asleep [ be ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"boy be next . next be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( next [ be ] ) newline"
"dog be swinging . swinging be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( swinging [ be ] ) newline"
"child read newspaper . child read ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ read ] = newspaper newline print ( child [ read ] ) newline"
"men be airborne . airborne be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( airborne [ be ] ) newline"
"girl be three . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = three newline print ( girl [ be ] ) newline"
"dog lay brick . dog lay ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ lay ] = brick newline print ( dog [ lay ] ) newline"
"hair hold multicolored . multicolored hold ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ hold ] = hair newline print ( multicolored [ hold ] ) newline"
"men be lady . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = lady newline print ( men [ be ] ) newline"
"snow have fun . snow have ?","if entities . find ( snow ) ! = None : newline newtab entities [ snow ] [ have ] = fun newline print ( snow [ have ] ) newline"
"girl be all . all be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( all [ be ] ) newline"
"couple be writer . couple be ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ be ] = writer newline print ( couple [ be ] ) newline"
"water come out . out come ?","if entities . find ( water ) ! = None : newline newtab entities [ water ] [ come ] = water newline print ( out [ come ] ) newline"
"family be next . next be ?","if entities . find ( family ) ! = None : newline newtab entities [ family ] [ be ] = family newline print ( next [ be ] ) newline"
"icicle be sleeping . icicle be ?","if entities . find ( icicle ) ! = None : newline newtab entities [ icicle ] [ be ] = sleeping newline print ( icicle [ be ] ) newline"
"player jump while . player jump ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ jump ] = while newline print ( player [ jump ] ) newline"
"men be nude . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = nude newline print ( men [ be ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"bird sit while . bird sit ?","if entities . find ( bird ) ! = None : newline newtab entities [ bird ] [ sit ] = while newline print ( bird [ sit ] ) newline"
"jacket perform karate . jacket perform ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ perform ] = karate newline print ( jacket [ perform ] ) newline"
"boardwalk be people . boardwalk be ?","if entities . find ( boardwalk ) ! = None : newline newtab entities [ boardwalk ] [ be ] = people newline print ( boardwalk [ be ] ) newline"
"background wear black . black wear ?","if entities . find ( background ) ! = None : newline newtab entities [ background ] [ wear ] = background newline print ( black [ wear ] ) newline"
"woman visit some . some visit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ visit ] = woman newline print ( some [ visit ] ) newline"
"red be attentive . attentive be ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ be ] = red newline print ( attentive [ be ] ) newline"
"dog be parasailing . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = parasailing newline print ( dog [ be ] ) newline"
"plaid shirt athlete . plaid shirt ?","if entities . find ( plaid ) ! = None : newline newtab entities [ plaid ] [ shirt ] = athlete newline print ( plaid [ shirt ] ) newline"
"boy wear an . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = an newline print ( boy [ wear ] ) newline"
"dog run next . next run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( next [ run ] ) newline"
"action shoot white . white shoot ?","if entities . find ( action ) ! = None : newline newtab entities [ action ] [ shoot ] = action newline print ( white [ shoot ] ) newline"
"men be pole . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = pole newline print ( men [ be ] ) newline"
"red hat while . red hat ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ hat ] = while newline print ( red [ hat ] ) newline"
"audience sit next . next sit ?","if entities . find ( audience ) ! = None : newline newtab entities [ audience ] [ sit ] = audience newline print ( next [ sit ] ) newline"
"boy kick an . boy kick ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ kick ] = an newline print ( boy [ kick ] ) newline"
"chef be lady . chef be ?","if entities . find ( chef ) ! = None : newline newtab entities [ chef ] [ be ] = lady newline print ( chef [ be ] ) newline"
"girl stand while . girl stand ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ stand ] = while newline print ( girl [ stand ] ) newline"
"woman crouch man . woman crouch ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ crouch ] = man newline print ( woman [ crouch ] ) newline"
"girl sit while . girl sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = while newline print ( girl [ sit ] ) newline"
"men sit next . next sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = men newline print ( next [ sit ] ) newline"
"dog leap out . out leap ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ leap ] = dog newline print ( out [ leap ] ) newline"
"man be airline . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = airline newline print ( man [ be ] ) newline"
"person wear orange . person wear ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ wear ] = orange newline print ( person [ wear ] ) newline"
"girl swing white . white swing ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ swing ] = girl newline print ( white [ swing ] ) newline"
"worker repair men . worker repair ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ repair ] = men newline print ( worker [ repair ] ) newline"
"green shirt swinging . swinging shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = green newline print ( swinging [ shirt ] ) newline"
"people wait next . next wait ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ wait ] = people newline print ( next [ wait ] ) newline"
"dog walk out . out walk ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ walk ] = dog newline print ( out [ walk ] ) newline"
"band be yawning . yawning be ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ be ] = band newline print ( yawning [ be ] ) newline"
"spectator be out . out be ?","if entities . find ( spectator ) ! = None : newline newtab entities [ spectator ] [ be ] = spectator newline print ( out [ be ] ) newline"
"red be two . red be ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ be ] = two newline print ( red [ be ] ) newline"
"child play electric . electric play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = child newline print ( electric [ play ] ) newline"
"man climb all . all climb ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ climb ] = man newline print ( all [ climb ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"people be ice . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = ice newline print ( people [ be ] ) newline"
"girl sit while . girl sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = while newline print ( girl [ sit ] ) newline"
"woman wear yellow . yellow wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( yellow [ wear ] ) newline"
"guy hold two . guy hold ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ hold ] = two newline print ( guy [ hold ] ) newline"
"table work gear . table work ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ work ] = gear newline print ( table [ work ] ) newline"
"dancer pose while . dancer pose ?","if entities . find ( dancer ) ! = None : newline newtab entities [ dancer ] [ pose ] = while newline print ( dancer [ pose ] ) newline"
"artist demonstrate life . artist demonstrate ?","if entities . find ( artist ) ! = None : newline newtab entities [ artist ] [ demonstrate ] = life newline print ( artist [ demonstrate ] ) newline"
"woman stand side . woman stand ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ stand ] = side newline print ( woman [ stand ] ) newline"
"an embellish white . white embellish ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ embellish ] = an newline print ( white [ embellish ] ) newline"
"city square contraption . city square ?","if entities . find ( city ) ! = None : newline newtab entities [ city ] [ square ] = contraption newline print ( city [ square ] ) newline"
"spectator watch an . spectator watch ?","if entities . find ( spectator ) ! = None : newline newtab entities [ spectator ] [ watch ] = an newline print ( spectator [ watch ] ) newline"
"man be people . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = people newline print ( man [ be ] ) newline"
"man be many . many be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( many [ be ] ) newline"
"apron be out . out be ?","if entities . find ( apron ) ! = None : newline newtab entities [ apron ] [ be ] = apron newline print ( out [ be ] ) newline"
"girl pose next . next pose ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ pose ] = girl newline print ( next [ pose ] ) newline"
"tights sit side . tights sit ?","if entities . find ( tights ) ! = None : newline newtab entities [ tights ] [ sit ] = side newline print ( tights [ sit ] ) newline"
"girl be two . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = two newline print ( girl [ be ] ) newline"
"people write white . white write ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ write ] = people newline print ( white [ write ] ) newline"
"air balloon arrangement . air balloon ?","if entities . find ( air ) ! = None : newline newtab entities [ air ] [ balloon ] = arrangement newline print ( air [ balloon ] ) newline"
"girl be out . out be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( out [ be ] ) newline"
"woman sweep garbage . woman sweep ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sweep ] = garbage newline print ( woman [ sweep ] ) newline"
"two pack box . two pack ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ pack ] = box newline print ( two [ pack ] ) newline"
"child look child . child look ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ look ] = child newline print ( child [ look ] ) newline"
"woman sit youth . woman sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = youth newline print ( woman [ sit ] ) newline"
"ice cream cool . cool cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = ice newline print ( cool [ cream ] ) newline"
"man be wooded . wooded be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( wooded [ be ] ) newline"
"woman wear black . black wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( black [ wear ] ) newline"
"man hold an . man hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = an newline print ( man [ hold ] ) newline"
"sunglasses sit dog . sunglasses sit ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ sit ] = dog newline print ( sunglasses [ sit ] ) newline"
"while play mobile . mobile play ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ play ] = while newline print ( mobile [ play ] ) newline"
"woman be sleeping . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sleeping newline print ( woman [ be ] ) newline"
"player stand or . player stand ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ stand ] = or newline print ( player [ stand ] ) newline"
"dog jump trick . dog jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = trick newline print ( dog [ jump ] ) newline"
"flower be laughing . laughing be ?","if entities . find ( flower ) ! = None : newline newtab entities [ flower ] [ be ] = flower newline print ( laughing [ be ] ) newline"
"background watch boat . background watch ?","if entities . find ( background ) ! = None : newline newtab entities [ background ] [ watch ] = boat newline print ( background [ watch ] ) newline"
"coffee shop window . coffee shop ?","if entities . find ( coffee ) ! = None : newline newtab entities [ coffee ] [ shop ] = window newline print ( coffee [ shop ] ) newline"
"expression be featured . featured be ?","if entities . find ( expression ) ! = None : newline newtab entities [ expression ] [ be ] = expression newline print ( featured [ be ] ) newline"
"polka dot sheet . polka dot ?","if entities . find ( polka ) ! = None : newline newtab entities [ polka ] [ dot ] = sheet newline print ( polka [ dot ] ) newline"
"dandelion puff two . dandelion puff ?","if entities . find ( dandelion ) ! = None : newline newtab entities [ dandelion ] [ puff ] = two newline print ( dandelion [ puff ] ) newline"
"jacket be four . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = four newline print ( jacket [ be ] ) newline"
"top be bike . top be ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ be ] = bike newline print ( top [ be ] ) newline"
"library lay next . next lay ?","if entities . find ( library ) ! = None : newline newtab entities [ library ] [ lay ] = library newline print ( next [ lay ] ) newline"
"sweatshirt run out . out run ?","if entities . find ( sweatshirt ) ! = None : newline newtab entities [ sweatshirt ] [ run ] = sweatshirt newline print ( out [ run ] ) newline"
"woman be three . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = three newline print ( woman [ be ] ) newline"
"man drink out . out drink ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ drink ] = man newline print ( out [ drink ] ) newline"
"jacket walk home . jacket walk ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ walk ] = home newline print ( jacket [ walk ] ) newline"
"outfit handle broom . outfit handle ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ handle ] = broom newline print ( outfit [ handle ] ) newline"
"bag stand or . bag stand ?","if entities . find ( bag ) ! = None : newline newtab entities [ bag ] [ stand ] = or newline print ( bag [ stand ] ) newline"
"boy bend leg . boy bend ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ bend ] = leg newline print ( boy [ bend ] ) newline"
"boy discover white . white discover ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ discover ] = boy newline print ( white [ discover ] ) newline"
"bride dress man . bride dress ?","if entities . find ( bride ) ! = None : newline newtab entities [ bride ] [ dress ] = man newline print ( bride [ dress ] ) newline"
"woman jump out . out jump ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ jump ] = woman newline print ( out [ jump ] ) newline"
"woman walk next . next walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = woman newline print ( next [ walk ] ) newline"
"color dress elderly . elderly dress ?","if entities . find ( color ) ! = None : newline newtab entities [ color ] [ dress ] = color newline print ( elderly [ dress ] ) newline"
"tan short use . tan short ?","if entities . find ( tan ) ! = None : newline newtab entities [ tan ] [ short ] = use newline print ( tan [ short ] ) newline"
"woman wear dark . dark wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( dark [ wear ] ) newline"
"bench be sleeping . bench be ?","if entities . find ( bench ) ! = None : newline newtab entities [ bench ] [ be ] = sleeping newline print ( bench [ be ] ) newline"
"people participate two . people participate ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ participate ] = two newline print ( people [ participate ] ) newline"
"man wear black . black wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( black [ wear ] ) newline"
"son walk out . out walk ?","if entities . find ( son ) ! = None : newline newtab entities [ son ] [ walk ] = son newline print ( out [ walk ] ) newline"
"brown hat carousing . carousing hat ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ hat ] = brown newline print ( carousing [ hat ] ) newline"
"people be parasailing . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = parasailing newline print ( people [ be ] ) newline"
"guy walk next . next walk ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ walk ] = guy newline print ( next [ walk ] ) newline"
"man be rock . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = rock newline print ( man [ be ] ) newline"
"player hold sign . player hold ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ hold ] = sign newline print ( player [ hold ] ) newline"
"player celebrate two . player celebrate ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ celebrate ] = two newline print ( player [ celebrate ] ) newline"
"kid play two . kid play ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ play ] = two newline print ( kid [ play ] ) newline"
"man read an . man read ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ read ] = an newline print ( man [ read ] ) newline"
"photo be three . photo be ?","if entities . find ( photo ) ! = None : newline newtab entities [ photo ] [ be ] = three newline print ( photo [ be ] ) newline"
"girl walk alone . alone walk ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ walk ] = girl newline print ( alone [ walk ] ) newline"
"people walk while . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = while newline print ( people [ walk ] ) newline"
"nose pose next . next pose ?","if entities . find ( nose ) ! = None : newline newtab entities [ nose ] [ pose ] = nose newline print ( next [ pose ] ) newline"
"someone be opening . someone be ?","if entities . find ( someone ) ! = None : newline newtab entities [ someone ] [ be ] = opening newline print ( someone [ be ] ) newline"
"la take great . great take ?","if entities . find ( la ) ! = None : newline newtab entities [ la ] [ take ] = la newline print ( great [ take ] ) newline"
"straw hat smoke . straw hat ?","if entities . find ( straw ) ! = None : newline newtab entities [ straw ] [ hat ] = smoke newline print ( straw [ hat ] ) newline"
"team look room . team look ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ look ] = room newline print ( team [ look ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"people walk while . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = while newline print ( people [ walk ] ) newline"
"necktie hold ball . necktie hold ?","if entities . find ( necktie ) ! = None : newline newtab entities [ necktie ] [ hold ] = ball newline print ( necktie [ hold ] ) newline"
"driver be opening . driver be ?","if entities . find ( driver ) ! = None : newline newtab entities [ driver ] [ be ] = opening newline print ( driver [ be ] ) newline"
"jesus shrine while . jesus shrine ?","if entities . find ( jesus ) ! = None : newline newtab entities [ jesus ] [ shrine ] = while newline print ( jesus [ shrine ] ) newline"
"woman shoot white . white shoot ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ shoot ] = woman newline print ( white [ shoot ] ) newline"
"flower be painted . painted be ?","if entities . find ( flower ) ! = None : newline newtab entities [ flower ] [ be ] = flower newline print ( painted [ be ] ) newline"
"dog be next . next be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( next [ be ] ) newline"
"male be asleep . asleep be ?","if entities . find ( male ) ! = None : newline newtab entities [ male ] [ be ] = male newline print ( asleep [ be ] ) newline"
"people play musical . musical play ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ play ] = people newline print ( musical [ play ] ) newline"
"laptop press button . laptop press ?","if entities . find ( laptop ) ! = None : newline newtab entities [ laptop ] [ press ] = button newline print ( laptop [ press ] ) newline"
"table have conversation . table have ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ have ] = conversation newline print ( table [ have ] ) newline"
"man be red . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = red newline print ( man [ be ] ) newline"
"man walk or . man walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = or newline print ( man [ walk ] ) newline"
"man get some . some get ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ get ] = man newline print ( some [ get ] ) newline"
"girl jump an . girl jump ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ jump ] = an newline print ( girl [ jump ] ) newline"
"drummer sit next . next sit ?","if entities . find ( drummer ) ! = None : newline newtab entities [ drummer ] [ sit ] = drummer newline print ( next [ sit ] ) newline"
"it jump high . high jump ?","if entities . find ( it ) ! = None : newline newtab entities [ it ] [ jump ] = it newline print ( high [ jump ] ) newline"
"dog play musical . musical play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = dog newline print ( musical [ play ] ) newline"
"guy be rod . guy be ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ be ] = rod newline print ( guy [ be ] ) newline"
"seagull be airborne . airborne be ?","if entities . find ( seagull ) ! = None : newline newtab entities [ seagull ] [ be ] = seagull newline print ( airborne [ be ] ) newline"
"item be opening . item be ?","if entities . find ( item ) ! = None : newline newtab entities [ item ] [ be ] = opening newline print ( item [ be ] ) newline"
"woman ride bike . woman ride ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ ride ] = bike newline print ( woman [ ride ] ) newline"
"counter try two . counter try ?","if entities . find ( counter ) ! = None : newline newtab entities [ counter ] [ try ] = two newline print ( counter [ try ] ) newline"
"people be rock . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = rock newline print ( people [ be ] ) newline"
"people sing while . people sing ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sing ] = while newline print ( people [ sing ] ) newline"
"woman look bored . bored look ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ look ] = woman newline print ( bored [ look ] ) newline"
"man wear safety . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = safety newline print ( man [ wear ] ) newline"
"girl play next . next play ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ play ] = girl newline print ( next [ play ] ) newline"
"heron fly colorful . colorful fly ?","if entities . find ( heron ) ! = None : newline newtab entities [ heron ] [ fly ] = heron newline print ( colorful [ fly ] ) newline"
"goalie reach arm . goalie reach ?","if entities . find ( goalie ) ! = None : newline newtab entities [ goalie ] [ reach ] = arm newline print ( goalie [ reach ] ) newline"
"people watch tv . people watch ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ watch ] = tv newline print ( people [ watch ] ) newline"
"man wear yellow . yellow wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( yellow [ wear ] ) newline"
"dog jump dog . dog jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = dog newline print ( dog [ jump ] ) newline"
"hood ornament two . hood ornament ?","if entities . find ( hood ) ! = None : newline newtab entities [ hood ] [ ornament ] = two newline print ( hood [ ornament ] ) newline"
"woman be all . all be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( all [ be ] ) newline"
"people wear spandex . people wear ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ wear ] = spandex newline print ( people [ wear ] ) newline"
"woman observe white . white observe ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ observe ] = woman newline print ( white [ observe ] ) newline"
"he turn right . right turn ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ turn ] = he newline print ( right [ turn ] ) newline"
"clutch rag out . out rag ?","if entities . find ( clutch ) ! = None : newline newtab entities [ clutch ] [ rag ] = clutch newline print ( out [ rag ] ) newline"
"brochure be both . both be ?","if entities . find ( brochure ) ! = None : newline newtab entities [ brochure ] [ be ] = brochure newline print ( both [ be ] ) newline"
"man blow debris . man blow ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ blow ] = debris newline print ( man [ blow ] ) newline"
"player take some . some take ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ take ] = player newline print ( some [ take ] ) newline"
"man take some . some take ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ take ] = man newline print ( some [ take ] ) newline"
"surfer ride beige . beige ride ?","if entities . find ( surfer ) ! = None : newline newtab entities [ surfer ] [ ride ] = surfer newline print ( beige [ ride ] ) newline"
"child make quick . quick make ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ make ] = child newline print ( quick [ make ] ) newline"
"boardwalk be staring . staring be ?","if entities . find ( boardwalk ) ! = None : newline newtab entities [ boardwalk ] [ be ] = boardwalk newline print ( staring [ be ] ) newline"
"man inspect jewelry . man inspect ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ inspect ] = jewelry newline print ( man [ inspect ] ) newline"
"men participate white . white participate ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ participate ] = men newline print ( white [ participate ] ) newline"
"boy carry out . out carry ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ carry ] = boy newline print ( out [ carry ] ) newline"
"jeans work out . out work ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ work ] = jeans newline print ( out [ work ] ) newline"
"boy wear hard . hard wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = boy newline print ( hard [ wear ] ) newline"
"table scatter white . white scatter ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ scatter ] = table newline print ( white [ scatter ] ) newline"
"orange shirt out . out shirt ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ shirt ] = orange newline print ( out [ shirt ] ) newline"
"man wear black . black wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( black [ wear ] ) newline"
"apron be prominent . prominent be ?","if entities . find ( apron ) ! = None : newline newtab entities [ apron ] [ be ] = apron newline print ( prominent [ be ] ) newline"
"man sit while . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = while newline print ( man [ sit ] ) newline"
"life vest men . life vest ?","if entities . find ( life ) ! = None : newline newtab entities [ life ] [ vest ] = men newline print ( life [ vest ] ) newline"
"child run while . child run ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ run ] = while newline print ( child [ run ] ) newline"
"men watch suspenseful . suspenseful watch ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ watch ] = men newline print ( suspenseful [ watch ] ) newline"
"girl dress people . girl dress ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ dress ] = people newline print ( girl [ dress ] ) newline"
"brick build entrance . brick build ?","if entities . find ( brick ) ! = None : newline newtab entities [ brick ] [ build ] = entrance newline print ( brick [ build ] ) newline"
"brown pant hunched . hunched pant ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ pant ] = brown newline print ( hunched [ pant ] ) newline"
"woman sit alone . alone sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( alone [ sit ] ) newline"
"orange glass laugh . orange glass ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ glass ] = laugh newline print ( orange [ glass ] ) newline"
"boy dress laughing . laughing dress ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ dress ] = boy newline print ( laughing [ dress ] ) newline"
"picture be airborne . airborne be ?","if entities . find ( picture ) ! = None : newline newtab entities [ picture ] [ be ] = picture newline print ( airborne [ be ] ) newline"
"dog play mobile . mobile play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = dog newline print ( mobile [ play ] ) newline"
"man do pastel . pastel do ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ do ] = man newline print ( pastel [ do ] ) newline"
"woman sit while . woman sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = while newline print ( woman [ sit ] ) newline"
"people stand or . people stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = or newline print ( people [ stand ] ) newline"
"skier help guide . skier help ?","if entities . find ( skier ) ! = None : newline newtab entities [ skier ] [ help ] = guide newline print ( skier [ help ] ) newline"
"car be both . both be ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ be ] = car newline print ( both [ be ] ) newline"
"people wear neutral . neutral wear ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ wear ] = people newline print ( neutral [ wear ] ) newline"
"brown short both . both short ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ short ] = brown newline print ( both [ short ] ) newline"
"baby sit next . next sit ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ sit ] = baby newline print ( next [ sit ] ) newline"
"team be available . available be ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ be ] = team newline print ( available [ be ] ) newline"
"man stand out . out stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( out [ stand ] ) newline"
"paper hat while . paper hat ?","if entities . find ( paper ) ! = None : newline newtab entities [ paper ] [ hat ] = while newline print ( paper [ hat ] ) newline"
"crew get picture . crew get ?","if entities . find ( crew ) ! = None : newline newtab entities [ crew ] [ get ] = picture newline print ( crew [ get ] ) newline"
"band hold handrail . band hold ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ hold ] = handrail newline print ( band [ hold ] ) newline"
"boy be unhappy . unhappy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( unhappy [ be ] ) newline"
"rider be asleep . asleep be ?","if entities . find ( rider ) ! = None : newline newtab entities [ rider ] [ be ] = rider newline print ( asleep [ be ] ) newline"
"monk show many . many show ?","if entities . find ( monk ) ! = None : newline newtab entities [ monk ] [ show ] = monk newline print ( many [ show ] ) newline"
"red jump house . red jump ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ jump ] = house newline print ( red [ jump ] ) newline"
"man be thursday . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = thursday newline print ( man [ be ] ) newline"
"man be rock . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = rock newline print ( man [ be ] ) newline"
"boy be three . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = three newline print ( boy [ be ] ) newline"
"people watch out . out watch ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ watch ] = people newline print ( out [ watch ] ) newline"
"people be child . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = child newline print ( people [ be ] ) newline"
"jacket walk arm . jacket walk ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ walk ] = arm newline print ( jacket [ walk ] ) newline"
"guy wear long . long wear ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ wear ] = guy newline print ( long [ wear ] ) newline"
"or concert white . white concert ?","if entities . find ( or ) ! = None : newline newtab entities [ or ] [ concert ] = or newline print ( white [ concert ] ) newline"
"woman be several . several be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( several [ be ] ) newline"
"boy be full . full be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( full [ be ] ) newline"
"gray dress man . gray dress ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ dress ] = man newline print ( gray [ dress ] ) newline"
"boy play ultimate . ultimate play ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ play ] = boy newline print ( ultimate [ play ] ) newline"
"woman hold musical . musical hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = woman newline print ( musical [ hold ] ) newline"
"child play hopscotch . child play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = hopscotch newline print ( child [ play ] ) newline"
"people eat food . people eat ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ eat ] = food newline print ( people [ eat ] ) newline"
"man be swinging . swinging be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( swinging [ be ] ) newline"
"suit pass people . suit pass ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ pass ] = people newline print ( suit [ pass ] ) newline"
"man look man . man look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = man newline print ( man [ look ] ) newline"
"child hold several . several hold ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ hold ] = child newline print ( several [ hold ] ) newline"
"people watch another . another watch ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ watch ] = people newline print ( another [ watch ] ) newline"
"man sit or . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = or newline print ( man [ sit ] ) newline"
"girl be laughing . laughing be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( laughing [ be ] ) newline"
"an hat out . out hat ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ hat ] = an newline print ( out [ hat ] ) newline"
"man be busy . busy be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( busy [ be ] ) newline"
"child be rock . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = rock newline print ( child [ be ] ) newline"
"green shirt while . green shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = while newline print ( green [ shirt ] ) newline"
"man wear white . white wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( white [ wear ] ) newline"
"player be temporary . temporary be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = player newline print ( temporary [ be ] ) newline"
"dog be opening . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = opening newline print ( dog [ be ] ) newline"
"men be ready . ready be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( ready [ be ] ) newline"
"man pour tea . man pour ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ pour ] = tea newline print ( man [ pour ] ) newline"
"aid troop white . white troop ?","if entities . find ( aid ) ! = None : newline newtab entities [ aid ] [ troop ] = aid newline print ( white [ troop ] ) newline"
"woman be visible . visible be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( visible [ be ] ) newline"
"butter jar white . white jar ?","if entities . find ( butter ) ! = None : newline newtab entities [ butter ] [ jar ] = butter newline print ( white [ jar ] ) newline"
"chef hat guide . chef hat ?","if entities . find ( chef ) ! = None : newline newtab entities [ chef ] [ hat ] = guide newline print ( chef [ hat ] ) newline"
"safety goggle head . safety goggle ?","if entities . find ( safety ) ! = None : newline newtab entities [ safety ] [ goggle ] = head newline print ( safety [ goggle ] ) newline"
"dancer dress elderly . elderly dress ?","if entities . find ( dancer ) ! = None : newline newtab entities [ dancer ] [ dress ] = dancer newline print ( elderly [ dress ] ) newline"
"woman be textile . textile be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( textile [ be ] ) newline"
"guy jump while . guy jump ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ jump ] = while newline print ( guy [ jump ] ) newline"
"dog jump competition . dog jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = competition newline print ( dog [ jump ] ) newline"
"person crawl white . white crawl ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ crawl ] = person newline print ( white [ crawl ] ) newline"
"player be sleeping . player be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = sleeping newline print ( player [ be ] ) newline"
"bag peek out . out peek ?","if entities . find ( bag ) ! = None : newline newtab entities [ bag ] [ peek ] = bag newline print ( out [ peek ] ) newline"
"orange scarf white . white scarf ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ scarf ] = orange newline print ( white [ scarf ] ) newline"
"girl be neck . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = neck newline print ( girl [ be ] ) newline"
"man reenact two . man reenact ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ reenact ] = two newline print ( man [ reenact ] ) newline"
"woman sing live . live sing ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sing ] = woman newline print ( live [ sing ] ) newline"
"green paint next . next paint ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ paint ] = green newline print ( next [ paint ] ) newline"
"man sing live . live sing ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sing ] = man newline print ( live [ sing ] ) newline"
"jacket hold high . high hold ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ hold ] = jacket newline print ( high [ hold ] ) newline"
"red be two . red be ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ be ] = two newline print ( red [ be ] ) newline"
"man be napping . napping be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( napping [ be ] ) newline"
"woman dress little . little dress ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dress ] = woman newline print ( little [ dress ] ) newline"
"band play musical . musical play ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ play ] = band newline print ( musical [ play ] ) newline"
"man be laughing . laughing be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( laughing [ be ] ) newline"
"female pose next . next pose ?","if entities . find ( female ) ! = None : newline newtab entities [ female ] [ pose ] = female newline print ( next [ pose ] ) newline"
"distance jump obstacle . distance jump ?","if entities . find ( distance ) ! = None : newline newtab entities [ distance ] [ jump ] = obstacle newline print ( distance [ jump ] ) newline"
"dog look out . out look ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ look ] = dog newline print ( out [ look ] ) newline"
"people go live . live go ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ go ] = people newline print ( live [ go ] ) newline"
"man wear red . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = red newline print ( man [ wear ] ) newline"
"person be several . several be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = person newline print ( several [ be ] ) newline"
"speaker set out . out set ?","if entities . find ( speaker ) ! = None : newline newtab entities [ speaker ] [ set ] = speaker newline print ( out [ set ] ) newline"
"people walk out . out walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( out [ walk ] ) newline"
"stone build wooden . wooden build ?","if entities . find ( stone ) ! = None : newline newtab entities [ stone ] [ build ] = stone newline print ( wooden [ build ] ) newline"
"child look man . child look ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ look ] = man newline print ( child [ look ] ) newline"
"man read torah . man read ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ read ] = torah newline print ( man [ read ] ) newline"
"competitor come out . out come ?","if entities . find ( competitor ) ! = None : newline newtab entities [ competitor ] [ come ] = competitor newline print ( out [ come ] ) newline"
"woman be out . out be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( out [ be ] ) newline"
"spectator watch sporting . sporting watch ?","if entities . find ( spectator ) ! = None : newline newtab entities [ spectator ] [ watch ] = spectator newline print ( sporting [ watch ] ) newline"
"lady cross necklace . lady cross ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ cross ] = necklace newline print ( lady [ cross ] ) newline"
"girl be white . white be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( white [ be ] ) newline"
"orchestra play soccer . orchestra play ?","if entities . find ( orchestra ) ! = None : newline newtab entities [ orchestra ] [ play ] = soccer newline print ( orchestra [ play ] ) newline"
"people be part . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = part newline print ( people [ be ] ) newline"
"knee clean out . out clean ?","if entities . find ( knee ) ! = None : newline newtab entities [ knee ] [ clean ] = knee newline print ( out [ clean ] ) newline"
"red shirt out . out shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( out [ shirt ] ) newline"
"people be opening . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = opening newline print ( people [ be ] ) newline"
"man be person . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = person newline print ( man [ be ] ) newline"
"ball be sorting . ball be ?","if entities . find ( ball ) ! = None : newline newtab entities [ ball ] [ be ] = sorting newline print ( ball [ be ] ) newline"
"boy wear green . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = green newline print ( boy [ wear ] ) newline"
"while play soccer . while play ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ play ] = soccer newline print ( while [ play ] ) newline"
"man wear muzzle . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = muzzle newline print ( man [ wear ] ) newline"
"green shirt use . green shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = use newline print ( green [ shirt ] ) newline"
"man try two . man try ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ try ] = two newline print ( man [ try ] ) newline"
"studio wait next . next wait ?","if entities . find ( studio ) ! = None : newline newtab entities [ studio ] [ wait ] = studio newline print ( next [ wait ] ) newline"
"dog play soccer . dog play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = soccer newline print ( dog [ play ] ) newline"
"olympics be opening . olympics be ?","if entities . find ( olympics ) ! = None : newline newtab entities [ olympics ] [ be ] = opening newline print ( olympics [ be ] ) newline"
"men dress all . all dress ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ dress ] = men newline print ( all [ dress ] ) newline"
"snow carry some . some carry ?","if entities . find ( snow ) ! = None : newline newtab entities [ snow ] [ carry ] = snow newline print ( some [ carry ] ) newline"
"man take advantage . man take ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ take ] = advantage newline print ( man [ take ] ) newline"
"object include an . object include ?","if entities . find ( object ) ! = None : newline newtab entities [ object ] [ include ] = an newline print ( object [ include ] ) newline"
"girl walk next . next walk ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ walk ] = girl newline print ( next [ walk ] ) newline"
"man be out . out be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( out [ be ] ) newline"
"person hold coffee . person hold ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ hold ] = coffee newline print ( person [ hold ] ) newline"
"air balloon figure . air balloon ?","if entities . find ( air ) ! = None : newline newtab entities [ air ] [ balloon ] = figure newline print ( air [ balloon ] ) newline"
"area overlook scenic . scenic overlook ?","if entities . find ( area ) ! = None : newline newtab entities [ area ] [ overlook ] = area newline print ( scenic [ overlook ] ) newline"
"woman talk next . next talk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ talk ] = woman newline print ( next [ talk ] ) newline"
"craftsman be staring . staring be ?","if entities . find ( craftsman ) ! = None : newline newtab entities [ craftsman ] [ be ] = craftsman newline print ( staring [ be ] ) newline"
"man be people . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = people newline print ( man [ be ] ) newline"
"child stand or . child stand ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ stand ] = or newline print ( child [ stand ] ) newline"
"people have one . one have ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ have ] = people newline print ( one [ have ] ) newline"
"girl be many . many be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( many [ be ] ) newline"
"while sit next . next sit ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ sit ] = while newline print ( next [ sit ] ) newline"
"while look out . out look ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ look ] = while newline print ( out [ look ] ) newline"
"child dress all . all dress ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ dress ] = child newline print ( all [ dress ] ) newline"
"girl be staring . staring be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( staring [ be ] ) newline"
"red shirt swinging . swinging shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( swinging [ shirt ] ) newline"
"road cover another . another cover ?","if entities . find ( road ) ! = None : newline newtab entities [ road ] [ cover ] = road newline print ( another [ cover ] ) newline"
"man lounge next . next lounge ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ lounge ] = man newline print ( next [ lounge ] ) newline"
"lady be sleeping . lady be ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ be ] = sleeping newline print ( lady [ be ] ) newline"
"wedding dress little . little dress ?","if entities . find ( wedding ) ! = None : newline newtab entities [ wedding ] [ dress ] = wedding newline print ( little [ dress ] ) newline"
"woman look out . out look ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ look ] = woman newline print ( out [ look ] ) newline"
"dog be miniature . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = miniature newline print ( dog [ be ] ) newline"
"member stand next . next stand ?","if entities . find ( member ) ! = None : newline newtab entities [ member ] [ stand ] = member newline print ( next [ stand ] ) newline"
"red swim pool . red swim ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ swim ] = pool newline print ( red [ swim ] ) newline"
"men be bored . bored be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( bored [ be ] ) newline"
"green shirt hard . hard shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = green newline print ( hard [ shirt ] ) newline"
"step eat food . step eat ?","if entities . find ( step ) ! = None : newline newtab entities [ step ] [ eat ] = food newline print ( step [ eat ] ) newline"
"red dress dance . red dress ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ dress ] = dance newline print ( red [ dress ] ) newline"
"woman kneel man . woman kneel ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ kneel ] = man newline print ( woman [ kneel ] ) newline"
"gentleman dress child . gentleman dress ?","if entities . find ( gentleman ) ! = None : newline newtab entities [ gentleman ] [ dress ] = child newline print ( gentleman [ dress ] ) newline"
"baby sit while . baby sit ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ sit ] = while newline print ( baby [ sit ] ) newline"
"polo shirt sleep . polo shirt ?","if entities . find ( polo ) ! = None : newline newtab entities [ polo ] [ shirt ] = sleep newline print ( polo [ shirt ] ) newline"
"umbrella be wooded . wooded be ?","if entities . find ( umbrella ) ! = None : newline newtab entities [ umbrella ] [ be ] = umbrella newline print ( wooded [ be ] ) newline"
"people pick out . out pick ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ pick ] = people newline print ( out [ pick ] ) newline"
"man haul vehicle . man haul ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ haul ] = vehicle newline print ( man [ haul ] ) newline"
"box read another . another read ?","if entities . find ( box ) ! = None : newline newtab entities [ box ] [ read ] = box newline print ( another [ read ] ) newline"
"boy wear white . white wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = boy newline print ( white [ wear ] ) newline"
"costume wait next . next wait ?","if entities . find ( costume ) ! = None : newline newtab entities [ costume ] [ wait ] = costume newline print ( next [ wait ] ) newline"
"boy run full . full run ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ run ] = boy newline print ( full [ run ] ) newline"
"man walk people . man walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = people newline print ( man [ walk ] ) newline"
"while sit alone . alone sit ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ sit ] = while newline print ( alone [ sit ] ) newline"
"orange attire while . orange attire ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ attire ] = while newline print ( orange [ attire ] ) newline"
"man make out . out make ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ make ] = man newline print ( out [ make ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"football match headscarf . football match ?","if entities . find ( football ) ! = None : newline newtab entities [ football ] [ match ] = headscarf newline print ( football [ match ] ) newline"
"people be taste . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = taste newline print ( people [ be ] ) newline"
"green shirt uniform . uniform shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = green newline print ( uniform [ shirt ] ) newline"
"man carry several . several carry ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ carry ] = man newline print ( several [ carry ] ) newline"
"girl play another . another play ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ play ] = girl newline print ( another [ play ] ) newline"
"army fatigue road . army fatigue ?","if entities . find ( army ) ! = None : newline newtab entities [ army ] [ fatigue ] = road newline print ( army [ fatigue ] ) newline"
"woman wear black . black wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( black [ wear ] ) newline"
"soy be all . all be ?","if entities . find ( soy ) ! = None : newline newtab entities [ soy ] [ be ] = soy newline print ( all [ be ] ) newline"
"kid pose next . next pose ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ pose ] = kid newline print ( next [ pose ] ) newline"
"people be india . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = india newline print ( people [ be ] ) newline"
"girl run out . out run ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ run ] = girl newline print ( out [ run ] ) newline"
"dog sit bride . dog sit ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ sit ] = bride newline print ( dog [ sit ] ) newline"
"person play instrument . person play ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ play ] = instrument newline print ( person [ play ] ) newline"
"man wear white . white wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( white [ wear ] ) newline"
"men wear white . white wear ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ wear ] = men newline print ( white [ wear ] ) newline"
"red shirt while . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = while newline print ( red [ shirt ] ) newline"
"red robe line . red robe ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ robe ] = line newline print ( red [ robe ] ) newline"
"he be likely . likely be ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ be ] = he newline print ( likely [ be ] ) newline"
"girl run out . out run ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ run ] = girl newline print ( out [ run ] ) newline"
"skateboarder wear orange . skateboarder wear ?","if entities . find ( skateboarder ) ! = None : newline newtab entities [ skateboarder ] [ wear ] = orange newline print ( skateboarder [ wear ] ) newline"
"vulture perch white . white perch ?","if entities . find ( vulture ) ! = None : newline newtab entities [ vulture ] [ perch ] = vulture newline print ( white [ perch ] ) newline"
"woman walk guard . woman walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = guard newline print ( woman [ walk ] ) newline"
"german shepherd white . white shepherd ?","if entities . find ( german ) ! = None : newline newtab entities [ german ] [ shepherd ] = german newline print ( white [ shepherd ] ) newline"
"man be ready . ready be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( ready [ be ] ) newline"
"us have fun . us have ?","if entities . find ( us ) ! = None : newline newtab entities [ us ] [ have ] = fun newline print ( us [ have ] ) newline"
"who be woman . who be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = woman newline print ( who [ be ] ) newline"
"who look happy . happy look ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ look ] = who newline print ( happy [ look ] ) newline"
"lady be bigger . bigger be ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ be ] = lady newline print ( bigger [ be ] ) newline"
"person be many . many be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = person newline print ( many [ be ] ) newline"
"subway train white . white train ?","if entities . find ( subway ) ! = None : newline newtab entities [ subway ] [ train ] = subway newline print ( white [ train ] ) newline"
"orange vest men . orange vest ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ vest ] = men newline print ( orange [ vest ] ) newline"
"customer be nude . customer be ?","if entities . find ( customer ) ! = None : newline newtab entities [ customer ] [ be ] = nude newline print ( customer [ be ] ) newline"
"female jump high . high jump ?","if entities . find ( female ) ! = None : newline newtab entities [ female ] [ jump ] = female newline print ( high [ jump ] ) newline"
"couple stand next . next stand ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ stand ] = couple newline print ( next [ stand ] ) newline"
"chair be swinging . swinging be ?","if entities . find ( chair ) ! = None : newline newtab entities [ chair ] [ be ] = chair newline print ( swinging [ be ] ) newline"
"woman push another . another push ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ push ] = woman newline print ( another [ push ] ) newline"
"dog be staring . staring be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( staring [ be ] ) newline"
"child be bored . bored be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( bored [ be ] ) newline"
"skier go ice . skier go ?","if entities . find ( skier ) ! = None : newline newtab entities [ skier ] [ go ] = ice newline print ( skier [ go ] ) newline"
"brown slack converse . converse slack ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ slack ] = brown newline print ( converse [ slack ] ) newline"
"girl pose while . girl pose ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ pose ] = while newline print ( girl [ pose ] ) newline"
"street hold an . street hold ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ hold ] = an newline print ( street [ hold ] ) newline"
"man look kitchen . man look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = kitchen newline print ( man [ look ] ) newline"
"child play long . long play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = child newline print ( long [ play ] ) newline"
"boy wear skate . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = skate newline print ( boy [ wear ] ) newline"
"ice skate park . ice skate ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ skate ] = park newline print ( ice [ skate ] ) newline"
"man sit asian . asian sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( asian [ sit ] ) newline"
"man wear teal . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = teal newline print ( man [ wear ] ) newline"
"red shirt laugh . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = laugh newline print ( red [ shirt ] ) newline"
"referee have an . referee have ?","if entities . find ( referee ) ! = None : newline newtab entities [ referee ] [ have ] = an newline print ( referee [ have ] ) newline"
"man wear large . large wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( large [ wear ] ) newline"
"top lean tower . top lean ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ lean ] = tower newline print ( top [ lean ] ) newline"
"people sit side . people sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = side newline print ( people [ sit ] ) newline"
"woman be young . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = young newline print ( woman [ be ] ) newline"
"man seat black . black seat ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ seat ] = man newline print ( black [ seat ] ) newline"
"girl hold magazine . girl hold ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ hold ] = magazine newline print ( girl [ hold ] ) newline"
"man toss an . man toss ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ toss ] = an newline print ( man [ toss ] ) newline"
"bench eat food . bench eat ?","if entities . find ( bench ) ! = None : newline newtab entities [ bench ] [ eat ] = food newline print ( bench [ eat ] ) newline"
"sari examine white . white examine ?","if entities . find ( sari ) ! = None : newline newtab entities [ sari ] [ examine ] = sari newline print ( white [ examine ] ) newline"
"child walk while . child walk ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ walk ] = while newline print ( child [ walk ] ) newline"
"christmas tree limb . christmas tree ?","if entities . find ( christmas ) ! = None : newline newtab entities [ christmas ] [ tree ] = limb newline print ( christmas [ tree ] ) newline"
"face rest head . face rest ?","if entities . find ( face ) ! = None : newline newtab entities [ face ] [ rest ] = head newline print ( face [ rest ] ) newline"
"fighter slam two . fighter slam ?","if entities . find ( fighter ) ! = None : newline newtab entities [ fighter ] [ slam ] = two newline print ( fighter [ slam ] ) newline"
"patron wait next . next wait ?","if entities . find ( patron ) ! = None : newline newtab entities [ patron ] [ wait ] = patron newline print ( next [ wait ] ) newline"
"green shirt while . green shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = while newline print ( green [ shirt ] ) newline"
"man be pictured . pictured be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( pictured [ be ] ) newline"
"woman be ready . ready be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( ready [ be ] ) newline"
"people sit while . people sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = while newline print ( people [ sit ] ) newline"
"child sit while . child sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = while newline print ( child [ sit ] ) newline"
"biker speed white . white speed ?","if entities . find ( biker ) ! = None : newline newtab entities [ biker ] [ speed ] = biker newline print ( white [ speed ] ) newline"
"woman wear baseball . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = baseball newline print ( woman [ wear ] ) newline"
"pool be four . pool be ?","if entities . find ( pool ) ! = None : newline newtab entities [ pool ] [ be ] = four newline print ( pool [ be ] ) newline"
"worker help people . worker help ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ help ] = people newline print ( worker [ help ] ) newline"
"people sit or . people sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = or newline print ( people [ sit ] ) newline"
"mom sit while . mom sit ?","if entities . find ( mom ) ! = None : newline newtab entities [ mom ] [ sit ] = while newline print ( mom [ sit ] ) newline"
"field do some . some do ?","if entities . find ( field ) ! = None : newline newtab entities [ field ] [ do ] = field newline print ( some [ do ] ) newline"
"aqua color building . aqua color ?","if entities . find ( aqua ) ! = None : newline newtab entities [ aqua ] [ color ] = building newline print ( aqua [ color ] ) newline"
"man wear safety . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = safety newline print ( man [ wear ] ) newline"
"men decide two . men decide ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ decide ] = two newline print ( men [ decide ] ) newline"
"dog run while . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = while newline print ( dog [ run ] ) newline"
"red shirt while . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = while newline print ( red [ shirt ] ) newline"
"teenager chop onion . teenager chop ?","if entities . find ( teenager ) ! = None : newline newtab entities [ teenager ] [ chop ] = onion newline print ( teenager [ chop ] ) newline"
"dog swim cap . dog swim ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ swim ] = cap newline print ( dog [ swim ] ) newline"
"man paint brick . man paint ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ paint ] = brick newline print ( man [ paint ] ) newline"
"sunhat lay upside . sunhat lay ?","if entities . find ( sunhat ) ! = None : newline newtab entities [ sunhat ] [ lay ] = upside newline print ( sunhat [ lay ] ) newline"
"student sit alone . alone sit ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ sit ] = student newline print ( alone [ sit ] ) newline"
"man be older . older be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( older [ be ] ) newline"
"while stand chest . while stand ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ stand ] = chest newline print ( while [ stand ] ) newline"
"bride groom white . white groom ?","if entities . find ( bride ) ! = None : newline newtab entities [ bride ] [ groom ] = bride newline print ( white [ groom ] ) newline"
"child be young . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = young newline print ( child [ be ] ) newline"
"child be napping . napping be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( napping [ be ] ) newline"
"crew be sleeping . crew be ?","if entities . find ( crew ) ! = None : newline newtab entities [ crew ] [ be ] = sleeping newline print ( crew [ be ] ) newline"
"jeans be laughing . laughing be ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ be ] = jeans newline print ( laughing [ be ] ) newline"
"man be wet . wet be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( wet [ be ] ) newline"
"people walk while . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = while newline print ( people [ walk ] ) newline"
"woman walk hand . woman walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = hand newline print ( woman [ walk ] ) newline"
"woman sit guy . woman sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = guy newline print ( woman [ sit ] ) newline"
"suit be sleeping . suit be ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ be ] = sleeping newline print ( suit [ be ] ) newline"
"glass cover another . another cover ?","if entities . find ( glass ) ! = None : newline newtab entities [ glass ] [ cover ] = glass newline print ( another [ cover ] ) newline"
"pine tree white . white tree ?","if entities . find ( pine ) ! = None : newline newtab entities [ pine ] [ tree ] = pine newline print ( white [ tree ] ) newline"
"cap stand next . next stand ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ stand ] = cap newline print ( next [ stand ] ) newline"
"person walk out . out walk ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ walk ] = person newline print ( out [ walk ] ) newline"
"man have beautiful . beautiful have ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ have ] = man newline print ( beautiful [ have ] ) newline"
"man carry soap . man carry ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ carry ] = soap newline print ( man [ carry ] ) newline"
"who be mouth . who be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = mouth newline print ( who [ be ] ) newline"
"boxer leap while . boxer leap ?","if entities . find ( boxer ) ! = None : newline newtab entities [ boxer ] [ leap ] = while newline print ( boxer [ leap ] ) newline"
"light wrap female . female wrap ?","if entities . find ( light ) ! = None : newline newtab entities [ light ] [ wrap ] = light newline print ( female [ wrap ] ) newline"
"who have fun . who have ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ have ] = fun newline print ( who [ have ] ) newline"
"people march band . people march ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ march ] = band newline print ( people [ march ] ) newline"
"people walk out . out walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( out [ walk ] ) newline"
"flower dress orchestra . flower dress ?","if entities . find ( flower ) ! = None : newline newtab entities [ flower ] [ dress ] = orchestra newline print ( flower [ dress ] ) newline"
"top be swinging . swinging be ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ be ] = top newline print ( swinging [ be ] ) newline"
"spectator be pilot . spectator be ?","if entities . find ( spectator ) ! = None : newline newtab entities [ spectator ] [ be ] = pilot newline print ( spectator [ be ] ) newline"
"people sit alone . alone sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( alone [ sit ] ) newline"
"five be deep . deep be ?","if entities . find ( five ) ! = None : newline newtab entities [ five ] [ be ] = five newline print ( deep [ be ] ) newline"
"area cover another . another cover ?","if entities . find ( area ) ! = None : newline newtab entities [ area ] [ cover ] = area newline print ( another [ cover ] ) newline"
"man squat next . next squat ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ squat ] = man newline print ( next [ squat ] ) newline"
"man be woman . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = woman newline print ( man [ be ] ) newline"
"people wait next . next wait ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ wait ] = people newline print ( next [ wait ] ) newline"
"sweater be fun . sweater be ?","if entities . find ( sweater ) ! = None : newline newtab entities [ sweater ] [ be ] = fun newline print ( sweater [ be ] ) newline"
"floor try two . floor try ?","if entities . find ( floor ) ! = None : newline newtab entities [ floor ] [ try ] = two newline print ( floor [ try ] ) newline"
"dog play makeshift . makeshift play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = dog newline print ( makeshift [ play ] ) newline"
"jacket stand camera . jacket stand ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ stand ] = camera newline print ( jacket [ stand ] ) newline"
"cellphone stand man . cellphone stand ?","if entities . find ( cellphone ) ! = None : newline newtab entities [ cellphone ] [ stand ] = man newline print ( cellphone [ stand ] ) newline"
"woman show many . many show ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ show ] = woman newline print ( many [ show ] ) newline"
"frisbee cast out . out cast ?","if entities . find ( frisbee ) ! = None : newline newtab entities [ frisbee ] [ cast ] = frisbee newline print ( out [ cast ] ) newline"
"man wear camouflage . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = camouflage newline print ( man [ wear ] ) newline"
"boy wear an . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = an newline print ( boy [ wear ] ) newline"
"jacket play some . some play ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ play ] = jacket newline print ( some [ play ] ) newline"
"vehicle be sleeping . vehicle be ?","if entities . find ( vehicle ) ! = None : newline newtab entities [ vehicle ] [ be ] = sleeping newline print ( vehicle [ be ] ) newline"
"straw hat one . one hat ?","if entities . find ( straw ) ! = None : newline newtab entities [ straw ] [ hat ] = straw newline print ( one [ hat ] ) newline"
"while smoke white . white smoke ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ smoke ] = while newline print ( white [ smoke ] ) newline"
"woman hold technical . technical hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = woman newline print ( technical [ hold ] ) newline"
"runner be pilot . runner be ?","if entities . find ( runner ) ! = None : newline newtab entities [ runner ] [ be ] = pilot newline print ( runner [ be ] ) newline"
"tomato plant next . next plant ?","if entities . find ( tomato ) ! = None : newline newtab entities [ tomato ] [ plant ] = tomato newline print ( next [ plant ] ) newline"
"individual walk bike . individual walk ?","if entities . find ( individual ) ! = None : newline newtab entities [ individual ] [ walk ] = bike newline print ( individual [ walk ] ) newline"
"red be opening . red be ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ be ] = opening newline print ( red [ be ] ) newline"
"dog run side . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = side newline print ( dog [ run ] ) newline"
"men peer two . men peer ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ peer ] = two newline print ( men [ peer ] ) newline"
"student sit while . student sit ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ sit ] = while newline print ( student [ sit ] ) newline"
"man be three . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = three newline print ( man [ be ] ) newline"
"metal fence field . metal fence ?","if entities . find ( metal ) ! = None : newline newtab entities [ metal ] [ fence ] = field newline print ( metal [ fence ] ) newline"
"man surf two . man surf ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ surf ] = two newline print ( man [ surf ] ) newline"
"cowboy hat out . out hat ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ hat ] = cowboy newline print ( out [ hat ] ) newline"
"sock be sleeping . sock be ?","if entities . find ( sock ) ! = None : newline newtab entities [ sock ] [ be ] = sleeping newline print ( sock [ be ] ) newline"
"dog wear black . black wear ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ wear ] = dog newline print ( black [ wear ] ) newline"
"boy be laughing . laughing be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( laughing [ be ] ) newline"
"personnel be cool . cool be ?","if entities . find ( personnel ) ! = None : newline newtab entities [ personnel ] [ be ] = personnel newline print ( cool [ be ] ) newline"
"dog shake white . white shake ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ shake ] = dog newline print ( white [ shake ] ) newline"
"boy be hundred . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = hundred newline print ( boy [ be ] ) newline"
"person sit while . person sit ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ sit ] = while newline print ( person [ sit ] ) newline"
"team kick wood . team kick ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ kick ] = wood newline print ( team [ kick ] ) newline"
"game be raining . raining be ?","if entities . find ( game ) ! = None : newline newtab entities [ game ] [ be ] = game newline print ( raining [ be ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"woman be whispering . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = whispering newline print ( woman [ be ] ) newline"
"child sled dog . child sled ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sled ] = dog newline print ( child [ sled ] ) newline"
"glassblower be way . glassblower be ?","if entities . find ( glassblower ) ! = None : newline newtab entities [ glassblower ] [ be ] = way newline print ( glassblower [ be ] ) newline"
"person be swinging . swinging be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = person newline print ( swinging [ be ] ) newline"
"kid do window . kid do ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ do ] = window newline print ( kid [ do ] ) newline"
"green shoe staring . staring shoe ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shoe ] = green newline print ( staring [ shoe ] ) newline"
"man look humanoid . man look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = humanoid newline print ( man [ look ] ) newline"
"man play chess . man play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = chess newline print ( man [ play ] ) newline"
"person be asleep . asleep be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = person newline print ( asleep [ be ] ) newline"
"man wear sunglasses . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = sunglasses newline print ( man [ wear ] ) newline"
"red shirt sleep . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = sleep newline print ( red [ shirt ] ) newline"
"men be metalworking . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = metalworking newline print ( men [ be ] ) newline"
"player collide two . player collide ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ collide ] = two newline print ( player [ collide ] ) newline"
"boy be several . several be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( several [ be ] ) newline"
"man be five . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = five newline print ( man [ be ] ) newline"
"while talk while . while talk ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ talk ] = while newline print ( while [ talk ] ) newline"
"legs fly out . out fly ?","if entities . find ( legs ) ! = None : newline newtab entities [ legs ] [ fly ] = legs newline print ( out [ fly ] ) newline"
"floor fix some . some fix ?","if entities . find ( floor ) ! = None : newline newtab entities [ floor ] [ fix ] = floor newline print ( some [ fix ] ) newline"
"while sit while . while sit ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ sit ] = while newline print ( while [ sit ] ) newline"
"child gather bread . child gather ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ gather ] = bread newline print ( child [ gather ] ) newline"
"skateboarder wear hot . hot wear ?","if entities . find ( skateboarder ) ! = None : newline newtab entities [ skateboarder ] [ wear ] = skateboarder newline print ( hot [ wear ] ) newline"
"dog lay dog . dog lay ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ lay ] = dog newline print ( dog [ lay ] ) newline"
"costume be upside . costume be ?","if entities . find ( costume ) ! = None : newline newtab entities [ costume ] [ be ] = upside newline print ( costume [ be ] ) newline"
"costume dance next . next dance ?","if entities . find ( costume ) ! = None : newline newtab entities [ costume ] [ dance ] = costume newline print ( next [ dance ] ) newline"
"belt be five . belt be ?","if entities . find ( belt ) ! = None : newline newtab entities [ belt ] [ be ] = five newline print ( belt [ be ] ) newline"
"people walk alone . alone walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( alone [ walk ] ) newline"
"pan fill stage . pan fill ?","if entities . find ( pan ) ! = None : newline newtab entities [ pan ] [ fill ] = stage newline print ( pan [ fill ] ) newline"
"men be five . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = five newline print ( men [ be ] ) newline"
"woman look trolley . woman look ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ look ] = trolley newline print ( woman [ look ] ) newline"
"dog be many . many be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( many [ be ] ) newline"
"red shirt next . next shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( next [ shirt ] ) newline"
"woman sweep garbage . woman sweep ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sweep ] = garbage newline print ( woman [ sweep ] ) newline"
"head be an . head be ?","if entities . find ( head ) ! = None : newline newtab entities [ head ] [ be ] = an newline print ( head [ be ] ) newline"
"worker walk next . next walk ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ walk ] = worker newline print ( next [ walk ] ) newline"
"castro hang out . out hang ?","if entities . find ( castro ) ! = None : newline newtab entities [ castro ] [ hang ] = castro newline print ( out [ hang ] ) newline"
"stone step next . next step ?","if entities . find ( stone ) ! = None : newline newtab entities [ stone ] [ step ] = stone newline print ( next [ step ] ) newline"
"tennis skirt all . all skirt ?","if entities . find ( tennis ) ! = None : newline newtab entities [ tennis ] [ skirt ] = tennis newline print ( all [ skirt ] ) newline"
"people stand ready . ready stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( ready [ stand ] ) newline"
"man wear an . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = an newline print ( man [ wear ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"student gather bread . student gather ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ gather ] = bread newline print ( student [ gather ] ) newline"
"woman walk man . woman walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = man newline print ( woman [ walk ] ) newline"
"bikini be laughing . laughing be ?","if entities . find ( bikini ) ! = None : newline newtab entities [ bikini ] [ be ] = bikini newline print ( laughing [ be ] ) newline"
"woman repair bronze . bronze repair ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ repair ] = woman newline print ( bronze [ repair ] ) newline"
"red shirt clean . clean shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( clean [ shirt ] ) newline"
"officer stand while . officer stand ?","if entities . find ( officer ) ! = None : newline newtab entities [ officer ] [ stand ] = while newline print ( officer [ stand ] ) newline"
"woman embrace while . woman embrace ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ embrace ] = while newline print ( woman [ embrace ] ) newline"
"girl be naked . naked be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( naked [ be ] ) newline"
"life walk arm . life walk ?","if entities . find ( life ) ! = None : newline newtab entities [ life ] [ walk ] = arm newline print ( life [ walk ] ) newline"
"man play chess . man play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = chess newline print ( man [ play ] ) newline"
"air parallel two . air parallel ?","if entities . find ( air ) ! = None : newline newtab entities [ air ] [ parallel ] = two newline print ( air [ parallel ] ) newline"
"patio look out . out look ?","if entities . find ( patio ) ! = None : newline newtab entities [ patio ] [ look ] = patio newline print ( out [ look ] ) newline"
"person play different . different play ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ play ] = person newline print ( different [ play ] ) newline"
"dog wrestle white . white wrestle ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ wrestle ] = dog newline print ( white [ wrestle ] ) newline"
"horse work location . horse work ?","if entities . find ( horse ) ! = None : newline newtab entities [ horse ] [ work ] = location newline print ( horse [ work ] ) newline"
"jacket be people . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = people newline print ( jacket [ be ] ) newline"
"gun shop store . gun shop ?","if entities . find ( gun ) ! = None : newline newtab entities [ gun ] [ shop ] = store newline print ( gun [ shop ] ) newline"
"jacket hold another . another hold ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ hold ] = jacket newline print ( another [ hold ] ) newline"
"while smile little . little smile ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ smile ] = while newline print ( little [ smile ] ) newline"
"man be asleep . asleep be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( asleep [ be ] ) newline"
"green glass next . next glass ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ glass ] = green newline print ( next [ glass ] ) newline"
"while seat black . black seat ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ seat ] = while newline print ( black [ seat ] ) newline"
"rider be wooded . wooded be ?","if entities . find ( rider ) ! = None : newline newtab entities [ rider ] [ be ] = rider newline print ( wooded [ be ] ) newline"
"child throw some . some throw ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ throw ] = child newline print ( some [ throw ] ) newline"
"while wear different . different wear ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ wear ] = while newline print ( different [ wear ] ) newline"
"ice cream out . out cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = ice newline print ( out [ cream ] ) newline"
"boy splash another . another splash ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ splash ] = boy newline print ( another [ splash ] ) newline"
"audience watch men . audience watch ?","if entities . find ( audience ) ! = None : newline newtab entities [ audience ] [ watch ] = men newline print ( audience [ watch ] ) newline"
"hair be red . hair be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = red newline print ( hair [ be ] ) newline"
"man wear yellow . yellow wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( yellow [ wear ] ) newline"
"who be teaching . who be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = teaching newline print ( who [ be ] ) newline"
"girl sit next . next sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = girl newline print ( next [ sit ] ) newline"
"red stand next . next stand ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ stand ] = red newline print ( next [ stand ] ) newline"
"man ride an . man ride ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ ride ] = an newline print ( man [ ride ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"girl wear black . black wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = girl newline print ( black [ wear ] ) newline"
"stage play guitar . stage play ?","if entities . find ( stage ) ! = None : newline newtab entities [ stage ] [ play ] = guitar newline print ( stage [ play ] ) newline"
"orange color striped . striped color ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ color ] = orange newline print ( striped [ color ] ) newline"
"air balloon arrangement . air balloon ?","if entities . find ( air ) ! = None : newline newtab entities [ air ] [ balloon ] = arrangement newline print ( air [ balloon ] ) newline"
"jacket look redhead . jacket look ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ look ] = redhead newline print ( jacket [ look ] ) newline"
"man be full . full be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( full [ be ] ) newline"
"boy ride an . boy ride ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ ride ] = an newline print ( boy [ ride ] ) newline"
"girl rat two . girl rat ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ rat ] = two newline print ( girl [ rat ] ) newline"
"rock overlook scenic . scenic overlook ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ overlook ] = rock newline print ( scenic [ overlook ] ) newline"
"ice cream cone . ice cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = cone newline print ( ice [ cream ] ) newline"
"man wear skimpy . skimpy wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( skimpy [ wear ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"boy skate while . boy skate ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ skate ] = while newline print ( boy [ skate ] ) newline"
"couple hold child . couple hold ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ hold ] = child newline print ( couple [ hold ] ) newline"
"player be sledding . player be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = sledding newline print ( player [ be ] ) newline"
"hair be two . hair be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = two newline print ( hair [ be ] ) newline"
"safety vest next . next vest ?","if entities . find ( safety ) ! = None : newline newtab entities [ safety ] [ vest ] = safety newline print ( next [ vest ] ) newline"
"policeman stand side . policeman stand ?","if entities . find ( policeman ) ! = None : newline newtab entities [ policeman ] [ stand ] = side newline print ( policeman [ stand ] ) newline"
"who be belongings . who be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = belongings newline print ( who [ be ] ) newline"
"woman take out . out take ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ take ] = woman newline print ( out [ take ] ) newline"
"male peer out . out peer ?","if entities . find ( male ) ! = None : newline newtab entities [ male ] [ peer ] = male newline print ( out [ peer ] ) newline"
"child be three . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = three newline print ( child [ be ] ) newline"
"dog shake water . dog shake ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ shake ] = water newline print ( dog [ shake ] ) newline"
"sweatshirt walk next . next walk ?","if entities . find ( sweatshirt ) ! = None : newline newtab entities [ sweatshirt ] [ walk ] = sweatshirt newline print ( next [ walk ] ) newline"
"boy play music . boy play ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ play ] = music newline print ( boy [ play ] ) newline"
"boy wrestle white . white wrestle ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wrestle ] = boy newline print ( white [ wrestle ] ) newline"
"child sit while . child sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = while newline print ( child [ sit ] ) newline"
"woman help another . another help ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ help ] = woman newline print ( another [ help ] ) newline"
"nature trail bridge . nature trail ?","if entities . find ( nature ) ! = None : newline newtab entities [ nature ] [ trail ] = bridge newline print ( nature [ trail ] ) newline"
"men drink some . some drink ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ drink ] = men newline print ( some [ drink ] ) newline"
"woman be sleeping . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sleeping newline print ( woman [ be ] ) newline"
"counter look out . out look ?","if entities . find ( counter ) ! = None : newline newtab entities [ counter ] [ look ] = counter newline print ( out [ look ] ) newline"
"woman be asleep . asleep be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( asleep [ be ] ) newline"
"man be laughing . laughing be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( laughing [ be ] ) newline"
"man lean out . out lean ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ lean ] = man newline print ( out [ lean ] ) newline"
"pool play makeshift . makeshift play ?","if entities . find ( pool ) ! = None : newline newtab entities [ pool ] [ play ] = pool newline print ( makeshift [ play ] ) newline"
"men be asleep . asleep be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( asleep [ be ] ) newline"
"face mask individual . individual mask ?","if entities . find ( face ) ! = None : newline newtab entities [ face ] [ mask ] = face newline print ( individual [ mask ] ) newline"
"dog bound while . dog bound ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ bound ] = while newline print ( dog [ bound ] ) newline"
"dog be next . next be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( next [ be ] ) newline"
"backyard sit next . next sit ?","if entities . find ( backyard ) ! = None : newline newtab entities [ backyard ] [ sit ] = backyard newline print ( next [ sit ] ) newline"
"people be lovely . lovely be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( lovely [ be ] ) newline"
"bridge exist two . bridge exist ?","if entities . find ( bridge ) ! = None : newline newtab entities [ bridge ] [ exist ] = two newline print ( bridge [ exist ] ) newline"
"man be swinging . swinging be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( swinging [ be ] ) newline"
"while carry bag . while carry ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ carry ] = bag newline print ( while [ carry ] ) newline"
"child kick some . some kick ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ kick ] = child newline print ( some [ kick ] ) newline"
"while be busy . busy be ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ be ] = while newline print ( busy [ be ] ) newline"
"he move dirt . he move ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ move ] = dirt newline print ( he [ move ] ) newline"
"green coat gesture . green coat ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ coat ] = gesture newline print ( green [ coat ] ) newline"
"man be three . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = three newline print ( man [ be ] ) newline"
"girl stand alone . alone stand ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ stand ] = girl newline print ( alone [ stand ] ) newline"
"sun set out . out set ?","if entities . find ( sun ) ! = None : newline newtab entities [ sun ] [ set ] = sun newline print ( out [ set ] ) newline"
"man fish white . white fish ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ fish ] = man newline print ( white [ fish ] ) newline"
"boy be teaching . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = teaching newline print ( boy [ be ] ) newline"
"green hat one . one hat ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ hat ] = green newline print ( one [ hat ] ) newline"
"man wear bright . bright wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( bright [ wear ] ) newline"
"orange robe white . white robe ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ robe ] = orange newline print ( white [ robe ] ) newline"
"player listen white . white listen ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ listen ] = player newline print ( white [ listen ] ) newline"
"costume be sleeping . costume be ?","if entities . find ( costume ) ! = None : newline newtab entities [ costume ] [ be ] = sleeping newline print ( costume [ be ] ) newline"
"individual sit while . individual sit ?","if entities . find ( individual ) ! = None : newline newtab entities [ individual ] [ sit ] = while newline print ( individual [ sit ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"woman sell good . woman sell ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sell ] = good newline print ( woman [ sell ] ) newline"
"guy pose while . guy pose ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ pose ] = while newline print ( guy [ pose ] ) newline"
"woman be both . both be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( both [ be ] ) newline"
"men listen or . men listen ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ listen ] = or newline print ( men [ listen ] ) newline"
"men play guitar . men play ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ play ] = guitar newline print ( men [ play ] ) newline"
"gray dress all . all dress ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ dress ] = gray newline print ( all [ dress ] ) newline"
"adult have some . some have ?","if entities . find ( adult ) ! = None : newline newtab entities [ adult ] [ have ] = adult newline print ( some [ have ] ) newline"
"party pose while . party pose ?","if entities . find ( party ) ! = None : newline newtab entities [ party ] [ pose ] = while newline print ( party [ pose ] ) newline"
"hood be one . one be ?","if entities . find ( hood ) ! = None : newline newtab entities [ hood ] [ be ] = hood newline print ( one [ be ] ) newline"
"guy attend an . guy attend ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ attend ] = an newline print ( guy [ attend ] ) newline"
"red scarf white . white scarf ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ scarf ] = red newline print ( white [ scarf ] ) newline"
"people perform amazing . amazing perform ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ perform ] = people newline print ( amazing [ perform ] ) newline"
"child wear black . black wear ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wear ] = child newline print ( black [ wear ] ) newline"
"track wear wool . track wear ?","if entities . find ( track ) ! = None : newline newtab entities [ track ] [ wear ] = wool newline print ( track [ wear ] ) newline"
"outfit be laughing . laughing be ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ be ] = outfit newline print ( laughing [ be ] ) newline"
"student demonstrate white . white demonstrate ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ demonstrate ] = student newline print ( white [ demonstrate ] ) newline"
"tourist be both . both be ?","if entities . find ( tourist ) ! = None : newline newtab entities [ tourist ] [ be ] = tourist newline print ( both [ be ] ) newline"
"green cheer while . green cheer ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ cheer ] = while newline print ( green [ cheer ] ) newline"
"man wear sunglasses . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = sunglasses newline print ( man [ wear ] ) newline"
"dancer be out . out be ?","if entities . find ( dancer ) ! = None : newline newtab entities [ dancer ] [ be ] = dancer newline print ( out [ be ] ) newline"
"worker be unable . unable be ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ be ] = worker newline print ( unable [ be ] ) newline"
"he be several . several be ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ be ] = he newline print ( several [ be ] ) newline"
"kid be upside . kid be ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ be ] = upside newline print ( kid [ be ] ) newline"
"woman be sleeping . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sleeping newline print ( woman [ be ] ) newline"
"jersey shake hand . jersey shake ?","if entities . find ( jersey ) ! = None : newline newtab entities [ jersey ] [ shake ] = hand newline print ( jersey [ shake ] ) newline"
"woman wash dish . woman wash ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wash ] = dish newline print ( woman [ wash ] ) newline"
"man have multiple . multiple have ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ have ] = man newline print ( multiple [ have ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"men wear blue . blue wear ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ wear ] = men newline print ( blue [ wear ] ) newline"
"man be swinging . swinging be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( swinging [ be ] ) newline"
"people dress small . small dress ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ dress ] = people newline print ( small [ dress ] ) newline"
"can be ballet . can be ?","if entities . find ( can ) ! = None : newline newtab entities [ can ] [ be ] = ballet newline print ( can [ be ] ) newline"
"boy stand next . next stand ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ stand ] = boy newline print ( next [ stand ] ) newline"
"while ride camel . while ride ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ ride ] = camel newline print ( while [ ride ] ) newline"
"water lick white . white lick ?","if entities . find ( water ) ! = None : newline newtab entities [ water ] [ lick ] = water newline print ( white [ lick ] ) newline"
"dog walk out . out walk ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ walk ] = dog newline print ( out [ walk ] ) newline"
"man be an . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = an newline print ( man [ be ] ) newline"
"flower be teaching . flower be ?","if entities . find ( flower ) ! = None : newline newtab entities [ flower ] [ be ] = teaching newline print ( flower [ be ] ) newline"
"worker work glove . worker work ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ work ] = glove newline print ( worker [ work ] ) newline"
"family be thursday . family be ?","if entities . find ( family ) ! = None : newline newtab entities [ family ] [ be ] = thursday newline print ( family [ be ] ) newline"
"turban look factory . turban look ?","if entities . find ( turban ) ! = None : newline newtab entities [ turban ] [ look ] = factory newline print ( turban [ look ] ) newline"
"woman be full . full be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( full [ be ] ) newline"
"an axe two . an axe ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ axe ] = two newline print ( an [ axe ] ) newline"
"sash perform some . some perform ?","if entities . find ( sash ) ! = None : newline newtab entities [ sash ] [ perform ] = sash newline print ( some [ perform ] ) newline"
"girl be sleeping . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = sleeping newline print ( girl [ be ] ) newline"
"woman play musical . musical play ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ play ] = woman newline print ( musical [ play ] ) newline"
"puppy play table . puppy play ?","if entities . find ( puppy ) ! = None : newline newtab entities [ puppy ] [ play ] = table newline print ( puppy [ play ] ) newline"
"people be out . out be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( out [ be ] ) newline"
"baby be busy . busy be ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ be ] = baby newline print ( busy [ be ] ) newline"
"orange play musical . musical play ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ play ] = orange newline print ( musical [ play ] ) newline"
"man cover mountain . man cover ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ cover ] = mountain newline print ( man [ cover ] ) newline"
"dog shake white . white shake ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ shake ] = dog newline print ( white [ shake ] ) newline"
"gear walk next . next walk ?","if entities . find ( gear ) ! = None : newline newtab entities [ gear ] [ walk ] = gear newline print ( next [ walk ] ) newline"
"red bucket full . full bucket ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ bucket ] = red newline print ( full [ bucket ] ) newline"
"child jump out . out jump ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ jump ] = child newline print ( out [ jump ] ) newline"
"player be multicolored . multicolored be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = player newline print ( multicolored [ be ] ) newline"
"jeans jump house . jeans jump ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ jump ] = house newline print ( jeans [ jump ] ) newline"
"cap be stupid . stupid be ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ be ] = cap newline print ( stupid [ be ] ) newline"
"flannel jump high . high jump ?","if entities . find ( flannel ) ! = None : newline newtab entities [ flannel ] [ jump ] = flannel newline print ( high [ jump ] ) newline"
"jacket be rock . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = rock newline print ( jacket [ be ] ) newline"
"men stand next . next stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = men newline print ( next [ stand ] ) newline"
"men be many . many be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( many [ be ] ) newline"
"child wear apron . child wear ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wear ] = apron newline print ( child [ wear ] ) newline"
"intersection fill out . out fill ?","if entities . find ( intersection ) ! = None : newline newtab entities [ intersection ] [ fill ] = intersection newline print ( out [ fill ] ) newline"
"people gather various . various gather ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ gather ] = people newline print ( various [ gather ] ) newline"
"jacket be guitar . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = guitar newline print ( jacket [ be ] ) newline"
"snow use an . snow use ?","if entities . find ( snow ) ! = None : newline newtab entities [ snow ] [ use ] = an newline print ( snow [ use ] ) newline"
"ocean watch white . white watch ?","if entities . find ( ocean ) ! = None : newline newtab entities [ ocean ] [ watch ] = ocean newline print ( white [ watch ] ) newline"
"glove be snow . glove be ?","if entities . find ( glove ) ! = None : newline newtab entities [ glove ] [ be ] = snow newline print ( glove [ be ] ) newline"
"men sit next . next sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = men newline print ( next [ sit ] ) newline"
"man play soccer . man play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = soccer newline print ( man [ play ] ) newline"
"dog catch air . dog catch ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ catch ] = air newline print ( dog [ catch ] ) newline"
"people decide white . white decide ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ decide ] = people newline print ( white [ decide ] ) newline"
"flower take advantage . flower take ?","if entities . find ( flower ) ! = None : newline newtab entities [ flower ] [ take ] = advantage newline print ( flower [ take ] ) newline"
"woman be teaching . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = teaching newline print ( woman [ be ] ) newline"
"headphone connect green . headphone connect ?","if entities . find ( headphone ) ! = None : newline newtab entities [ headphone ] [ connect ] = green newline print ( headphone [ connect ] ) newline"
"quarterback hold out . out hold ?","if entities . find ( quarterback ) ! = None : newline newtab entities [ quarterback ] [ hold ] = quarterback newline print ( out [ hold ] ) newline"
"child be two . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = two newline print ( child [ be ] ) newline"
"while balance several . several balance ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ balance ] = while newline print ( several [ balance ] ) newline"
"girl wear black . black wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = girl newline print ( black [ wear ] ) newline"
"jacket look blond . jacket look ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ look ] = blond newline print ( jacket [ look ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"bench watch some . some watch ?","if entities . find ( bench ) ! = None : newline newtab entities [ bench ] [ watch ] = bench newline print ( some [ watch ] ) newline"
"it back white . white back ?","if entities . find ( it ) ! = None : newline newtab entities [ it ] [ back ] = it newline print ( white [ back ] ) newline"
"dog play guitar . dog play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = guitar newline print ( dog [ play ] ) newline"
"woman dance alone . alone dance ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dance ] = woman newline print ( alone [ dance ] ) newline"
"people be asleep . asleep be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( asleep [ be ] ) newline"
"girl create intricate . intricate create ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ create ] = girl newline print ( intricate [ create ] ) newline"
"orange vest men . orange vest ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ vest ] = men newline print ( orange [ vest ] ) newline"
"man be belongings . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = belongings newline print ( man [ be ] ) newline"
"while have sign . while have ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ have ] = sign newline print ( while [ have ] ) newline"
"man wear an . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = an newline print ( man [ wear ] ) newline"
"field have some . some have ?","if entities . find ( field ) ! = None : newline newtab entities [ field ] [ have ] = field newline print ( some [ have ] ) newline"
"boy be temporary . temporary be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( temporary [ be ] ) newline"
"orange coat while . orange coat ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ coat ] = while newline print ( orange [ coat ] ) newline"
"girl ride bike . girl ride ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ ride ] = bike newline print ( girl [ ride ] ) newline"
"man be part . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = part newline print ( man [ be ] ) newline"
"child sit next . next sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = child newline print ( next [ sit ] ) newline"
"man wear colorful . colorful wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( colorful [ wear ] ) newline"
"red shirt swinging . swinging shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( swinging [ shirt ] ) newline"
"flower be out . out be ?","if entities . find ( flower ) ! = None : newline newtab entities [ flower ] [ be ] = flower newline print ( out [ be ] ) newline"
"dog be happy . happy be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( happy [ be ] ) newline"
"bench surround one . one surround ?","if entities . find ( bench ) ! = None : newline newtab entities [ bench ] [ surround ] = bench newline print ( one [ surround ] ) newline"
"apron work hard . hard work ?","if entities . find ( apron ) ! = None : newline newtab entities [ apron ] [ work ] = apron newline print ( hard [ work ] ) newline"
"dog travel white . white travel ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ travel ] = dog newline print ( white [ travel ] ) newline"
"jacket see next . next see ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ see ] = jacket newline print ( next [ see ] ) newline"
"people watch another . another watch ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ watch ] = people newline print ( another [ watch ] ) newline"
"ice skate while . ice skate ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ skate ] = while newline print ( ice [ skate ] ) newline"
"man be upside . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = upside newline print ( man [ be ] ) newline"
"native be full . full be ?","if entities . find ( native ) ! = None : newline newtab entities [ native ] [ be ] = native newline print ( full [ be ] ) newline"
"field harvest fruit . field harvest ?","if entities . find ( field ) ! = None : newline newtab entities [ field ] [ harvest ] = fruit newline print ( field [ harvest ] ) newline"
"girl jump out . out jump ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ jump ] = girl newline print ( out [ jump ] ) newline"
"wedding apparel while . wedding apparel ?","if entities . find ( wedding ) ! = None : newline newtab entities [ wedding ] [ apparel ] = while newline print ( wedding [ apparel ] ) newline"
"worker be many . many be ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ be ] = worker newline print ( many [ be ] ) newline"
"horse walk out . out walk ?","if entities . find ( horse ) ! = None : newline newtab entities [ horse ] [ walk ] = horse newline print ( out [ walk ] ) newline"
"bull be four . bull be ?","if entities . find ( bull ) ! = None : newline newtab entities [ bull ] [ be ] = four newline print ( bull [ be ] ) newline"
"girl wave small . small wave ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wave ] = girl newline print ( small [ wave ] ) newline"
"person wear jeans . person wear ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ wear ] = jeans newline print ( person [ wear ] ) newline"
"woman be sheep . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sheep newline print ( woman [ be ] ) newline"
"toddler dress swinging . swinging dress ?","if entities . find ( toddler ) ! = None : newline newtab entities [ toddler ] [ dress ] = toddler newline print ( swinging [ dress ] ) newline"
"men sit while . men sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = while newline print ( men [ sit ] ) newline"
"horse buck bull . horse buck ?","if entities . find ( horse ) ! = None : newline newtab entities [ horse ] [ buck ] = bull newline print ( horse [ buck ] ) newline"
"woman wear apron . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = apron newline print ( woman [ wear ] ) newline"
"woman wait next . next wait ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wait ] = woman newline print ( next [ wait ] ) newline"
"boy hold sunglasses . boy hold ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ hold ] = sunglasses newline print ( boy [ hold ] ) newline"
"sweater be one . one be ?","if entities . find ( sweater ) ! = None : newline newtab entities [ sweater ] [ be ] = sweater newline print ( one [ be ] ) newline"
"people sweep debris . people sweep ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sweep ] = debris newline print ( people [ sweep ] ) newline"
"men be three . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = three newline print ( men [ be ] ) newline"
"underwear jump high . high jump ?","if entities . find ( underwear ) ! = None : newline newtab entities [ underwear ] [ jump ] = underwear newline print ( high [ jump ] ) newline"
"jacket walk next . next walk ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ walk ] = jacket newline print ( next [ walk ] ) newline"
"man smile while . man smile ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ smile ] = while newline print ( man [ smile ] ) newline"
"top be stupid . stupid be ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ be ] = top newline print ( stupid [ be ] ) newline"
"wind blow four . wind blow ?","if entities . find ( wind ) ! = None : newline newtab entities [ wind ] [ blow ] = four newline print ( wind [ blow ] ) newline"
"jacket slide white . white slide ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ slide ] = jacket newline print ( white [ slide ] ) newline"
"baby wrap female . female wrap ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ wrap ] = baby newline print ( female [ wrap ] ) newline"
"while smile next . next smile ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ smile ] = while newline print ( next [ smile ] ) newline"
"quarterback be wooded . wooded be ?","if entities . find ( quarterback ) ! = None : newline newtab entities [ quarterback ] [ be ] = quarterback newline print ( wooded [ be ] ) newline"
"child look confused . confused look ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ look ] = child newline print ( confused [ look ] ) newline"
"man play banjo . man play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = banjo newline print ( man [ play ] ) newline"
"man stand wave . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = wave newline print ( man [ stand ] ) newline"
"suit shake hand . suit shake ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ shake ] = hand newline print ( suit [ shake ] ) newline"
"equipment study two . equipment study ?","if entities . find ( equipment ) ! = None : newline newtab entities [ equipment ] [ study ] = two newline print ( equipment [ study ] ) newline"
"red shirt next . next shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( next [ shirt ] ) newline"
"dog run while . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = while newline print ( dog [ run ] ) newline"
"cowboy be next . next be ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ be ] = cowboy newline print ( next [ be ] ) newline"
"man stand alone . alone stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( alone [ stand ] ) newline"
"man watch some . some watch ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ watch ] = man newline print ( some [ watch ] ) newline"
"headscarf be clustered . clustered be ?","if entities . find ( headscarf ) ! = None : newline newtab entities [ headscarf ] [ be ] = headscarf newline print ( clustered [ be ] ) newline"
"man dress out . out dress ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ dress ] = man newline print ( out [ dress ] ) newline"
"woman eat fast . fast eat ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ eat ] = woman newline print ( fast [ eat ] ) newline"
"jacket be blue . blue be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = jacket newline print ( blue [ be ] ) newline"
"gray pant black . black pant ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ pant ] = gray newline print ( black [ pant ] ) newline"
"worker sweep flower . worker sweep ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ sweep ] = flower newline print ( worker [ sweep ] ) newline"
"woman carry two . woman carry ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ carry ] = two newline print ( woman [ carry ] ) newline"
"player scoop ice . player scoop ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ scoop ] = ice newline print ( player [ scoop ] ) newline"
"people be disinterested . disinterested be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( disinterested [ be ] ) newline"
"band be group . band be ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ be ] = group newline print ( band [ be ] ) newline"
"who be sleeping . who be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = sleeping newline print ( who [ be ] ) newline"
"jacket jump obstacle . jacket jump ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ jump ] = obstacle newline print ( jacket [ jump ] ) newline"
"yarmulke be blue . blue be ?","if entities . find ( yarmulke ) ! = None : newline newtab entities [ yarmulke ] [ be ] = yarmulke newline print ( blue [ be ] ) newline"
"baby be an . baby be ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ be ] = an newline print ( baby [ be ] ) newline"
"chair hold sunglasses . chair hold ?","if entities . find ( chair ) ! = None : newline newtab entities [ chair ] [ hold ] = sunglasses newline print ( chair [ hold ] ) newline"
"man wear white . white wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( white [ wear ] ) newline"
"woman be textile . textile be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( textile [ be ] ) newline"
"red be four . red be ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ be ] = four newline print ( red [ be ] ) newline"
"dog be three . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = three newline print ( dog [ be ] ) newline"
"woman be sleeping . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sleeping newline print ( woman [ be ] ) newline"
"boy have graffiti . boy have ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ have ] = graffiti newline print ( boy [ have ] ) newline"
"red shirt next . next shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( next [ shirt ] ) newline"
"man be fun . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = fun newline print ( man [ be ] ) newline"
"child be mouth . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = mouth newline print ( child [ be ] ) newline"
"man wear jeans . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = jeans newline print ( man [ wear ] ) newline"
"exterior fire out . out fire ?","if entities . find ( exterior ) ! = None : newline newtab entities [ exterior ] [ fire ] = exterior newline print ( out [ fire ] ) newline"
"man crouch white . white crouch ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ crouch ] = man newline print ( white [ crouch ] ) newline"
"man dress all . all dress ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ dress ] = man newline print ( all [ dress ] ) newline"
"step eat ice . step eat ?","if entities . find ( step ) ! = None : newline newtab entities [ step ] [ eat ] = ice newline print ( step [ eat ] ) newline"
"woman sit while . woman sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = while newline print ( woman [ sit ] ) newline"
"team be two . team be ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ be ] = two newline print ( team [ be ] ) newline"
"man walk home . man walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = home newline print ( man [ walk ] ) newline"
"while play professional . professional play ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ play ] = while newline print ( professional [ play ] ) newline"
"girl watch someone . girl watch ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ watch ] = someone newline print ( girl [ watch ] ) newline"
"kilt be sleeping . kilt be ?","if entities . find ( kilt ) ! = None : newline newtab entities [ kilt ] [ be ] = sleeping newline print ( kilt [ be ] ) newline"
"plate fill street . plate fill ?","if entities . find ( plate ) ! = None : newline newtab entities [ plate ] [ fill ] = street newline print ( plate [ fill ] ) newline"
"leg ski board . leg ski ?","if entities . find ( leg ) ! = None : newline newtab entities [ leg ] [ ski ] = board newline print ( leg [ ski ] ) newline"
"student work wood . student work ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ work ] = wood newline print ( student [ work ] ) newline"
"man wear bright . bright wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( bright [ wear ] ) newline"
"green dress little . little dress ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ dress ] = green newline print ( little [ dress ] ) newline"
"man stand or . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = or newline print ( man [ stand ] ) newline"
"ice cream cone . ice cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = cone newline print ( ice [ cream ] ) newline"
"woman cross light . light cross ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ cross ] = woman newline print ( light [ cross ] ) newline"
"boy cover another . another cover ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ cover ] = boy newline print ( another [ cover ] ) newline"
"woman wear sandal . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = sandal newline print ( woman [ wear ] ) newline"
"man wear white . white wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( white [ wear ] ) newline"
"boy be out . out be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( out [ be ] ) newline"
"people be rock . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = rock newline print ( people [ be ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"man be several . several be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( several [ be ] ) newline"
"woman be member . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = member newline print ( woman [ be ] ) newline"
"man stand or . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = or newline print ( man [ stand ] ) newline"
"child play colorful . colorful play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = child newline print ( colorful [ play ] ) newline"
"boy wear an . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = an newline print ( boy [ wear ] ) newline"
"woman hold red . woman hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = red newline print ( woman [ hold ] ) newline"
"bottle be all . all be ?","if entities . find ( bottle ) ! = None : newline newtab entities [ bottle ] [ be ] = bottle newline print ( all [ be ] ) newline"
"gray pant other . other pant ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ pant ] = gray newline print ( other [ pant ] ) newline"
"gray shirt swinging . swinging shirt ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ shirt ] = gray newline print ( swinging [ shirt ] ) newline"
"woman be many . many be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( many [ be ] ) newline"
"people go wild . wild go ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ go ] = people newline print ( wild [ go ] ) newline"
"child be shielding . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = shielding newline print ( child [ be ] ) newline"
"brown shirt point . brown shirt ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ shirt ] = point newline print ( brown [ shirt ] ) newline"
"dog jump while . dog jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = while newline print ( dog [ jump ] ) newline"
"costume be asleep . asleep be ?","if entities . find ( costume ) ! = None : newline newtab entities [ costume ] [ be ] = costume newline print ( asleep [ be ] ) newline"
"child be bike . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = bike newline print ( child [ be ] ) newline"
"dog appear two . dog appear ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ appear ] = two newline print ( dog [ appear ] ) newline"
"cloth look pretty . pretty look ?","if entities . find ( cloth ) ! = None : newline newtab entities [ cloth ] [ look ] = cloth newline print ( pretty [ look ] ) newline"
"goalie reach an . goalie reach ?","if entities . find ( goalie ) ! = None : newline newtab entities [ goalie ] [ reach ] = an newline print ( goalie [ reach ] ) newline"
"worker fit model . worker fit ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ fit ] = model newline print ( worker [ fit ] ) newline"
"orange be girl . orange be ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ be ] = girl newline print ( orange [ be ] ) newline"
"man be underway . underway be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( underway [ be ] ) newline"
"dog be sleeping . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = sleeping newline print ( dog [ be ] ) newline"
"girl jump next . next jump ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ jump ] = girl newline print ( next [ jump ] ) newline"
"couple rejoice white . white rejoice ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ rejoice ] = couple newline print ( white [ rejoice ] ) newline"
"lady wear camouflage . lady wear ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ wear ] = camouflage newline print ( lady [ wear ] ) newline"
"green shirt plaid . green shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = plaid newline print ( green [ shirt ] ) newline"
"kid draw carriage . kid draw ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ draw ] = carriage newline print ( kid [ draw ] ) newline"
"room fill some . some fill ?","if entities . find ( room ) ! = None : newline newtab entities [ room ] [ fill ] = room newline print ( some [ fill ] ) newline"
"student spend white . white spend ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ spend ] = student newline print ( white [ spend ] ) newline"
"ice ground next . next ground ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ ground ] = ice newline print ( next [ ground ] ) newline"
"head crowd next . next crowd ?","if entities . find ( head ) ! = None : newline newtab entities [ head ] [ crowd ] = head newline print ( next [ crowd ] ) newline"
"woman wear white . white wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( white [ wear ] ) newline"
"man pose next . next pose ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ pose ] = man newline print ( next [ pose ] ) newline"
"turtleneck jump competition . turtleneck jump ?","if entities . find ( turtleneck ) ! = None : newline newtab entities [ turtleneck ] [ jump ] = competition newline print ( turtleneck [ jump ] ) newline"
"christmas tree trunk . christmas tree ?","if entities . find ( christmas ) ! = None : newline newtab entities [ christmas ] [ tree ] = trunk newline print ( christmas [ tree ] ) newline"
"while taste white . white taste ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ taste ] = while newline print ( white [ taste ] ) newline"
"girl lie body . girl lie ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ lie ] = body newline print ( girl [ lie ] ) newline"
"while speak or . while speak ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ speak ] = or newline print ( while [ speak ] ) newline"
"player be several . several be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = player newline print ( several [ be ] ) newline"
"store back while . store back ?","if entities . find ( store ) ! = None : newline newtab entities [ store ] [ back ] = while newline print ( store [ back ] ) newline"
"carrier place first . first place ?","if entities . find ( carrier ) ! = None : newline newtab entities [ carrier ] [ place ] = carrier newline print ( first [ place ] ) newline"
"men be sleeping . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = sleeping newline print ( men [ be ] ) newline"
"baseball bat high . high bat ?","if entities . find ( baseball ) ! = None : newline newtab entities [ baseball ] [ bat ] = baseball newline print ( high [ bat ] ) newline"
"orange dress swinging . swinging dress ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ dress ] = orange newline print ( swinging [ dress ] ) newline"
"sweater hold tongs . sweater hold ?","if entities . find ( sweater ) ! = None : newline newtab entities [ sweater ] [ hold ] = tongs newline print ( sweater [ hold ] ) newline"
"dog roll fresh . fresh roll ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ roll ] = dog newline print ( fresh [ roll ] ) newline"
"child eat dinner . child eat ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ eat ] = dinner newline print ( child [ eat ] ) newline"
"man be people . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = people newline print ( man [ be ] ) newline"
"woman pray white . white pray ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ pray ] = woman newline print ( white [ pray ] ) newline"
"red short use . red short ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ short ] = use newline print ( red [ short ] ) newline"
"orange kayak white . white kayak ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ kayak ] = orange newline print ( white [ kayak ] ) newline"
"team be young . team be ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ be ] = young newline print ( team [ be ] ) newline"
"people carry an . people carry ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ carry ] = an newline print ( people [ carry ] ) newline"
"suite speak or . suite speak ?","if entities . find ( suite ) ! = None : newline newtab entities [ suite ] [ speak ] = or newline print ( suite [ speak ] ) newline"
"kid play various . various play ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ play ] = kid newline print ( various [ play ] ) newline"
"people row white . white row ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ row ] = people newline print ( white [ row ] ) newline"
"man take out . out take ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ take ] = man newline print ( out [ take ] ) newline"
"while load white . white load ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ load ] = while newline print ( white [ load ] ) newline"
"discussion sit next . next sit ?","if entities . find ( discussion ) ! = None : newline newtab entities [ discussion ] [ sit ] = discussion newline print ( next [ sit ] ) newline"
"people walk guard . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = guard newline print ( people [ walk ] ) newline"
"boy be ironing . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = ironing newline print ( boy [ be ] ) newline"
"beard play while . beard play ?","if entities . find ( beard ) ! = None : newline newtab entities [ beard ] [ play ] = while newline print ( beard [ play ] ) newline"
"he play various . various play ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ play ] = he newline print ( various [ play ] ) newline"
"camera be food . camera be ?","if entities . find ( camera ) ! = None : newline newtab entities [ camera ] [ be ] = food newline print ( camera [ be ] ) newline"
"dog dig hole . dog dig ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ dig ] = hole newline print ( dog [ dig ] ) newline"
"demonstrator wait next . next wait ?","if entities . find ( demonstrator ) ! = None : newline newtab entities [ demonstrator ] [ wait ] = demonstrator newline print ( next [ wait ] ) newline"
"while swim underwater . underwater swim ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ swim ] = while newline print ( underwater [ swim ] ) newline"
"people be two . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = two newline print ( people [ be ] ) newline"
"people sit while . people sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = while newline print ( people [ sit ] ) newline"
"bowtie be sleeping . bowtie be ?","if entities . find ( bowtie ) ! = None : newline newtab entities [ bowtie ] [ be ] = sleeping newline print ( bowtie [ be ] ) newline"
"dog stand next . next stand ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ stand ] = dog newline print ( next [ stand ] ) newline"
"dew rag man . dew rag ?","if entities . find ( dew ) ! = None : newline newtab entities [ dew ] [ rag ] = man newline print ( dew [ rag ] ) newline"
"person wear yellow . yellow wear ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ wear ] = person newline print ( yellow [ wear ] ) newline"
"red clothe next . next clothe ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ clothe ] = red newline print ( next [ clothe ] ) newline"
"biker leap high . high leap ?","if entities . find ( biker ) ! = None : newline newtab entities [ biker ] [ leap ] = biker newline print ( high [ leap ] ) newline"
"runner make funny . funny make ?","if entities . find ( runner ) ! = None : newline newtab entities [ runner ] [ make ] = runner newline print ( funny [ make ] ) newline"
"student be food . student be ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ be ] = food newline print ( student [ be ] ) newline"
"cowboy ride camel . cowboy ride ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ ride ] = camel newline print ( cowboy [ ride ] ) newline"
"people enjoy dinner . people enjoy ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ enjoy ] = dinner newline print ( people [ enjoy ] ) newline"
"men wear sunglasses . men wear ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ wear ] = sunglasses newline print ( men [ wear ] ) newline"
"costume entertain people . costume entertain ?","if entities . find ( costume ) ! = None : newline newtab entities [ costume ] [ entertain ] = people newline print ( costume [ entertain ] ) newline"
"kid play instrument . kid play ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ play ] = instrument newline print ( kid [ play ] ) newline"
"pier be two . pier be ?","if entities . find ( pier ) ! = None : newline newtab entities [ pier ] [ be ] = two newline print ( pier [ be ] ) newline"
"man wear hard . hard wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( hard [ wear ] ) newline"
"class be opening . class be ?","if entities . find ( class ) ! = None : newline newtab entities [ class ] [ be ] = opening newline print ( class [ be ] ) newline"
"cap swim underwater . underwater swim ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ swim ] = cap newline print ( underwater [ swim ] ) newline"
"two have white . white have ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ have ] = two newline print ( white [ have ] ) newline"
"who be out . out be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( out [ be ] ) newline"
"jeans be sheep . jeans be ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ be ] = sheep newline print ( jeans [ be ] ) newline"
"while enjoy it . while enjoy ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ enjoy ] = it newline print ( while [ enjoy ] ) newline"
"activity involve white . white involve ?","if entities . find ( activity ) ! = None : newline newtab entities [ activity ] [ involve ] = activity newline print ( white [ involve ] ) newline"
"bag be three . bag be ?","if entities . find ( bag ) ! = None : newline newtab entities [ bag ] [ be ] = three newline print ( bag [ be ] ) newline"
"snowboarder take picture . snowboarder take ?","if entities . find ( snowboarder ) ! = None : newline newtab entities [ snowboarder ] [ take ] = picture newline print ( snowboarder [ take ] ) newline"
"city square garden . city square ?","if entities . find ( city ) ! = None : newline newtab entities [ city ] [ square ] = garden newline print ( city [ square ] ) newline"
"car race dog . car race ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ race ] = dog newline print ( car [ race ] ) newline"
"people be airborne . airborne be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( airborne [ be ] ) newline"
"gentleman pour cement . gentleman pour ?","if entities . find ( gentleman ) ! = None : newline newtab entities [ gentleman ] [ pour ] = cement newline print ( gentleman [ pour ] ) newline"
"player become entangled . entangled become ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ become ] = player newline print ( entangled [ become ] ) newline"
"while look one . one look ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ look ] = while newline print ( one [ look ] ) newline"
"worker prepare some . some prepare ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ prepare ] = worker newline print ( some [ prepare ] ) newline"
"worker clean out . out clean ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ clean ] = worker newline print ( out [ clean ] ) newline"
"woman go parasailing . woman go ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ go ] = parasailing newline print ( woman [ go ] ) newline"
"town square table . town square ?","if entities . find ( town ) ! = None : newline newtab entities [ town ] [ square ] = table newline print ( town [ square ] ) newline"
"green motorcycle racer . green motorcycle ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ motorcycle ] = racer newline print ( green [ motorcycle ] ) newline"
"flower shirt who . flower shirt ?","if entities . find ( flower ) ! = None : newline newtab entities [ flower ] [ shirt ] = who newline print ( flower [ shirt ] ) newline"
"helmet stand next . next stand ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ stand ] = helmet newline print ( next [ stand ] ) newline"
"sign ask white . white ask ?","if entities . find ( sign ) ! = None : newline newtab entities [ sign ] [ ask ] = sign newline print ( white [ ask ] ) newline"
"action shoot white . white shoot ?","if entities . find ( action ) ! = None : newline newtab entities [ action ] [ shoot ] = action newline print ( white [ shoot ] ) newline"
"man walk while . man walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = while newline print ( man [ walk ] ) newline"
"kid play tennis . kid play ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ play ] = tennis newline print ( kid [ play ] ) newline"
"person wear olive . person wear ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ wear ] = olive newline print ( person [ wear ] ) newline"
"gray build human . human build ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ build ] = gray newline print ( human [ build ] ) newline"
"team converge two . team converge ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ converge ] = two newline print ( team [ converge ] ) newline"
"man play soccer . man play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = soccer newline print ( man [ play ] ) newline"
"woman hold newborn . newborn hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = woman newline print ( newborn [ hold ] ) newline"
"hiker be rock . hiker be ?","if entities . find ( hiker ) ! = None : newline newtab entities [ hiker ] [ be ] = rock newline print ( hiker [ be ] ) newline"
"face touch nose . face touch ?","if entities . find ( face ) ! = None : newline newtab entities [ face ] [ touch ] = nose newline print ( face [ touch ] ) newline"
"red ride an . red ride ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ ride ] = an newline print ( red [ ride ] ) newline"
"girl stand men . girl stand ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ stand ] = men newline print ( girl [ stand ] ) newline"
"stethoscope prepare food . stethoscope prepare ?","if entities . find ( stethoscope ) ! = None : newline newtab entities [ stethoscope ] [ prepare ] = food newline print ( stethoscope [ prepare ] ) newline"
"men be an . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = an newline print ( men [ be ] ) newline"
"people play basketball . people play ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ play ] = basketball newline print ( people [ play ] ) newline"
"people be next . next be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( next [ be ] ) newline"
"player wear blue . blue wear ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ wear ] = player newline print ( blue [ wear ] ) newline"
"asian draw chinese . chinese draw ?","if entities . find ( asian ) ! = None : newline newtab entities [ asian ] [ draw ] = asian newline print ( chinese [ draw ] ) newline"
"woman hold white . white hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = woman newline print ( white [ hold ] ) newline"
"man be laughing . laughing be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( laughing [ be ] ) newline"
"silver bead white . white bead ?","if entities . find ( silver ) ! = None : newline newtab entities [ silver ] [ bead ] = silver newline print ( white [ bead ] ) newline"
"woman be swinging . swinging be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( swinging [ be ] ) newline"
"men stand person . men stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = person newline print ( men [ stand ] ) newline"
"man be full . full be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( full [ be ] ) newline"
"jersey be opening . jersey be ?","if entities . find ( jersey ) ! = None : newline newtab entities [ jersey ] [ be ] = opening newline print ( jersey [ be ] ) newline"
"german shepherd white . white shepherd ?","if entities . find ( german ) ! = None : newline newtab entities [ german ] [ shepherd ] = german newline print ( white [ shepherd ] ) newline"
"while wear baseball . while wear ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ wear ] = baseball newline print ( while [ wear ] ) newline"
"individual sit while . individual sit ?","if entities . find ( individual ) ! = None : newline newtab entities [ individual ] [ sit ] = while newline print ( individual [ sit ] ) newline"
"woman point while . woman point ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ point ] = while newline print ( woman [ point ] ) newline"
"child wear helmet . child wear ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wear ] = helmet newline print ( child [ wear ] ) newline"
"person be hunched . hunched be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = person newline print ( hunched [ be ] ) newline"
"rainbow color uniform . uniform color ?","if entities . find ( rainbow ) ! = None : newline newtab entities [ rainbow ] [ color ] = rainbow newline print ( uniform [ color ] ) newline"
"lawn cover another . another cover ?","if entities . find ( lawn ) ! = None : newline newtab entities [ lawn ] [ cover ] = lawn newline print ( another [ cover ] ) newline"
"outfit be hundred . outfit be ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ be ] = hundred newline print ( outfit [ be ] ) newline"
"girl be three . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = three newline print ( girl [ be ] ) newline"
"red shirt man . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = man newline print ( red [ shirt ] ) newline"
"man hold multicolored . multicolored hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = man newline print ( multicolored [ hold ] ) newline"
"people be airborne . airborne be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( airborne [ be ] ) newline"
"wineglass stand next . next stand ?","if entities . find ( wineglass ) ! = None : newline newtab entities [ wineglass ] [ stand ] = wineglass newline print ( next [ stand ] ) newline"
"girl play an . girl play ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ play ] = an newline print ( girl [ play ] ) newline"
"girl make angry . angry make ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ make ] = girl newline print ( angry [ make ] ) newline"
"man look unsure . unsure look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = man newline print ( unsure [ look ] ) newline"
"or fill trash . or fill ?","if entities . find ( or ) ! = None : newline newtab entities [ or ] [ fill ] = trash newline print ( or [ fill ] ) newline"
"gray shirt clean . clean shirt ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ shirt ] = gray newline print ( clean [ shirt ] ) newline"
"index finger while . index finger ?","if entities . find ( index ) ! = None : newline newtab entities [ index ] [ finger ] = while newline print ( index [ finger ] ) newline"
"eye cover another . another cover ?","if entities . find ( eye ) ! = None : newline newtab entities [ eye ] [ cover ] = eye newline print ( another [ cover ] ) newline"
"woman be sledding . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sledding newline print ( woman [ be ] ) newline"
"dirt fly machine . dirt fly ?","if entities . find ( dirt ) ! = None : newline newtab entities [ dirt ] [ fly ] = machine newline print ( dirt [ fly ] ) newline"
"man wear long . long wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( long [ wear ] ) newline"
"while talk next . next talk ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ talk ] = while newline print ( next [ talk ] ) newline"
"snow cover another . another cover ?","if entities . find ( snow ) ! = None : newline newtab entities [ snow ] [ cover ] = snow newline print ( another [ cover ] ) newline"
"man wear an . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = an newline print ( man [ wear ] ) newline"
"dog lick white . white lick ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ lick ] = dog newline print ( white [ lick ] ) newline"
"man clean some . some clean ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ clean ] = man newline print ( some [ clean ] ) newline"
"child open another . another open ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ open ] = child newline print ( another [ open ] ) newline"
"dancer wear white . white wear ?","if entities . find ( dancer ) ! = None : newline newtab entities [ dancer ] [ wear ] = dancer newline print ( white [ wear ] ) newline"
"people walk right . right walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( right [ walk ] ) newline"
"while hold an . while hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = an newline print ( while [ hold ] ) newline"
"boy run out . out run ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ run ] = boy newline print ( out [ run ] ) newline"
"street be distance . street be ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ be ] = distance newline print ( street [ be ] ) newline"
"men convene two . men convene ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ convene ] = two newline print ( men [ convene ] ) newline"
"man be rock . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = rock newline print ( man [ be ] ) newline"
"musician play tennis . musician play ?","if entities . find ( musician ) ! = None : newline newtab entities [ musician ] [ play ] = tennis newline print ( musician [ play ] ) newline"
"men sit next . next sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = men newline print ( next [ sit ] ) newline"
"two pair white . white pair ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ pair ] = two newline print ( white [ pair ] ) newline"
"men play electric . electric play ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ play ] = men newline print ( electric [ play ] ) newline"
"dog be sleeping . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = sleeping newline print ( dog [ be ] ) newline"
"rock overlook an . rock overlook ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ overlook ] = an newline print ( rock [ overlook ] ) newline"
"man be opening . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = opening newline print ( man [ be ] ) newline"
"kid wear an . kid wear ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ wear ] = an newline print ( kid [ wear ] ) newline"
"car be busy . busy be ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ be ] = car newline print ( busy [ be ] ) newline"
"child fix gear . child fix ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ fix ] = gear newline print ( child [ fix ] ) newline"
"dog be all . all be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( all [ be ] ) newline"
"brown coat gesture . brown coat ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ coat ] = gesture newline print ( brown [ coat ] ) newline"
"dog be sleeping . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = sleeping newline print ( dog [ be ] ) newline"
"woman wear sleeveless . sleeveless wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( sleeveless [ wear ] ) newline"
"couple enjoy some . some enjoy ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ enjoy ] = couple newline print ( some [ enjoy ] ) newline"
"man stand applause . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = applause newline print ( man [ stand ] ) newline"
"angel await white . white await ?","if entities . find ( angel ) ! = None : newline newtab entities [ angel ] [ await ] = angel newline print ( white [ await ] ) newline"
"man hold flower . man hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = flower newline print ( man [ hold ] ) newline"
"while hold black . black hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = while newline print ( black [ hold ] ) newline"
"boy be staring . staring be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( staring [ be ] ) newline"
"couple take great . great take ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ take ] = couple newline print ( great [ take ] ) newline"
"overall ride an . overall ride ?","if entities . find ( overall ) ! = None : newline newtab entities [ overall ] [ ride ] = an newline print ( overall [ ride ] ) newline"
"rock climb wall . rock climb ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ climb ] = wall newline print ( rock [ climb ] ) newline"
"red hat light . red hat ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ hat ] = light newline print ( red [ hat ] ) newline"
"team hug woman . team hug ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ hug ] = woman newline print ( team [ hug ] ) newline"
"collar run dog . collar run ?","if entities . find ( collar ) ! = None : newline newtab entities [ collar ] [ run ] = dog newline print ( collar [ run ] ) newline"
"girl ride alone . alone ride ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ ride ] = girl newline print ( alone [ ride ] ) newline"
"people be orange . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = orange newline print ( people [ be ] ) newline"
"table drink beer . table drink ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ drink ] = beer newline print ( table [ drink ] ) newline"
"person wear black . black wear ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ wear ] = person newline print ( black [ wear ] ) newline"
"boy sit guy . boy sit ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ sit ] = guy newline print ( boy [ sit ] ) newline"
"indian be rock . indian be ?","if entities . find ( indian ) ! = None : newline newtab entities [ indian ] [ be ] = rock newline print ( indian [ be ] ) newline"
"dog star white . white star ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ star ] = dog newline print ( white [ star ] ) newline"
"table lay next . next lay ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ lay ] = table newline print ( next [ lay ] ) newline"
"pier look out . out look ?","if entities . find ( pier ) ! = None : newline newtab entities [ pier ] [ look ] = pier newline print ( out [ look ] ) newline"
"hiker be two . hiker be ?","if entities . find ( hiker ) ! = None : newline newtab entities [ hiker ] [ be ] = two newline print ( hiker [ be ] ) newline"
"woman compete cyclist . woman compete ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ compete ] = cyclist newline print ( woman [ compete ] ) newline"
"man aim it . man aim ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ aim ] = it newline print ( man [ aim ] ) newline"
"boy be opening . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = opening newline print ( boy [ be ] ) newline"
"people be sleeping . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = sleeping newline print ( people [ be ] ) newline"
"boy wear orange . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = orange newline print ( boy [ wear ] ) newline"
"asian draw carriage . asian draw ?","if entities . find ( asian ) ! = None : newline newtab entities [ asian ] [ draw ] = carriage newline print ( asian [ draw ] ) newline"
"dog play indoor . indoor play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = dog newline print ( indoor [ play ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"while sit court . while sit ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ sit ] = court newline print ( while [ sit ] ) newline"
"man do trick . man do ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ do ] = trick newline print ( man [ do ] ) newline"
"cake make silly . silly make ?","if entities . find ( cake ) ! = None : newline newtab entities [ cake ] [ make ] = cake newline print ( silly [ make ] ) newline"
"counter look out . out look ?","if entities . find ( counter ) ! = None : newline newtab entities [ counter ] [ look ] = counter newline print ( out [ look ] ) newline"
"pilot be young . pilot be ?","if entities . find ( pilot ) ! = None : newline newtab entities [ pilot ] [ be ] = young newline print ( pilot [ be ] ) newline"
"top be referee . top be ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ be ] = referee newline print ( top [ be ] ) newline"
"hood stand or . hood stand ?","if entities . find ( hood ) ! = None : newline newtab entities [ hood ] [ stand ] = or newline print ( hood [ stand ] ) newline"
"man wear black . black wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( black [ wear ] ) newline"
"mouse shirt plaid . mouse shirt ?","if entities . find ( mouse ) ! = None : newline newtab entities [ mouse ] [ shirt ] = plaid newline print ( mouse [ shirt ] ) newline"
"lady be ready . ready be ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ be ] = lady newline print ( ready [ be ] ) newline"
"girl be all . all be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( all [ be ] ) newline"
"girl be sleeping . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = sleeping newline print ( girl [ be ] ) newline"
"woman cook some . some cook ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ cook ] = woman newline print ( some [ cook ] ) newline"
"red guard white . white guard ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ guard ] = red newline print ( white [ guard ] ) newline"
"people enjoy sucker . people enjoy ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ enjoy ] = sucker newline print ( people [ enjoy ] ) newline"
"friend attempt white . white attempt ?","if entities . find ( friend ) ! = None : newline newtab entities [ friend ] [ attempt ] = friend newline print ( white [ attempt ] ) newline"
"people dance one . one dance ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ dance ] = people newline print ( one [ dance ] ) newline"
"while walk belt . while walk ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ walk ] = belt newline print ( while [ walk ] ) newline"
"bicyclist ride an . bicyclist ride ?","if entities . find ( bicyclist ) ! = None : newline newtab entities [ bicyclist ] [ ride ] = an newline print ( bicyclist [ ride ] ) newline"
"man be proud . proud be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( proud [ be ] ) newline"
"group wear an . group wear ?","if entities . find ( group ) ! = None : newline newtab entities [ group ] [ wear ] = an newline print ( group [ wear ] ) newline"
"child hold an . child hold ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ hold ] = an newline print ( child [ hold ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"house be people . house be ?","if entities . find ( house ) ! = None : newline newtab entities [ house ] [ be ] = people newline print ( house [ be ] ) newline"
"firefighter be busy . busy be ?","if entities . find ( firefighter ) ! = None : newline newtab entities [ firefighter ] [ be ] = firefighter newline print ( busy [ be ] ) newline"
"woman look blond . woman look ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ look ] = blond newline print ( woman [ look ] ) newline"
"girl paddle out . out paddle ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ paddle ] = girl newline print ( out [ paddle ] ) newline"
"man do trick . man do ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ do ] = trick newline print ( man [ do ] ) newline"
"green bowl alley . green bowl ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ bowl ] = alley newline print ( green [ bowl ] ) newline"
"people be temporary . temporary be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( temporary [ be ] ) newline"
"woman browse things . woman browse ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ browse ] = things newline print ( woman [ browse ] ) newline"
"woman be art . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = art newline print ( woman [ be ] ) newline"
"gear be ready . ready be ?","if entities . find ( gear ) ! = None : newline newtab entities [ gear ] [ be ] = gear newline print ( ready [ be ] ) newline"
"man wear black . black wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( black [ wear ] ) newline"
"dog wear pajama . dog wear ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ wear ] = pajama newline print ( dog [ wear ] ) newline"
"green hat construction . green hat ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ hat ] = construction newline print ( green [ hat ] ) newline"
"man hold white . white hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = man newline print ( white [ hold ] ) newline"
"he be light . he be ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ be ] = light newline print ( he [ be ] ) newline"
"jacket be people . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = people newline print ( jacket [ be ] ) newline"
"kid take one . one take ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ take ] = kid newline print ( one [ take ] ) newline"
"dog be rock . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = rock newline print ( dog [ be ] ) newline"
"woman push another . another push ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ push ] = woman newline print ( another [ push ] ) newline"
"table pile high . high pile ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ pile ] = table newline print ( high [ pile ] ) newline"
"worker create pottery . worker create ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ create ] = pottery newline print ( worker [ create ] ) newline"
"person ski airborne . airborne ski ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ ski ] = person newline print ( airborne [ ski ] ) newline"
"man play an . man play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = an newline print ( man [ play ] ) newline"
"child fly ball . child fly ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ fly ] = ball newline print ( child [ fly ] ) newline"
"ballerina dress all . all dress ?","if entities . find ( ballerina ) ! = None : newline newtab entities [ ballerina ] [ dress ] = ballerina newline print ( all [ dress ] ) newline"
"peace knit own . own knit ?","if entities . find ( peace ) ! = None : newline newtab entities [ peace ] [ knit ] = peace newline print ( own [ knit ] ) newline"
"girl run out . out run ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ run ] = girl newline print ( out [ run ] ) newline"
"player practice martial . martial practice ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ practice ] = player newline print ( martial [ practice ] ) newline"
"york hat rock . york hat ?","if entities . find ( york ) ! = None : newline newtab entities [ york ] [ hat ] = rock newline print ( york [ hat ] ) newline"
"people stand next . next stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( next [ stand ] ) newline"
"woman wear santa . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = santa newline print ( woman [ wear ] ) newline"
"man wear lei . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = lei newline print ( man [ wear ] ) newline"
"girl dress all . all dress ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ dress ] = girl newline print ( all [ dress ] ) newline"
"rider be member . rider be ?","if entities . find ( rider ) ! = None : newline newtab entities [ rider ] [ be ] = member newline print ( rider [ be ] ) newline"
"skater sit woman . skater sit ?","if entities . find ( skater ) ! = None : newline newtab entities [ skater ] [ sit ] = woman newline print ( skater [ sit ] ) newline"
"man lean dog . man lean ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ lean ] = dog newline print ( man [ lean ] ) newline"
"red swim trunks . red swim ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ swim ] = trunks newline print ( red [ swim ] ) newline"
"child play next . next play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = child newline print ( next [ play ] ) newline"
"rugby match outfit . rugby match ?","if entities . find ( rugby ) ! = None : newline newtab entities [ rugby ] [ match ] = outfit newline print ( rugby [ match ] ) newline"
"people gather bread . people gather ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ gather ] = bread newline print ( people [ gather ] ) newline"
"woman carry an . woman carry ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ carry ] = an newline print ( woman [ carry ] ) newline"
"dog run while . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = while newline print ( dog [ run ] ) newline"
"woman sit while . woman sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = while newline print ( woman [ sit ] ) newline"
"water use old . old use ?","if entities . find ( water ) ! = None : newline newtab entities [ water ] [ use ] = water newline print ( old [ use ] ) newline"
"boy lay upside . boy lay ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ lay ] = upside newline print ( boy [ lay ] ) newline"
"heel be time . heel be ?","if entities . find ( heel ) ! = None : newline newtab entities [ heel ] [ be ] = time newline print ( heel [ be ] ) newline"
"or sing while . or sing ?","if entities . find ( or ) ! = None : newline newtab entities [ or ] [ sing ] = while newline print ( or [ sing ] ) newline"
"woman play tennis . woman play ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ play ] = tennis newline print ( woman [ play ] ) newline"
"woman be wooded . wooded be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( wooded [ be ] ) newline"
"man be girl . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = girl newline print ( man [ be ] ) newline"
"he be sleeping . he be ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ be ] = sleeping newline print ( he [ be ] ) newline"
"people be midair . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = midair newline print ( people [ be ] ) newline"
"men wear black . black wear ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ wear ] = men newline print ( black [ wear ] ) newline"
"cane sit next . next sit ?","if entities . find ( cane ) ! = None : newline newtab entities [ cane ] [ sit ] = cane newline print ( next [ sit ] ) newline"
"boy pretend white . white pretend ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ pretend ] = boy newline print ( white [ pretend ] ) newline"
"people run dog . people run ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ run ] = dog newline print ( people [ run ] ) newline"
"tux sing joyous . joyous sing ?","if entities . find ( tux ) ! = None : newline newtab entities [ tux ] [ sing ] = tux newline print ( joyous [ sing ] ) newline"
"friend go live . live go ?","if entities . find ( friend ) ! = None : newline newtab entities [ friend ] [ go ] = friend newline print ( live [ go ] ) newline"
"man be thursday . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = thursday newline print ( man [ be ] ) newline"
"girl be laughing . laughing be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( laughing [ be ] ) newline"
"man sit out . out sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( out [ sit ] ) newline"
"woman be four . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = four newline print ( woman [ be ] ) newline"
"men stand next . next stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = men newline print ( next [ stand ] ) newline"
"people be two . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = two newline print ( people [ be ] ) newline"
"gentleman use chopstick . gentleman use ?","if entities . find ( gentleman ) ! = None : newline newtab entities [ gentleman ] [ use ] = chopstick newline print ( gentleman [ use ] ) newline"
"metal grill some . some grill ?","if entities . find ( metal ) ! = None : newline newtab entities [ metal ] [ grill ] = metal newline print ( some [ grill ] ) newline"
"man stand ready . ready stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( ready [ stand ] ) newline"
"child look out . out look ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ look ] = child newline print ( out [ look ] ) newline"
"men be laughing . laughing be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( laughing [ be ] ) newline"
"who be two . who be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = two newline print ( who [ be ] ) newline"
"boy learn vocabulary . boy learn ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ learn ] = vocabulary newline print ( boy [ learn ] ) newline"
"rider jump obstacle . rider jump ?","if entities . find ( rider ) ! = None : newline newtab entities [ rider ] [ jump ] = obstacle newline print ( rider [ jump ] ) newline"
"bird be visible . visible be ?","if entities . find ( bird ) ! = None : newline newtab entities [ bird ] [ be ] = bird newline print ( visible [ be ] ) newline"
"person swim underwater . underwater swim ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ swim ] = person newline print ( underwater [ swim ] ) newline"
"while look out . out look ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ look ] = while newline print ( out [ look ] ) newline"
"red shirt clean . clean shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( clean [ shirt ] ) newline"
"bus be swinging . swinging be ?","if entities . find ( bus ) ! = None : newline newtab entities [ bus ] [ be ] = bus newline print ( swinging [ be ] ) newline"
"woman hold musical . musical hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = woman newline print ( musical [ hold ] ) newline"
"men trade white . white trade ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ trade ] = men newline print ( white [ trade ] ) newline"
"girl beat drum . girl beat ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ beat ] = drum newline print ( girl [ beat ] ) newline"
"who be next . next be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( next [ be ] ) newline"
"lion be swinging . swinging be ?","if entities . find ( lion ) ! = None : newline newtab entities [ lion ] [ be ] = lion newline print ( swinging [ be ] ) newline"
"girl play some . some play ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ play ] = girl newline print ( some [ play ] ) newline"
"people sit next . next sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( next [ sit ] ) newline"
"man be way . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = way newline print ( man [ be ] ) newline"
"water carry red . water carry ?","if entities . find ( water ) ! = None : newline newtab entities [ water ] [ carry ] = red newline print ( water [ carry ] ) newline"
"worker sweep debris . worker sweep ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ sweep ] = debris newline print ( worker [ sweep ] ) newline"
"player jump upside . player jump ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ jump ] = upside newline print ( player [ jump ] ) newline"
"woman be visible . visible be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( visible [ be ] ) newline"
"woman wear large . large wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( large [ wear ] ) newline"
"student lay food . student lay ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ lay ] = food newline print ( student [ lay ] ) newline"
"while close bike . while close ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ close ] = bike newline print ( while [ close ] ) newline"
"sunglasses drink bottle . sunglasses drink ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ drink ] = bottle newline print ( sunglasses [ drink ] ) newline"
"woman wear jeans . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = jeans newline print ( woman [ wear ] ) newline"
"who be several . several be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( several [ be ] ) newline"
"dog run event . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = event newline print ( dog [ run ] ) newline"
"table eat asian . asian eat ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ eat ] = table newline print ( asian [ eat ] ) newline"
"helmet be turing . helmet be ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ be ] = turing newline print ( helmet [ be ] ) newline"
"traffic cop or . traffic cop ?","if entities . find ( traffic ) ! = None : newline newtab entities [ traffic ] [ cop ] = or newline print ( traffic [ cop ] ) newline"
"luggage look out . out look ?","if entities . find ( luggage ) ! = None : newline newtab entities [ luggage ] [ look ] = luggage newline print ( out [ look ] ) newline"
"ice cream truck . ice cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = truck newline print ( ice [ cream ] ) newline"
"woman be ironing . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = ironing newline print ( woman [ be ] ) newline"
"child be both . both be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( both [ be ] ) newline"
"man be two . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = two newline print ( man [ be ] ) newline"
"york meet jersey . york meet ?","if entities . find ( york ) ! = None : newline newtab entities [ york ] [ meet ] = jersey newline print ( york [ meet ] ) newline"
"lady pose next . next pose ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ pose ] = lady newline print ( next [ pose ] ) newline"
"woman be laughing . laughing be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( laughing [ be ] ) newline"
"child be nature . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = nature newline print ( child [ be ] ) newline"
"green gate white . white gate ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ gate ] = green newline print ( white [ gate ] ) newline"
"rider be staring . staring be ?","if entities . find ( rider ) ! = None : newline newtab entities [ rider ] [ be ] = rider newline print ( staring [ be ] ) newline"
"person pitch out . out pitch ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ pitch ] = person newline print ( out [ pitch ] ) newline"
"player wear blue . blue wear ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ wear ] = player newline print ( blue [ wear ] ) newline"
"girl be sleeping . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = sleeping newline print ( girl [ be ] ) newline"
"woman be laughing . laughing be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( laughing [ be ] ) newline"
"neck scarf two . neck scarf ?","if entities . find ( neck ) ! = None : newline newtab entities [ neck ] [ scarf ] = two newline print ( neck [ scarf ] ) newline"
"bag ride white . white ride ?","if entities . find ( bag ) ! = None : newline newtab entities [ bag ] [ ride ] = bag newline print ( white [ ride ] ) newline"
"who be red . who be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = red newline print ( who [ be ] ) newline"
"two train white . white train ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ train ] = two newline print ( white [ train ] ) newline"
"child be many . many be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( many [ be ] ) newline"
"girl wear orange . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = orange newline print ( girl [ wear ] ) newline"
"man read teaching . man read ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ read ] = teaching newline print ( man [ read ] ) newline"
"subway train white . white train ?","if entities . find ( subway ) ! = None : newline newtab entities [ subway ] [ train ] = subway newline print ( white [ train ] ) newline"
"lady stand side . lady stand ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ stand ] = side newline print ( lady [ stand ] ) newline"
"while hold an . while hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = an newline print ( while [ hold ] ) newline"
"woman be sorting . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sorting newline print ( woman [ be ] ) newline"
"man throw new . new throw ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ throw ] = man newline print ( new [ throw ] ) newline"
"violist play ultimate . ultimate play ?","if entities . find ( violist ) ! = None : newline newtab entities [ violist ] [ play ] = violist newline print ( ultimate [ play ] ) newline"
"bird swoop white . white swoop ?","if entities . find ( bird ) ! = None : newline newtab entities [ bird ] [ swoop ] = bird newline print ( white [ swoop ] ) newline"
"child color plastic . plastic color ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ color ] = child newline print ( plastic [ color ] ) newline"
"while listen white . white listen ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ listen ] = while newline print ( white [ listen ] ) newline"
"woman drink water . woman drink ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ drink ] = water newline print ( woman [ drink ] ) newline"
"family be green . family be ?","if entities . find ( family ) ! = None : newline newtab entities [ family ] [ be ] = green newline print ( family [ be ] ) newline"
"top sit next . next sit ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ sit ] = top newline print ( next [ sit ] ) newline"
"while listen white . white listen ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ listen ] = while newline print ( white [ listen ] ) newline"
"while face cotton . while face ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ face ] = cotton newline print ( while [ face ] ) newline"
"boy look out . out look ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ look ] = boy newline print ( out [ look ] ) newline"
"girl pose next . next pose ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ pose ] = girl newline print ( next [ pose ] ) newline"
"corsage speak white . white speak ?","if entities . find ( corsage ) ! = None : newline newtab entities [ corsage ] [ speak ] = corsage newline print ( white [ speak ] ) newline"
"dog look downward . downward look ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ look ] = dog newline print ( downward [ look ] ) newline"
"safety vest next . next vest ?","if entities . find ( safety ) ! = None : newline newtab entities [ safety ] [ vest ] = safety newline print ( next [ vest ] ) newline"
"men hold several . several hold ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ hold ] = men newline print ( several [ hold ] ) newline"
"onlooker watch another . another watch ?","if entities . find ( onlooker ) ! = None : newline newtab entities [ onlooker ] [ watch ] = onlooker newline print ( another [ watch ] ) newline"
"box wear straw . box wear ?","if entities . find ( box ) ! = None : newline newtab entities [ box ] [ wear ] = straw newline print ( box [ wear ] ) newline"
"child be three . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = three newline print ( child [ be ] ) newline"
"man wear white . white wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( white [ wear ] ) newline"
"gas mask doctor . gas mask ?","if entities . find ( gas ) ! = None : newline newtab entities [ gas ] [ mask ] = doctor newline print ( gas [ mask ] ) newline"
"flag design beautiful . beautiful design ?","if entities . find ( flag ) ! = None : newline newtab entities [ flag ] [ design ] = flag newline print ( beautiful [ design ] ) newline"
"who shine golden . golden shine ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ shine ] = who newline print ( golden [ shine ] ) newline"
"man be staged . staged be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( staged [ be ] ) newline"
"dog be both . both be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( both [ be ] ) newline"
"outfit stand next . next stand ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ stand ] = outfit newline print ( next [ stand ] ) newline"
"paddler wear gray . paddler wear ?","if entities . find ( paddler ) ! = None : newline newtab entities [ paddler ] [ wear ] = gray newline print ( paddler [ wear ] ) newline"
"man get grocery . man get ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ get ] = grocery newline print ( man [ get ] ) newline"
"dog jump midair . dog jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = midair newline print ( dog [ jump ] ) newline"
"people be laughing . laughing be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( laughing [ be ] ) newline"
"man operate heavy . heavy operate ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ operate ] = man newline print ( heavy [ operate ] ) newline"
"woman be many . many be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( many [ be ] ) newline"
"rodeo try two . rodeo try ?","if entities . find ( rodeo ) ! = None : newline newtab entities [ rodeo ] [ try ] = two newline print ( rodeo [ try ] ) newline"
"dancer pose while . dancer pose ?","if entities . find ( dancer ) ! = None : newline newtab entities [ dancer ] [ pose ] = while newline print ( dancer [ pose ] ) newline"
"dog be swinging . swinging be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( swinging [ be ] ) newline"
"while sit next . next sit ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ sit ] = while newline print ( next [ sit ] ) newline"
"advocacy walk or . advocacy walk ?","if entities . find ( advocacy ) ! = None : newline newtab entities [ advocacy ] [ walk ] = or newline print ( advocacy [ walk ] ) newline"
"boy play next . next play ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ play ] = boy newline print ( next [ play ] ) newline"
"two motorcycle helmet . two motorcycle ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ motorcycle ] = helmet newline print ( two [ motorcycle ] ) newline"
"man take picture . man take ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ take ] = picture newline print ( man [ take ] ) newline"
"woman be member . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = member newline print ( woman [ be ] ) newline"
"boot throw first . first throw ?","if entities . find ( boot ) ! = None : newline newtab entities [ boot ] [ throw ] = boot newline print ( first [ throw ] ) newline"
"wildflower hold an . wildflower hold ?","if entities . find ( wildflower ) ! = None : newline newtab entities [ wildflower ] [ hold ] = an newline print ( wildflower [ hold ] ) newline"
"apron be laughing . laughing be ?","if entities . find ( apron ) ! = None : newline newtab entities [ apron ] [ be ] = apron newline print ( laughing [ be ] ) newline"
"worker be yawning . yawning be ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ be ] = worker newline print ( yawning [ be ] ) newline"
"water be wet . wet be ?","if entities . find ( water ) ! = None : newline newtab entities [ water ] [ be ] = water newline print ( wet [ be ] ) newline"
"top sit next . next sit ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ sit ] = top newline print ( next [ sit ] ) newline"
"railing border collie . railing border ?","if entities . find ( railing ) ! = None : newline newtab entities [ railing ] [ border ] = collie newline print ( railing [ border ] ) newline"
"jacket take great . great take ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ take ] = jacket newline print ( great [ take ] ) newline"
"building cover another . another cover ?","if entities . find ( building ) ! = None : newline newtab entities [ building ] [ cover ] = building newline print ( another [ cover ] ) newline"
"dog catch right . right catch ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ catch ] = dog newline print ( right [ catch ] ) newline"
"hula hoop white . white hoop ?","if entities . find ( hula ) ! = None : newline newtab entities [ hula ] [ hoop ] = hula newline print ( white [ hoop ] ) newline"
"dog be rod . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = rod newline print ( dog [ be ] ) newline"
"people be wet . wet be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( wet [ be ] ) newline"
"musician play dead . dead play ?","if entities . find ( musician ) ! = None : newline newtab entities [ musician ] [ play ] = musician newline print ( dead [ play ] ) newline"
"man be an . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = an newline print ( man [ be ] ) newline"
"plaid hat one . one hat ?","if entities . find ( plaid ) ! = None : newline newtab entities [ plaid ] [ hat ] = plaid newline print ( one [ hat ] ) newline"
"sneaker be child . sneaker be ?","if entities . find ( sneaker ) ! = None : newline newtab entities [ sneaker ] [ be ] = child newline print ( sneaker [ be ] ) newline"
"swimsuit be rock . swimsuit be ?","if entities . find ( swimsuit ) ! = None : newline newtab entities [ swimsuit ] [ be ] = rock newline print ( swimsuit [ be ] ) newline"
"girl be way . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = way newline print ( girl [ be ] ) newline"
"player run dog . player run ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ run ] = dog newline print ( player [ run ] ) newline"
"dog be laughing . laughing be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( laughing [ be ] ) newline"
"dog play lacrosse . dog play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = lacrosse newline print ( dog [ play ] ) newline"
"blazer sit next . next sit ?","if entities . find ( blazer ) ! = None : newline newtab entities [ blazer ] [ sit ] = blazer newline print ( next [ sit ] ) newline"
"construction hold another . another hold ?","if entities . find ( construction ) ! = None : newline newtab entities [ construction ] [ hold ] = construction newline print ( another [ hold ] ) newline"
"girl be people . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = people newline print ( girl [ be ] ) newline"
"while stand next . next stand ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ stand ] = while newline print ( next [ stand ] ) newline"
"while carry two . while carry ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ carry ] = two newline print ( while [ carry ] ) newline"
"air balloon animal . air balloon ?","if entities . find ( air ) ! = None : newline newtab entities [ air ] [ balloon ] = animal newline print ( air [ balloon ] ) newline"
"man wear yellow . yellow wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( yellow [ wear ] ) newline"
"child climb out . out climb ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ climb ] = child newline print ( out [ climb ] ) newline"
"woman hold yellow . yellow hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = woman newline print ( yellow [ hold ] ) newline"
"baby wear mickey . baby wear ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ wear ] = mickey newline print ( baby [ wear ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"woman wear white . white wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( white [ wear ] ) newline"
"student lay out . out lay ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ lay ] = student newline print ( out [ lay ] ) newline"
"dock wait next . next wait ?","if entities . find ( dock ) ! = None : newline newtab entities [ dock ] [ wait ] = dock newline print ( next [ wait ] ) newline"
"men sit bride . men sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = bride newline print ( men [ sit ] ) newline"
"dog run side . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = side newline print ( dog [ run ] ) newline"
"jeans lean out . out lean ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ lean ] = jeans newline print ( out [ lean ] ) newline"
"men walk while . men walk ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ walk ] = while newline print ( men [ walk ] ) newline"
"girl sit side . girl sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = side newline print ( girl [ sit ] ) newline"
"woman be two . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = two newline print ( woman [ be ] ) newline"
"man be stupid . stupid be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( stupid [ be ] ) newline"
"man work out . out work ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ work ] = man newline print ( out [ work ] ) newline"
"men enjoy some . some enjoy ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ enjoy ] = men newline print ( some [ enjoy ] ) newline"
"helmet ride high . high ride ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ ride ] = helmet newline print ( high [ ride ] ) newline"
"boot be out . out be ?","if entities . find ( boot ) ! = None : newline newtab entities [ boot ] [ be ] = boot newline print ( out [ be ] ) newline"
"man stand or . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = or newline print ( man [ stand ] ) newline"
"woman have an . woman have ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ have ] = an newline print ( woman [ have ] ) newline"
"child have fun . child have ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ have ] = fun newline print ( child [ have ] ) newline"
"gray coat point . gray coat ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ coat ] = point newline print ( gray [ coat ] ) newline"
