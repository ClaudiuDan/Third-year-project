src,trg
"glove be swinging . swinging be ?","if entities . find ( glove ) ! = None : newline newtab entities [ glove ] [ be ] = glove newline print ( swinging [ be ] ) newline"
"sweatshirt grab food . sweatshirt grab ?","if entities . find ( sweatshirt ) ! = None : newline newtab entities [ sweatshirt ] [ grab ] = food newline print ( sweatshirt [ grab ] ) newline"
"baby be older . older be ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ be ] = baby newline print ( older [ be ] ) newline"
"man ride numerous . numerous ride ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ ride ] = man newline print ( numerous [ ride ] ) newline"
"tongue hang upside . tongue hang ?","if entities . find ( tongue ) ! = None : newline newtab entities [ tongue ] [ hang ] = upside newline print ( tongue [ hang ] ) newline"
"necklace be wet . wet be ?","if entities . find ( necklace ) ! = None : newline newtab entities [ necklace ] [ be ] = necklace newline print ( wet [ be ] ) newline"
"boy enjoy some . some enjoy ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ enjoy ] = boy newline print ( some [ enjoy ] ) newline"
"table set out . out set ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ set ] = table newline print ( out [ set ] ) newline"
"baby wear blue . blue wear ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ wear ] = baby newline print ( blue [ wear ] ) newline"
"apple stand man . apple stand ?","if entities . find ( apple ) ! = None : newline newtab entities [ apple ] [ stand ] = man newline print ( apple [ stand ] ) newline"
"dog play an . dog play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = an newline print ( dog [ play ] ) newline"
"surfer ride camel . surfer ride ?","if entities . find ( surfer ) ! = None : newline newtab entities [ surfer ] [ ride ] = camel newline print ( surfer [ ride ] ) newline"
"man fish white . white fish ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ fish ] = man newline print ( white [ fish ] ) newline"
"people be writer . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = writer newline print ( people [ be ] ) newline"
"dog run man . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = man newline print ( dog [ run ] ) newline"
"orange vest next . next vest ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ vest ] = orange newline print ( next [ vest ] ) newline"
"bus be sleeping . bus be ?","if entities . find ( bus ) ! = None : newline newtab entities [ bus ] [ be ] = sleeping newline print ( bus [ be ] ) newline"
"child pass an . child pass ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ pass ] = an newline print ( child [ pass ] ) newline"
"woman practice martial . martial practice ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ practice ] = woman newline print ( martial [ practice ] ) newline"
"water try two . water try ?","if entities . find ( water ) ! = None : newline newtab entities [ water ] [ try ] = two newline print ( water [ try ] ) newline"
"man lie body . man lie ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ lie ] = body newline print ( man [ lie ] ) newline"
"monk show great . great show ?","if entities . find ( monk ) ! = None : newline newtab entities [ monk ] [ show ] = monk newline print ( great [ show ] ) newline"
"band uniform one . one uniform ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ uniform ] = band newline print ( one [ uniform ] ) newline"
"people sit next . next sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( next [ sit ] ) newline"
"man be able . able be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( able [ be ] ) newline"
"man crouch next . next crouch ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ crouch ] = man newline print ( next [ crouch ] ) newline"
"men sing joyous . joyous sing ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sing ] = men newline print ( joyous [ sing ] ) newline"
"citizen talk while . citizen talk ?","if entities . find ( citizen ) ! = None : newline newtab entities [ citizen ] [ talk ] = while newline print ( citizen [ talk ] ) newline"
"trunks wash windows . trunks wash ?","if entities . find ( trunks ) ! = None : newline newtab entities [ trunks ] [ wash ] = windows newline print ( trunks [ wash ] ) newline"
"biker do pastel . pastel do ?","if entities . find ( biker ) ! = None : newline newtab entities [ biker ] [ do ] = biker newline print ( pastel [ do ] ) newline"
"child be an . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = an newline print ( child [ be ] ) newline"
"girl be one . one be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( one [ be ] ) newline"
"circle enjoy some . some enjoy ?","if entities . find ( circle ) ! = None : newline newtab entities [ circle ] [ enjoy ] = circle newline print ( some [ enjoy ] ) newline"
"woman throw another . another throw ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ throw ] = woman newline print ( another [ throw ] ) newline"
"boy run out . out run ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ run ] = boy newline print ( out [ run ] ) newline"
"sunglasses walk guard . sunglasses walk ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ walk ] = guard newline print ( sunglasses [ walk ] ) newline"
"cowboy watch other . other watch ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ watch ] = cowboy newline print ( other [ watch ] ) newline"
"player pause white . white pause ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ pause ] = player newline print ( white [ pause ] ) newline"
"boy make fabric . boy make ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ make ] = fabric newline print ( boy [ make ] ) newline"
"child gather vegetable . child gather ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ gather ] = vegetable newline print ( child [ gather ] ) newline"
"tv suspend high . high suspend ?","if entities . find ( tv ) ! = None : newline newtab entities [ tv ] [ suspend ] = tv newline print ( high [ suspend ] ) newline"
"two leather white . white leather ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ leather ] = two newline print ( white [ leather ] ) newline"
"woman get ready . ready get ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ get ] = woman newline print ( ready [ get ] ) newline"
"girl be rock . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = rock newline print ( girl [ be ] ) newline"
"belt climb out . out climb ?","if entities . find ( belt ) ! = None : newline newtab entities [ belt ] [ climb ] = belt newline print ( out [ climb ] ) newline"
"bicyclist talk while . bicyclist talk ?","if entities . find ( bicyclist ) ! = None : newline newtab entities [ bicyclist ] [ talk ] = while newline print ( bicyclist [ talk ] ) newline"
"sunglasses be rock . sunglasses be ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ be ] = rock newline print ( sunglasses [ be ] ) newline"
"man smile next . next smile ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ smile ] = man newline print ( next [ smile ] ) newline"
"child get someone . child get ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ get ] = someone newline print ( child [ get ] ) newline"
"people be four . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = four newline print ( people [ be ] ) newline"
"red be painted . painted be ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ be ] = red newline print ( painted [ be ] ) newline"
"people swing laugh . people swing ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ swing ] = laugh newline print ( people [ swing ] ) newline"
"people stand next . next stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( next [ stand ] ) newline"
"vendor be many . many be ?","if entities . find ( vendor ) ! = None : newline newtab entities [ vendor ] [ be ] = vendor newline print ( many [ be ] ) newline"
"river jump while . river jump ?","if entities . find ( river ) ! = None : newline newtab entities [ river ] [ jump ] = while newline print ( river [ jump ] ) newline"
"coffee walk man . coffee walk ?","if entities . find ( coffee ) ! = None : newline newtab entities [ coffee ] [ walk ] = man newline print ( coffee [ walk ] ) newline"
"woman be out . out be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( out [ be ] ) newline"
"part eat out . out eat ?","if entities . find ( part ) ! = None : newline newtab entities [ part ] [ eat ] = part newline print ( out [ eat ] ) newline"
"men be several . several be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( several [ be ] ) newline"
"child be out . out be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( out [ be ] ) newline"
"rock climb out . out climb ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ climb ] = rock newline print ( out [ climb ] ) newline"
"someone be parasailing . someone be ?","if entities . find ( someone ) ! = None : newline newtab entities [ someone ] [ be ] = parasailing newline print ( someone [ be ] ) newline"
"girl wear headphone . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = headphone newline print ( girl [ wear ] ) newline"
"hiker walk next . next walk ?","if entities . find ( hiker ) ! = None : newline newtab entities [ hiker ] [ walk ] = hiker newline print ( next [ walk ] ) newline"
"baseball be sleeping . baseball be ?","if entities . find ( baseball ) ! = None : newline newtab entities [ baseball ] [ be ] = sleeping newline print ( baseball [ be ] ) newline"
"football practice martial . martial practice ?","if entities . find ( football ) ! = None : newline newtab entities [ football ] [ practice ] = football newline print ( martial [ practice ] ) newline"
"man be two . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = two newline print ( man [ be ] ) newline"
"gun point while . gun point ?","if entities . find ( gun ) ! = None : newline newtab entities [ gun ] [ point ] = while newline print ( gun [ point ] ) newline"
"red shirt ready . ready shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( ready [ shirt ] ) newline"
"people be happy . happy be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( happy [ be ] ) newline"
"brick build while . brick build ?","if entities . find ( brick ) ! = None : newline newtab entities [ brick ] [ build ] = while newline print ( brick [ build ] ) newline"
"boy wear muzzle . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = muzzle newline print ( boy [ wear ] ) newline"
"while work out . out work ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ work ] = while newline print ( out [ work ] ) newline"
"green be upside . green be ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ be ] = upside newline print ( green [ be ] ) newline"
"man pull an . man pull ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ pull ] = an newline print ( man [ pull ] ) newline"
"dog be upside . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = upside newline print ( dog [ be ] ) newline"
"backyard sit or . backyard sit ?","if entities . find ( backyard ) ! = None : newline newtab entities [ backyard ] [ sit ] = or newline print ( backyard [ sit ] ) newline"
"people wear red . people wear ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ wear ] = red newline print ( people [ wear ] ) newline"
"two nurse bra . two nurse ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ nurse ] = bra newline print ( two [ nurse ] ) newline"
"table be nude . table be ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ be ] = nude newline print ( table [ be ] ) newline"
"brick build while . brick build ?","if entities . find ( brick ) ! = None : newline newtab entities [ brick ] [ build ] = while newline print ( brick [ build ] ) newline"
"girl dress people . girl dress ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ dress ] = people newline print ( girl [ dress ] ) newline"
"sidewalk have an . sidewalk have ?","if entities . find ( sidewalk ) ! = None : newline newtab entities [ sidewalk ] [ have ] = an newline print ( sidewalk [ have ] ) newline"
"three smile african . african smile ?","if entities . find ( three ) ! = None : newline newtab entities [ three ] [ smile ] = three newline print ( african [ smile ] ) newline"
"sword fight next . next fight ?","if entities . find ( sword ) ! = None : newline newtab entities [ sword ] [ fight ] = sword newline print ( next [ fight ] ) newline"
"people perform acrobatic . acrobatic perform ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ perform ] = people newline print ( acrobatic [ perform ] ) newline"
"red backpack approach . red backpack ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ backpack ] = approach newline print ( red [ backpack ] ) newline"
"it be sleeping . it be ?","if entities . find ( it ) ! = None : newline newtab entities [ it ] [ be ] = sleeping newline print ( it [ be ] ) newline"
"boy wear apron . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = apron newline print ( boy [ wear ] ) newline"
"player attempt white . white attempt ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ attempt ] = player newline print ( white [ attempt ] ) newline"
"man take picture . man take ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ take ] = picture newline print ( man [ take ] ) newline"
"tea shop fresh . fresh shop ?","if entities . find ( tea ) ! = None : newline newtab entities [ tea ] [ shop ] = tea newline print ( fresh [ shop ] ) newline"
"hand point out . out point ?","if entities . find ( hand ) ! = None : newline newtab entities [ hand ] [ point ] = hand newline print ( out [ point ] ) newline"
"child hold out . out hold ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ hold ] = child newline print ( out [ hold ] ) newline"
"woman wear dark . dark wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( dark [ wear ] ) newline"
"dog run full . full run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( full [ run ] ) newline"
"man be sorting . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sorting newline print ( man [ be ] ) newline"
"people be eager . eager be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( eager [ be ] ) newline"
"man look out . out look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = man newline print ( out [ look ] ) newline"
"jeans type white . white type ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ type ] = jeans newline print ( white [ type ] ) newline"
"brown dress opponent . brown dress ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ dress ] = opponent newline print ( brown [ dress ] ) newline"
"men jump high . high jump ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ jump ] = men newline print ( high [ jump ] ) newline"
"sort be girl . sort be ?","if entities . find ( sort ) ! = None : newline newtab entities [ sort ] [ be ] = girl newline print ( sort [ be ] ) newline"
"men try out . out try ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ try ] = men newline print ( out [ try ] ) newline"
"boy be underway . underway be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( underway [ be ] ) newline"
"friend slide white . white slide ?","if entities . find ( friend ) ! = None : newline newtab entities [ friend ] [ slide ] = friend newline print ( white [ slide ] ) newline"
"sun set out . out set ?","if entities . find ( sun ) ! = None : newline newtab entities [ sun ] [ set ] = sun newline print ( out [ set ] ) newline"
"boy hang out . out hang ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ hang ] = boy newline print ( out [ hang ] ) newline"
"man be people . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = people newline print ( man [ be ] ) newline"
"team dress all . all dress ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ dress ] = team newline print ( all [ dress ] ) newline"
"girl be painted . painted be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( painted [ be ] ) newline"
"field plant next . next plant ?","if entities . find ( field ) ! = None : newline newtab entities [ field ] [ plant ] = field newline print ( next [ plant ] ) newline"
"man be out . out be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( out [ be ] ) newline"
"lady smile worker . lady smile ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ smile ] = worker newline print ( lady [ smile ] ) newline"
"gear be swinging . swinging be ?","if entities . find ( gear ) ! = None : newline newtab entities [ gear ] [ be ] = gear newline print ( swinging [ be ] ) newline"
"person be whispering . person be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = whispering newline print ( person [ be ] ) newline"
"boy stand alone . alone stand ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ stand ] = boy newline print ( alone [ stand ] ) newline"
"people stand face . people stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = face newline print ( people [ stand ] ) newline"
"dog jump high . high jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = dog newline print ( high [ jump ] ) newline"
"child chase another . another chase ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ chase ] = child newline print ( another [ chase ] ) newline"
"stone build wooden . wooden build ?","if entities . find ( stone ) ! = None : newline newtab entities [ stone ] [ build ] = stone newline print ( wooden [ build ] ) newline"
"can cross city . can cross ?","if entities . find ( can ) ! = None : newline newtab entities [ can ] [ cross ] = city newline print ( can [ cross ] ) newline"
"people sit alone . alone sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( alone [ sit ] ) newline"
"men be dark . dark be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( dark [ be ] ) newline"
"man sit bride . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = bride newline print ( man [ sit ] ) newline"
"top stand next . next stand ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ stand ] = top newline print ( next [ stand ] ) newline"
"woman hold two . woman hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = two newline print ( woman [ hold ] ) newline"
"people surround one . one surround ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ surround ] = people newline print ( one [ surround ] ) newline"
"red scarf white . white scarf ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ scarf ] = red newline print ( white [ scarf ] ) newline"
"people be rod . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = rod newline print ( people [ be ] ) newline"
"child be staged . staged be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( staged [ be ] ) newline"
"five jockey lead . five jockey ?","if entities . find ( five ) ! = None : newline newtab entities [ five ] [ jockey ] = lead newline print ( five [ jockey ] ) newline"
"girl prepare food . girl prepare ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ prepare ] = food newline print ( girl [ prepare ] ) newline"
"mom arm wide . wide arm ?","if entities . find ( mom ) ! = None : newline newtab entities [ mom ] [ arm ] = mom newline print ( wide [ arm ] ) newline"
"orange shirt plaid . orange shirt ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ shirt ] = plaid newline print ( orange [ shirt ] ) newline"
"man stand man . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( man [ stand ] ) newline"
"dog crouch low . low crouch ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ crouch ] = dog newline print ( low [ crouch ] ) newline"
"sweatshirt be sick . sick be ?","if entities . find ( sweatshirt ) ! = None : newline newtab entities [ sweatshirt ] [ be ] = sweatshirt newline print ( sick [ be ] ) newline"
"top eat some . some eat ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ eat ] = top newline print ( some [ eat ] ) newline"
"pan fill out . out fill ?","if entities . find ( pan ) ! = None : newline newtab entities [ pan ] [ fill ] = pan newline print ( out [ fill ] ) newline"
"horseback watch air . horseback watch ?","if entities . find ( horseback ) ! = None : newline newtab entities [ horseback ] [ watch ] = air newline print ( horseback [ watch ] ) newline"
"jacket walk out . out walk ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ walk ] = jacket newline print ( out [ walk ] ) newline"
"man cook some . some cook ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ cook ] = man newline print ( some [ cook ] ) newline"
"girl play acoustic . acoustic play ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ play ] = girl newline print ( acoustic [ play ] ) newline"
"dog be swinging . swinging be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( swinging [ be ] ) newline"
"people take one . one take ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ take ] = people newline print ( one [ take ] ) newline"
"men write white . white write ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ write ] = men newline print ( white [ write ] ) newline"
"girl wear black . black wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = girl newline print ( black [ wear ] ) newline"
"rock climb large . large climb ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ climb ] = rock newline print ( large [ climb ] ) newline"
"man show many . many show ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ show ] = man newline print ( many [ show ] ) newline"
"collie be asleep . asleep be ?","if entities . find ( collie ) ! = None : newline newtab entities [ collie ] [ be ] = collie newline print ( asleep [ be ] ) newline"
"ring toss plastic . plastic toss ?","if entities . find ( ring ) ! = None : newline newtab entities [ ring ] [ toss ] = ring newline print ( plastic [ toss ] ) newline"
"green shirt light . green shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = light newline print ( green [ shirt ] ) newline"
"while seat next . next seat ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ seat ] = while newline print ( next [ seat ] ) newline"
"who be orange . who be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = orange newline print ( who [ be ] ) newline"
"horse jump high . high jump ?","if entities . find ( horse ) ! = None : newline newtab entities [ horse ] [ jump ] = horse newline print ( high [ jump ] ) newline"
"player cross some . some cross ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ cross ] = player newline print ( some [ cross ] ) newline"
"people be airborne . airborne be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( airborne [ be ] ) newline"
"object stick structure . object stick ?","if entities . find ( object ) ! = None : newline newtab entities [ object ] [ stick ] = structure newline print ( object [ stick ] ) newline"
"spoon stir white . white stir ?","if entities . find ( spoon ) ! = None : newline newtab entities [ spoon ] [ stir ] = spoon newline print ( white [ stir ] ) newline"
"helmet be six . helmet be ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ be ] = six newline print ( helmet [ be ] ) newline"
"skateboarder be sleeping . skateboarder be ?","if entities . find ( skateboarder ) ! = None : newline newtab entities [ skateboarder ] [ be ] = sleeping newline print ( skateboarder [ be ] ) newline"
"woman be an . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = an newline print ( woman [ be ] ) newline"
"girl dress woman . girl dress ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ dress ] = woman newline print ( girl [ dress ] ) newline"
"man ride one . one ride ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ ride ] = man newline print ( one [ ride ] ) newline"
"while stand while . while stand ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ stand ] = while newline print ( while [ stand ] ) newline"
"jacket float object . jacket float ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ float ] = object newline print ( jacket [ float ] ) newline"
"opinion be part . opinion be ?","if entities . find ( opinion ) ! = None : newline newtab entities [ opinion ] [ be ] = part newline print ( opinion [ be ] ) newline"
"dog play indoor . indoor play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = dog newline print ( indoor [ play ] ) newline"
"people be stupid . stupid be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( stupid [ be ] ) newline"
"child play lacrosse . child play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = lacrosse newline print ( child [ play ] ) newline"
"costume pose next . next pose ?","if entities . find ( costume ) ! = None : newline newtab entities [ costume ] [ pose ] = costume newline print ( next [ pose ] ) newline"
"leotards dance woman . leotards dance ?","if entities . find ( leotards ) ! = None : newline newtab entities [ leotards ] [ dance ] = woman newline print ( leotards [ dance ] ) newline"
"green shirt uniform . uniform shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = green newline print ( uniform [ shirt ] ) newline"
"boat look surly . surly look ?","if entities . find ( boat ) ! = None : newline newtab entities [ boat ] [ look ] = boat newline print ( surly [ look ] ) newline"
"red coat white . white coat ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ coat ] = red newline print ( white [ coat ] ) newline"
"cowboy hat smoke . cowboy hat ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ hat ] = smoke newline print ( cowboy [ hat ] ) newline"
"woman lie body . woman lie ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ lie ] = body newline print ( woman [ lie ] ) newline"
"player defend two . player defend ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ defend ] = two newline print ( player [ defend ] ) newline"
"boy ride white . white ride ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ ride ] = boy newline print ( white [ ride ] ) newline"
"men walk while . men walk ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ walk ] = while newline print ( men [ walk ] ) newline"
"while read next . next read ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ read ] = while newline print ( next [ read ] ) newline"
"while hold out . out hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = while newline print ( out [ hold ] ) newline"
"food stand or . food stand ?","if entities . find ( food ) ! = None : newline newtab entities [ food ] [ stand ] = or newline print ( food [ stand ] ) newline"
"man be laughing . laughing be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( laughing [ be ] ) newline"
"person sit next . next sit ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ sit ] = person newline print ( next [ sit ] ) newline"
"dog be zombie . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = zombie newline print ( dog [ be ] ) newline"
"person ride horse . person ride ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ ride ] = horse newline print ( person [ ride ] ) newline"
"brown hat sleeping . brown hat ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ hat ] = sleeping newline print ( brown [ hat ] ) newline"
"dog play guitar . dog play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = guitar newline print ( dog [ play ] ) newline"
"gold enjoy every . every enjoy ?","if entities . find ( gold ) ! = None : newline newtab entities [ gold ] [ enjoy ] = gold newline print ( every [ enjoy ] ) newline"
"man wear black . black wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( black [ wear ] ) newline"
"girl be hula . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = hula newline print ( girl [ be ] ) newline"
"boat look while . boat look ?","if entities . find ( boat ) ! = None : newline newtab entities [ boat ] [ look ] = while newline print ( boat [ look ] ) newline"
"sweater play structure . sweater play ?","if entities . find ( sweater ) ! = None : newline newtab entities [ sweater ] [ play ] = structure newline print ( sweater [ play ] ) newline"
"boy attire swinging . swinging attire ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ attire ] = boy newline print ( swinging [ attire ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"policeman ride alone . alone ride ?","if entities . find ( policeman ) ! = None : newline newtab entities [ policeman ] [ ride ] = policeman newline print ( alone [ ride ] ) newline"
"player hold some . some hold ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ hold ] = player newline print ( some [ hold ] ) newline"
"dog get ready . ready get ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ get ] = dog newline print ( ready [ get ] ) newline"
"blacksmith be teaching . blacksmith be ?","if entities . find ( blacksmith ) ! = None : newline newtab entities [ blacksmith ] [ be ] = teaching newline print ( blacksmith [ be ] ) newline"
"man cast iron . man cast ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ cast ] = iron newline print ( man [ cast ] ) newline"
"woman ride stationary . stationary ride ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ ride ] = woman newline print ( stationary [ ride ] ) newline"
"woman be opening . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = opening newline print ( woman [ be ] ) newline"
"man walk dog . man walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = dog newline print ( man [ walk ] ) newline"
"woman wear flashy . flashy wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( flashy [ wear ] ) newline"
"neon color striped . striped color ?","if entities . find ( neon ) ! = None : newline newtab entities [ neon ] [ color ] = neon newline print ( striped [ color ] ) newline"
"wings be featured . featured be ?","if entities . find ( wings ) ! = None : newline newtab entities [ wings ] [ be ] = wings newline print ( featured [ be ] ) newline"
"individual hang out . out hang ?","if entities . find ( individual ) ! = None : newline newtab entities [ individual ] [ hang ] = individual newline print ( out [ hang ] ) newline"
"girl wear apron . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = apron newline print ( girl [ wear ] ) newline"
"woman walk bridge . woman walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = bridge newline print ( woman [ walk ] ) newline"
"kitchen attempt two . kitchen attempt ?","if entities . find ( kitchen ) ! = None : newline newtab entities [ kitchen ] [ attempt ] = two newline print ( kitchen [ attempt ] ) newline"
"couple be sleeping . couple be ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ be ] = sleeping newline print ( couple [ be ] ) newline"
"woman sit alone . alone sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( alone [ sit ] ) newline"
"race pass two . race pass ?","if entities . find ( race ) ! = None : newline newtab entities [ race ] [ pass ] = two newline print ( race [ pass ] ) newline"
"dog lick it . dog lick ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ lick ] = it newline print ( dog [ lick ] ) newline"
"eye diagnose two . eye diagnose ?","if entities . find ( eye ) ! = None : newline newtab entities [ eye ] [ diagnose ] = two newline print ( eye [ diagnose ] ) newline"
"people attend white . white attend ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ attend ] = people newline print ( white [ attend ] ) newline"
"woman be out . out be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( out [ be ] ) newline"
"wedding clothe staring . staring clothe ?","if entities . find ( wedding ) ! = None : newline newtab entities [ wedding ] [ clothe ] = wedding newline print ( staring [ clothe ] ) newline"
"summer clothe next . next clothe ?","if entities . find ( summer ) ! = None : newline newtab entities [ summer ] [ clothe ] = summer newline print ( next [ clothe ] ) newline"
"outfit watch two . outfit watch ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ watch ] = two newline print ( outfit [ watch ] ) newline"
"woman dress man . woman dress ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dress ] = man newline print ( woman [ dress ] ) newline"
"people be midair . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = midair newline print ( people [ be ] ) newline"
"woman wait customer . woman wait ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wait ] = customer newline print ( woman [ wait ] ) newline"
"person do dish . person do ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ do ] = dish newline print ( person [ do ] ) newline"
"child wear blue . blue wear ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wear ] = child newline print ( blue [ wear ] ) newline"
"couple kiss another . another kiss ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ kiss ] = couple newline print ( another [ kiss ] ) newline"
"while push another . another push ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ push ] = while newline print ( another [ push ] ) newline"
"man wear an . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = an newline print ( man [ wear ] ) newline"
"face cover wall . face cover ?","if entities . find ( face ) ! = None : newline newtab entities [ face ] [ cover ] = wall newline print ( face [ cover ] ) newline"
"lady be staring . staring be ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ be ] = lady newline print ( staring [ be ] ) newline"
"men paddle ball . men paddle ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ paddle ] = ball newline print ( men [ paddle ] ) newline"
"woman look woman . woman look ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ look ] = woman newline print ( woman [ look ] ) newline"
"air attach white . white attach ?","if entities . find ( air ) ! = None : newline newtab entities [ air ] [ attach ] = air newline print ( white [ attach ] ) newline"
"people make it . people make ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ make ] = it newline print ( people [ make ] ) newline"
"while tile white . white tile ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ tile ] = while newline print ( white [ tile ] ) newline"
"kid be an . kid be ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ be ] = an newline print ( kid [ be ] ) newline"
"people be swinging . swinging be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( swinging [ be ] ) newline"
"costume be chinese . chinese be ?","if entities . find ( costume ) ! = None : newline newtab entities [ costume ] [ be ] = costume newline print ( chinese [ be ] ) newline"
"mountain hold several . several hold ?","if entities . find ( mountain ) ! = None : newline newtab entities [ mountain ] [ hold ] = mountain newline print ( several [ hold ] ) newline"
"racer celebrate some . some celebrate ?","if entities . find ( racer ) ! = None : newline newtab entities [ racer ] [ celebrate ] = racer newline print ( some [ celebrate ] ) newline"
"men present another . another present ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ present ] = men newline print ( another [ present ] ) newline"
"people be swinging . swinging be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( swinging [ be ] ) newline"
"man walk while . man walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = while newline print ( man [ walk ] ) newline"
"spray paint another . another paint ?","if entities . find ( spray ) ! = None : newline newtab entities [ spray ] [ paint ] = spray newline print ( another [ paint ] ) newline"
"man line street . man line ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ line ] = street newline print ( man [ line ] ) newline"
"arm raise platform . arm raise ?","if entities . find ( arm ) ! = None : newline newtab entities [ arm ] [ raise ] = platform newline print ( arm [ raise ] ) newline"
"while walk out . out walk ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ walk ] = while newline print ( out [ walk ] ) newline"
"man wear handkerchief . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = handkerchief newline print ( man [ wear ] ) newline"
"person dress all . all dress ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ dress ] = person newline print ( all [ dress ] ) newline"
"men wear reflective . reflective wear ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ wear ] = men newline print ( reflective [ wear ] ) newline"
"men talk while . men talk ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ talk ] = while newline print ( men [ talk ] ) newline"
"suit be staring . staring be ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ be ] = suit newline print ( staring [ be ] ) newline"
"water carry wood . water carry ?","if entities . find ( water ) ! = None : newline newtab entities [ water ] [ carry ] = wood newline print ( water [ carry ] ) newline"
"woman pose next . next pose ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ pose ] = woman newline print ( next [ pose ] ) newline"
"boy wear gray . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = gray newline print ( boy [ wear ] ) newline"
"person stand alone . alone stand ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ stand ] = person newline print ( alone [ stand ] ) newline"
"front clean windows . front clean ?","if entities . find ( front ) ! = None : newline newtab entities [ front ] [ clean ] = windows newline print ( front [ clean ] ) newline"
"top ride horseback . top ride ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ ride ] = horseback newline print ( top [ ride ] ) newline"
"people be painted . painted be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( painted [ be ] ) newline"
"kiln share white . white share ?","if entities . find ( kiln ) ! = None : newline newtab entities [ kiln ] [ share ] = kiln newline print ( white [ share ] ) newline"
"he snowboard rider . he snowboard ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ snowboard ] = rider newline print ( he [ snowboard ] ) newline"
"woman be creative . creative be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( creative [ be ] ) newline"
"business attire swinging . swinging attire ?","if entities . find ( business ) ! = None : newline newtab entities [ business ] [ attire ] = business newline print ( swinging [ attire ] ) newline"
"skier receive intravenous . intravenous receive ?","if entities . find ( skier ) ! = None : newline newtab entities [ skier ] [ receive ] = skier newline print ( intravenous [ receive ] ) newline"
"path wear blue . blue wear ?","if entities . find ( path ) ! = None : newline newtab entities [ path ] [ wear ] = path newline print ( blue [ wear ] ) newline"
"guy push or . guy push ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ push ] = or newline print ( guy [ push ] ) newline"
"child play musical . musical play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = child newline print ( musical [ play ] ) newline"
"firework go wild . wild go ?","if entities . find ( firework ) ! = None : newline newtab entities [ firework ] [ go ] = firework newline print ( wild [ go ] ) newline"
"woman wear different . different wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( different [ wear ] ) newline"
"man shower two . man shower ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ shower ] = two newline print ( man [ shower ] ) newline"
"makeup be unhappy . unhappy be ?","if entities . find ( makeup ) ! = None : newline newtab entities [ makeup ] [ be ] = makeup newline print ( unhappy [ be ] ) newline"
"plaid shirt guide . plaid shirt ?","if entities . find ( plaid ) ! = None : newline newtab entities [ plaid ] [ shirt ] = guide newline print ( plaid [ shirt ] ) newline"
"dog be contested . contested be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( contested [ be ] ) newline"
"dog be three . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = three newline print ( dog [ be ] ) newline"
"people watch two . people watch ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ watch ] = two newline print ( people [ watch ] ) newline"
"chef prepare dinner . chef prepare ?","if entities . find ( chef ) ! = None : newline newtab entities [ chef ] [ prepare ] = dinner newline print ( chef [ prepare ] ) newline"
"face mask doctor . face mask ?","if entities . find ( face ) ! = None : newline newtab entities [ face ] [ mask ] = doctor newline print ( face [ mask ] ) newline"
"player cross city . player cross ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ cross ] = city newline print ( player [ cross ] ) newline"
"girl stand upside . girl stand ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ stand ] = upside newline print ( girl [ stand ] ) newline"
"people sit next . next sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( next [ sit ] ) newline"
"person pick yellow . yellow pick ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ pick ] = person newline print ( yellow [ pick ] ) newline"
"couple get food . couple get ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ get ] = food newline print ( couple [ get ] ) newline"
"woman be blindfolded . blindfolded be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( blindfolded [ be ] ) newline"
"man be older . older be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( older [ be ] ) newline"
"while wear an . while wear ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ wear ] = an newline print ( while [ wear ] ) newline"
"teacher be many . many be ?","if entities . find ( teacher ) ! = None : newline newtab entities [ teacher ] [ be ] = teacher newline print ( many [ be ] ) newline"
"bike be blond . bike be ?","if entities . find ( bike ) ! = None : newline newtab entities [ bike ] [ be ] = blond newline print ( bike [ be ] ) newline"
"blouse be swinging . swinging be ?","if entities . find ( blouse ) ! = None : newline newtab entities [ blouse ] [ be ] = blouse newline print ( swinging [ be ] ) newline"
"airport do some . some do ?","if entities . find ( airport ) ! = None : newline newtab entities [ airport ] [ do ] = airport newline print ( some [ do ] ) newline"
"worker sweep out . out sweep ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ sweep ] = worker newline print ( out [ sweep ] ) newline"
"woman be laughing . laughing be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( laughing [ be ] ) newline"
"dog be two . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = two newline print ( dog [ be ] ) newline"
"sun set sun . sun set ?","if entities . find ( sun ) ! = None : newline newtab entities [ sun ] [ set ] = sun newline print ( sun [ set ] ) newline"
"snowboarder perform karate . snowboarder perform ?","if entities . find ( snowboarder ) ! = None : newline newtab entities [ snowboarder ] [ perform ] = karate newline print ( snowboarder [ perform ] ) newline"
"man be colorful . colorful be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( colorful [ be ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"people be sleeping . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = sleeping newline print ( people [ be ] ) newline"
"child wear scarf . child wear ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wear ] = scarf newline print ( child [ wear ] ) newline"
"band play acoustic . acoustic play ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ play ] = band newline print ( acoustic [ play ] ) newline"
"boy run while . boy run ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ run ] = while newline print ( boy [ run ] ) newline"
"box be two . box be ?","if entities . find ( box ) ! = None : newline newtab entities [ box ] [ be ] = two newline print ( box [ be ] ) newline"
"child walk out . out walk ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ walk ] = child newline print ( out [ walk ] ) newline"
"hill stand next . next stand ?","if entities . find ( hill ) ! = None : newline newtab entities [ hill ] [ stand ] = hill newline print ( next [ stand ] ) newline"
"lady wear life . lady wear ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ wear ] = life newline print ( lady [ wear ] ) newline"
"dog smell flower . dog smell ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ smell ] = flower newline print ( dog [ smell ] ) newline"
"child be laughing . laughing be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( laughing [ be ] ) newline"
"orange shirt next . next shirt ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ shirt ] = orange newline print ( next [ shirt ] ) newline"
"man play keyboard . man play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = keyboard newline print ( man [ play ] ) newline"
"jacket be blindfolded . blindfolded be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = jacket newline print ( blindfolded [ be ] ) newline"
"group put out . out put ?","if entities . find ( group ) ! = None : newline newtab entities [ group ] [ put ] = group newline print ( out [ put ] ) newline"
"man hold pole . man hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = pole newline print ( man [ hold ] ) newline"
"four seat people . four seat ?","if entities . find ( four ) ! = None : newline newtab entities [ four ] [ seat ] = people newline print ( four [ seat ] ) newline"
"dog walk alone . alone walk ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ walk ] = dog newline print ( alone [ walk ] ) newline"
"silver short swinging . swinging short ?","if entities . find ( silver ) ! = None : newline newtab entities [ silver ] [ short ] = silver newline print ( swinging [ short ] ) newline"
"while lay face . while lay ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ lay ] = face newline print ( while [ lay ] ) newline"
"passenger train station . passenger train ?","if entities . find ( passenger ) ! = None : newline newtab entities [ passenger ] [ train ] = station newline print ( passenger [ train ] ) newline"
"street hold out . out hold ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ hold ] = street newline print ( out [ hold ] ) newline"
"car ride an . car ride ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ ride ] = an newline print ( car [ ride ] ) newline"
"table eat ice . table eat ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ eat ] = ice newline print ( table [ eat ] ) newline"
"surfer ride stationary . stationary ride ?","if entities . find ( surfer ) ! = None : newline newtab entities [ surfer ] [ ride ] = surfer newline print ( stationary [ ride ] ) newline"
"man ride alone . alone ride ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ ride ] = man newline print ( alone [ ride ] ) newline"
"sunglasses walk alone . alone walk ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ walk ] = sunglasses newline print ( alone [ walk ] ) newline"
"woman walk next . next walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = woman newline print ( next [ walk ] ) newline"
"boat ride numerous . numerous ride ?","if entities . find ( boat ) ! = None : newline newtab entities [ boat ] [ ride ] = boat newline print ( numerous [ ride ] ) newline"
"wave crash white . white crash ?","if entities . find ( wave ) ! = None : newline newtab entities [ wave ] [ crash ] = wave newline print ( white [ crash ] ) newline"
"woman hold sign . woman hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = sign newline print ( woman [ hold ] ) newline"
"girl be staring . staring be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( staring [ be ] ) newline"
"people play live . live play ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ play ] = people newline print ( live [ play ] ) newline"
"worker be hundred . worker be ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ be ] = hundred newline print ( worker [ be ] ) newline"
"people be three . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = three newline print ( people [ be ] ) newline"
"red shirt swinging . swinging shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( swinging [ shirt ] ) newline"
"person be airborne . airborne be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = person newline print ( airborne [ be ] ) newline"
"child hold blue . blue hold ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ hold ] = child newline print ( blue [ hold ] ) newline"
"bike wear white . white wear ?","if entities . find ( bike ) ! = None : newline newtab entities [ bike ] [ wear ] = bike newline print ( white [ wear ] ) newline"
"people be sleeping . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = sleeping newline print ( people [ be ] ) newline"
"hiker be sleeping . hiker be ?","if entities . find ( hiker ) ! = None : newline newtab entities [ hiker ] [ be ] = sleeping newline print ( hiker [ be ] ) newline"
"guy stand knee . guy stand ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ stand ] = knee newline print ( guy [ stand ] ) newline"
"judea protest sign . judea protest ?","if entities . find ( judea ) ! = None : newline newtab entities [ judea ] [ protest ] = sign newline print ( judea [ protest ] ) newline"
"worker be featured . featured be ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ be ] = worker newline print ( featured [ be ] ) newline"
"spain stop sign . spain stop ?","if entities . find ( spain ) ! = None : newline newtab entities [ spain ] [ stop ] = sign newline print ( spain [ stop ] ) newline"
"gymnast be next . next be ?","if entities . find ( gymnast ) ! = None : newline newtab entities [ gymnast ] [ be ] = gymnast newline print ( next [ be ] ) newline"
"child look doll . child look ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ look ] = doll newline print ( child [ look ] ) newline"
"people have some . some have ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ have ] = people newline print ( some [ have ] ) newline"
"brown leave arm . brown leave ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ leave ] = arm newline print ( brown [ leave ] ) newline"
"heart shave another . another shave ?","if entities . find ( heart ) ! = None : newline newtab entities [ heart ] [ shave ] = heart newline print ( another [ shave ] ) newline"
"peddler sell bread . peddler sell ?","if entities . find ( peddler ) ! = None : newline newtab entities [ peddler ] [ sell ] = bread newline print ( peddler [ sell ] ) newline"
"child stand next . next stand ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ stand ] = child newline print ( next [ stand ] ) newline"
"dog run two . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = two newline print ( dog [ run ] ) newline"
"suit pull suitcase . suit pull ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ pull ] = suitcase newline print ( suit [ pull ] ) newline"
"man be both . both be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( both [ be ] ) newline"
"people be an . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = an newline print ( people [ be ] ) newline"
"dog lick an . dog lick ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ lick ] = an newline print ( dog [ lick ] ) newline"
"people enjoy some . some enjoy ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ enjoy ] = people newline print ( some [ enjoy ] ) newline"
"man kick another . another kick ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ kick ] = man newline print ( another [ kick ] ) newline"
"kid be raining . raining be ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ be ] = kid newline print ( raining [ be ] ) newline"
"beard wear an . beard wear ?","if entities . find ( beard ) ! = None : newline newtab entities [ beard ] [ wear ] = an newline print ( beard [ wear ] ) newline"
"two police officer . two police ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ police ] = officer newline print ( two [ police ] ) newline"
"dock look out . out look ?","if entities . find ( dock ) ! = None : newline newtab entities [ dock ] [ look ] = dock newline print ( out [ look ] ) newline"
"head walk trough . head walk ?","if entities . find ( head ) ! = None : newline newtab entities [ head ] [ walk ] = trough newline print ( head [ walk ] ) newline"
"man pose while . man pose ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ pose ] = while newline print ( man [ pose ] ) newline"
"man touch first . first touch ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ touch ] = man newline print ( first [ touch ] ) newline"
"girl be fun . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = fun newline print ( girl [ be ] ) newline"
"girl walk three . girl walk ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ walk ] = three newline print ( girl [ walk ] ) newline"
"people sit next . next sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( next [ sit ] ) newline"
"jeans pull out . out pull ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ pull ] = jeans newline print ( out [ pull ] ) newline"
"kid be married . married be ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ be ] = kid newline print ( married [ be ] ) newline"
"green grass track . green grass ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ grass ] = track newline print ( green [ grass ] ) newline"
"trunks be many . many be ?","if entities . find ( trunks ) ! = None : newline newtab entities [ trunks ] [ be ] = trunks newline print ( many [ be ] ) newline"
"squad pose next . next pose ?","if entities . find ( squad ) ! = None : newline newtab entities [ squad ] [ pose ] = squad newline print ( next [ pose ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"man hold out . out hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = man newline print ( out [ hold ] ) newline"
"man be trophy . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = trophy newline print ( man [ be ] ) newline"
"girl wear sunglasses . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = sunglasses newline print ( girl [ wear ] ) newline"
"gear perform some . some perform ?","if entities . find ( gear ) ! = None : newline newtab entities [ gear ] [ perform ] = gear newline print ( some [ perform ] ) newline"
"jeans lean out . out lean ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ lean ] = jeans newline print ( out [ lean ] ) newline"
"helmet be dark . dark be ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ be ] = helmet newline print ( dark [ be ] ) newline"
"man navigate two . man navigate ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ navigate ] = two newline print ( man [ navigate ] ) newline"
"sandal walk while . sandal walk ?","if entities . find ( sandal ) ! = None : newline newtab entities [ sandal ] [ walk ] = while newline print ( sandal [ walk ] ) newline"
"dog run careful . careful run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( careful [ run ] ) newline"
"men work men . men work ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ work ] = men newline print ( men [ work ] ) newline"
"people stare two . people stare ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stare ] = two newline print ( people [ stare ] ) newline"
"wheel perform yoga . wheel perform ?","if entities . find ( wheel ) ! = None : newline newtab entities [ wheel ] [ perform ] = yoga newline print ( wheel [ perform ] ) newline"
"waterfront set chessboard . waterfront set ?","if entities . find ( waterfront ) ! = None : newline newtab entities [ waterfront ] [ set ] = chessboard newline print ( waterfront [ set ] ) newline"
"machine be an . machine be ?","if entities . find ( machine ) ! = None : newline newtab entities [ machine ] [ be ] = an newline print ( machine [ be ] ) newline"
"wheelchair sit next . next sit ?","if entities . find ( wheelchair ) ! = None : newline newtab entities [ wheelchair ] [ sit ] = wheelchair newline print ( next [ sit ] ) newline"
"orange short swinging . swinging short ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ short ] = orange newline print ( swinging [ short ] ) newline"
"woman struggle two . woman struggle ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ struggle ] = two newline print ( woman [ struggle ] ) newline"
"ice skate white . white skate ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ skate ] = ice newline print ( white [ skate ] ) newline"
"people dress elderly . elderly dress ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ dress ] = people newline print ( elderly [ dress ] ) newline"
"sweatshirt grab food . sweatshirt grab ?","if entities . find ( sweatshirt ) ! = None : newline newtab entities [ sweatshirt ] [ grab ] = food newline print ( sweatshirt [ grab ] ) newline"
"teenager have tall . tall have ?","if entities . find ( teenager ) ! = None : newline newtab entities [ teenager ] [ have ] = teenager newline print ( tall [ have ] ) newline"
"hair be two . hair be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = two newline print ( hair [ be ] ) newline"
"red hat shovel . red hat ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ hat ] = shovel newline print ( red [ hat ] ) newline"
"person be laughing . laughing be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = person newline print ( laughing [ be ] ) newline"
"biker be laughing . laughing be ?","if entities . find ( biker ) ! = None : newline newtab entities [ biker ] [ be ] = biker newline print ( laughing [ be ] ) newline"
"lady stand alone . alone stand ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ stand ] = lady newline print ( alone [ stand ] ) newline"
"seattle hold white . white hold ?","if entities . find ( seattle ) ! = None : newline newtab entities [ seattle ] [ hold ] = seattle newline print ( white [ hold ] ) newline"
"dock view aquatic . aquatic view ?","if entities . find ( dock ) ! = None : newline newtab entities [ dock ] [ view ] = dock newline print ( aquatic [ view ] ) newline"
"while cross legged . legged cross ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ cross ] = while newline print ( legged [ cross ] ) newline"
"man wear silver . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = silver newline print ( man [ wear ] ) newline"
"diver communicate while . diver communicate ?","if entities . find ( diver ) ! = None : newline newtab entities [ diver ] [ communicate ] = while newline print ( diver [ communicate ] ) newline"
"sandpit play frisbee . sandpit play ?","if entities . find ( sandpit ) ! = None : newline newtab entities [ sandpit ] [ play ] = frisbee newline print ( sandpit [ play ] ) newline"
"man ride horse . man ride ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ ride ] = horse newline print ( man [ ride ] ) newline"
"child dress man . child dress ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ dress ] = man newline print ( child [ dress ] ) newline"
"who appear white . white appear ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ appear ] = who newline print ( white [ appear ] ) newline"
"woman cook some . some cook ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ cook ] = woman newline print ( some [ cook ] ) newline"
"street rally white . white rally ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ rally ] = street newline print ( white [ rally ] ) newline"
"plaid shirt spray . plaid shirt ?","if entities . find ( plaid ) ! = None : newline newtab entities [ plaid ] [ shirt ] = spray newline print ( plaid [ shirt ] ) newline"
"people be disinterested . disinterested be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( disinterested [ be ] ) newline"
"men stand next . next stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = men newline print ( next [ stand ] ) newline"
"city carpet next . next carpet ?","if entities . find ( city ) ! = None : newline newtab entities [ city ] [ carpet ] = city newline print ( next [ carpet ] ) newline"
"sign ask white . white ask ?","if entities . find ( sign ) ! = None : newline newtab entities [ sign ] [ ask ] = sign newline print ( white [ ask ] ) newline"
"worker saw two . worker saw ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ saw ] = two newline print ( worker [ saw ] ) newline"
"people try out . out try ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ try ] = people newline print ( out [ try ] ) newline"
"man wear red . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = red newline print ( man [ wear ] ) newline"
"woman be purple . purple be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( purple [ be ] ) newline"
"woman stand while . woman stand ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ stand ] = while newline print ( woman [ stand ] ) newline"
"lesbian have multiple . multiple have ?","if entities . find ( lesbian ) ! = None : newline newtab entities [ lesbian ] [ have ] = lesbian newline print ( multiple [ have ] ) newline"
"dog be laughing . laughing be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( laughing [ be ] ) newline"
"ice cream vendor . ice cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = vendor newline print ( ice [ cream ] ) newline"
"vegetable wait next . next wait ?","if entities . find ( vegetable ) ! = None : newline newtab entities [ vegetable ] [ wait ] = vegetable newline print ( next [ wait ] ) newline"
"puppy chew two . puppy chew ?","if entities . find ( puppy ) ! = None : newline newtab entities [ puppy ] [ chew ] = two newline print ( puppy [ chew ] ) newline"
"jacket be prominent . prominent be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = jacket newline print ( prominent [ be ] ) newline"
"woman stand next . next stand ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ stand ] = woman newline print ( next [ stand ] ) newline"
"child watch some . some watch ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ watch ] = child newline print ( some [ watch ] ) newline"
"child fix blond . child fix ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ fix ] = blond newline print ( child [ fix ] ) newline"
"road splash water . road splash ?","if entities . find ( road ) ! = None : newline newtab entities [ road ] [ splash ] = water newline print ( road [ splash ] ) newline"
"restaurant observe white . white observe ?","if entities . find ( restaurant ) ! = None : newline newtab entities [ restaurant ] [ observe ] = restaurant newline print ( white [ observe ] ) newline"
"baby be airborne . airborne be ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ be ] = baby newline print ( airborne [ be ] ) newline"
"polo shirt swinging . swinging shirt ?","if entities . find ( polo ) ! = None : newline newtab entities [ polo ] [ shirt ] = polo newline print ( swinging [ shirt ] ) newline"
"people walk while . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = while newline print ( people [ walk ] ) newline"
"top be teaching . top be ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ be ] = teaching newline print ( top [ be ] ) newline"
"orange robe white . white robe ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ robe ] = orange newline print ( white [ robe ] ) newline"
"two smile toddler . two smile ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ smile ] = toddler newline print ( two [ smile ] ) newline"
"people be busy . busy be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( busy [ be ] ) newline"
"face hold high . high hold ?","if entities . find ( face ) ! = None : newline newtab entities [ face ] [ hold ] = face newline print ( high [ hold ] ) newline"
"bird take outdoor . outdoor take ?","if entities . find ( bird ) ! = None : newline newtab entities [ bird ] [ take ] = bird newline print ( outdoor [ take ] ) newline"
"ice cream out . out cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = ice newline print ( out [ cream ] ) newline"
"boy hold flag . boy hold ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ hold ] = flag newline print ( boy [ hold ] ) newline"
"people enjoy some . some enjoy ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ enjoy ] = people newline print ( some [ enjoy ] ) newline"
"suit be sleeping . suit be ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ be ] = sleeping newline print ( suit [ be ] ) newline"
"people line street . people line ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ line ] = street newline print ( people [ line ] ) newline"
"people be visible . visible be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( visible [ be ] ) newline"
"man speak while . man speak ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ speak ] = while newline print ( man [ speak ] ) newline"
"phone face girl . phone face ?","if entities . find ( phone ) ! = None : newline newtab entities [ phone ] [ face ] = girl newline print ( phone [ face ] ) newline"
"people be white . white be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( white [ be ] ) newline"
"biker be an . biker be ?","if entities . find ( biker ) ! = None : newline newtab entities [ biker ] [ be ] = an newline print ( biker [ be ] ) newline"
"man greet white . white greet ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ greet ] = man newline print ( white [ greet ] ) newline"
"head pass time . head pass ?","if entities . find ( head ) ! = None : newline newtab entities [ head ] [ pass ] = time newline print ( head [ pass ] ) newline"
"child be out . out be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( out [ be ] ) newline"
"band be child . band be ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ be ] = child newline print ( band [ be ] ) newline"
"dog be several . several be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( several [ be ] ) newline"
"while walk two . while walk ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ walk ] = two newline print ( while [ walk ] ) newline"
"grandpa be member . grandpa be ?","if entities . find ( grandpa ) ! = None : newline newtab entities [ grandpa ] [ be ] = member newline print ( grandpa [ be ] ) newline"
"man attempt two . man attempt ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ attempt ] = two newline print ( man [ attempt ] ) newline"
"woman dress men . woman dress ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dress ] = men newline print ( woman [ dress ] ) newline"
"woman watch another . another watch ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ watch ] = woman newline print ( another [ watch ] ) newline"
"worker take picture . worker take ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ take ] = picture newline print ( worker [ take ] ) newline"
"couple dress man . couple dress ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ dress ] = man newline print ( couple [ dress ] ) newline"
"people look woman . people look ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ look ] = woman newline print ( people [ look ] ) newline"
"people be all . all be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( all [ be ] ) newline"
"woman realign white . white realign ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ realign ] = woman newline print ( white [ realign ] ) newline"
"man wait next . next wait ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wait ] = man newline print ( next [ wait ] ) newline"
"worker be swinging . swinging be ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ be ] = worker newline print ( swinging [ be ] ) newline"
"tan build while . tan build ?","if entities . find ( tan ) ! = None : newline newtab entities [ tan ] [ build ] = while newline print ( tan [ build ] ) newline"
"worker stand upside . worker stand ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ stand ] = upside newline print ( worker [ stand ] ) newline"
"boy try two . boy try ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ try ] = two newline print ( boy [ try ] ) newline"
"child be rock . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = rock newline print ( child [ be ] ) newline"
"man stand chest . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = chest newline print ( man [ stand ] ) newline"
"man be sorting . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sorting newline print ( man [ be ] ) newline"
"dog shake water . dog shake ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ shake ] = water newline print ( dog [ shake ] ) newline"
"event pose next . next pose ?","if entities . find ( event ) ! = None : newline newtab entities [ event ] [ pose ] = event newline print ( next [ pose ] ) newline"
"child be still . still be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( still [ be ] ) newline"
"bicyclist be sleeping . bicyclist be ?","if entities . find ( bicyclist ) ! = None : newline newtab entities [ bicyclist ] [ be ] = sleeping newline print ( bicyclist [ be ] ) newline"
"man beg white . white beg ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ beg ] = man newline print ( white [ beg ] ) newline"
"street line road . street line ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ line ] = road newline print ( street [ line ] ) newline"
"dog jump high . high jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = dog newline print ( high [ jump ] ) newline"
"top sit while . top sit ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ sit ] = while newline print ( top [ sit ] ) newline"
"red shirt laugh . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = laugh newline print ( red [ shirt ] ) newline"
"orchestra perform band . orchestra perform ?","if entities . find ( orchestra ) ! = None : newline newtab entities [ orchestra ] [ perform ] = band newline print ( orchestra [ perform ] ) newline"
"man be many . many be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( many [ be ] ) newline"
"dog be two . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = two newline print ( dog [ be ] ) newline"
"people sit next . next sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( next [ sit ] ) newline"
"girl be laughing . laughing be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( laughing [ be ] ) newline"
"pedestrian look man . pedestrian look ?","if entities . find ( pedestrian ) ! = None : newline newtab entities [ pedestrian ] [ look ] = man newline print ( pedestrian [ look ] ) newline"
"people dress little . little dress ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ dress ] = people newline print ( little [ dress ] ) newline"
"woman be writer . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = writer newline print ( woman [ be ] ) newline"
"plaid shirt balance . plaid shirt ?","if entities . find ( plaid ) ! = None : newline newtab entities [ plaid ] [ shirt ] = balance newline print ( plaid [ shirt ] ) newline"
"graffiti cover another . another cover ?","if entities . find ( graffiti ) ! = None : newline newtab entities [ graffiti ] [ cover ] = graffiti newline print ( another [ cover ] ) newline"
"lady walk while . lady walk ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ walk ] = while newline print ( lady [ walk ] ) newline"
"brown be full . full be ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ be ] = brown newline print ( full [ be ] ) newline"
"can be sleeping . can be ?","if entities . find ( can ) ! = None : newline newtab entities [ can ] [ be ] = sleeping newline print ( can [ be ] ) newline"
"front wear martial . martial wear ?","if entities . find ( front ) ! = None : newline newtab entities [ front ] [ wear ] = front newline print ( martial [ wear ] ) newline"
"palm tree white . white tree ?","if entities . find ( palm ) ! = None : newline newtab entities [ palm ] [ tree ] = palm newline print ( white [ tree ] ) newline"
"sun mask man . sun mask ?","if entities . find ( sun ) ! = None : newline newtab entities [ sun ] [ mask ] = man newline print ( sun [ mask ] ) newline"
"who adopt two . who adopt ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ adopt ] = two newline print ( who [ adopt ] ) newline"
"people walk out . out walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( out [ walk ] ) newline"
"coffee shop bag . coffee shop ?","if entities . find ( coffee ) ! = None : newline newtab entities [ coffee ] [ shop ] = bag newline print ( coffee [ shop ] ) newline"
"woman sit while . woman sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = while newline print ( woman [ sit ] ) newline"
"man be bigger . bigger be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( bigger [ be ] ) newline"
"child get ready . ready get ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ get ] = child newline print ( ready [ get ] ) newline"
"horn sit or . horn sit ?","if entities . find ( horn ) ! = None : newline newtab entities [ horn ] [ sit ] = or newline print ( horn [ sit ] ) newline"
"two cop white . white cop ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ cop ] = two newline print ( white [ cop ] ) newline"
"who be sleeping . who be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = sleeping newline print ( who [ be ] ) newline"
"woman gather various . various gather ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ gather ] = woman newline print ( various [ gather ] ) newline"
"woman be sleeping . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sleeping newline print ( woman [ be ] ) newline"
"boy practice music . boy practice ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ practice ] = music newline print ( boy [ practice ] ) newline"
"stone step next . next step ?","if entities . find ( stone ) ! = None : newline newtab entities [ stone ] [ step ] = stone newline print ( next [ step ] ) newline"
"men sit while . men sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = while newline print ( men [ sit ] ) newline"
"person get air . person get ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ get ] = air newline print ( person [ get ] ) newline"
"tribe be upside . tribe be ?","if entities . find ( tribe ) ! = None : newline newtab entities [ tribe ] [ be ] = upside newline print ( tribe [ be ] ) newline"
"child play music . child play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = music newline print ( child [ play ] ) newline"
"foreground be next . next be ?","if entities . find ( foreground ) ! = None : newline newtab entities [ foreground ] [ be ] = foreground newline print ( next [ be ] ) newline"
"boy wear red . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = red newline print ( boy [ wear ] ) newline"
"child dress partner . child dress ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ dress ] = partner newline print ( child [ dress ] ) newline"
"midair wait next . next wait ?","if entities . find ( midair ) ! = None : newline newtab entities [ midair ] [ wait ] = midair newline print ( next [ wait ] ) newline"
"man wear red . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = red newline print ( man [ wear ] ) newline"
"red shirt point . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = point newline print ( red [ shirt ] ) newline"
"mold creep two . mold creep ?","if entities . find ( mold ) ! = None : newline newtab entities [ mold ] [ creep ] = two newline print ( mold [ creep ] ) newline"
"man watch another . another watch ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ watch ] = man newline print ( another [ watch ] ) newline"
"man stand upside . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = upside newline print ( man [ stand ] ) newline"
"woman work men . woman work ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ work ] = men newline print ( woman [ work ] ) newline"
"bag contain many . many contain ?","if entities . find ( bag ) ! = None : newline newtab entities [ bag ] [ contain ] = bag newline print ( many [ contain ] ) newline"
"man be underway . underway be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( underway [ be ] ) newline"
"station make tea . station make ?","if entities . find ( station ) ! = None : newline newtab entities [ station ] [ make ] = tea newline print ( station [ make ] ) newline"
"sunglasses play music . sunglasses play ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ play ] = music newline print ( sunglasses [ play ] ) newline"
"red short both . both short ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ short ] = red newline print ( both [ short ] ) newline"
"people watch another . another watch ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ watch ] = people newline print ( another [ watch ] ) newline"
"people be all . all be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( all [ be ] ) newline"
"people dress laughing . laughing dress ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ dress ] = people newline print ( laughing [ dress ] ) newline"
"dog be two . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = two newline print ( dog [ be ] ) newline"
"man wear outdoor . outdoor wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( outdoor [ wear ] ) newline"
"road talk next . next talk ?","if entities . find ( road ) ! = None : newline newtab entities [ road ] [ talk ] = road newline print ( next [ talk ] ) newline"
"cane stand patrol . cane stand ?","if entities . find ( cane ) ! = None : newline newtab entities [ cane ] [ stand ] = patrol newline print ( cane [ stand ] ) newline"
"girl be next . next be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( next [ be ] ) newline"
"bicyclist race uniform . uniform race ?","if entities . find ( bicyclist ) ! = None : newline newtab entities [ bicyclist ] [ race ] = bicyclist newline print ( uniform [ race ] ) newline"
"respirator mask individual . individual mask ?","if entities . find ( respirator ) ! = None : newline newtab entities [ respirator ] [ mask ] = respirator newline print ( individual [ mask ] ) newline"
"woman have fun . woman have ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ have ] = fun newline print ( woman [ have ] ) newline"
"people play musical . musical play ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ play ] = people newline print ( musical [ play ] ) newline"
"man wear head . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = head newline print ( man [ wear ] ) newline"
"teeth bare white . white bare ?","if entities . find ( teeth ) ! = None : newline newtab entities [ teeth ] [ bare ] = teeth newline print ( white [ bare ] ) newline"
"individual be teaching . individual be ?","if entities . find ( individual ) ! = None : newline newtab entities [ individual ] [ be ] = teaching newline print ( individual [ be ] ) newline"
"baby dress out . out dress ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ dress ] = baby newline print ( out [ dress ] ) newline"
"dog run dog . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( dog [ run ] ) newline"
"man finish white . white finish ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ finish ] = man newline print ( white [ finish ] ) newline"
"people ride high . high ride ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ ride ] = people newline print ( high [ ride ] ) newline"
"teenager sit next . next sit ?","if entities . find ( teenager ) ! = None : newline newtab entities [ teenager ] [ sit ] = teenager newline print ( next [ sit ] ) newline"
"dog bound while . dog bound ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ bound ] = while newline print ( dog [ bound ] ) newline"
"people be both . both be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( both [ be ] ) newline"
"hair play various . various play ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ play ] = hair newline print ( various [ play ] ) newline"
"bicyclist wear blue . blue wear ?","if entities . find ( bicyclist ) ! = None : newline newtab entities [ bicyclist ] [ wear ] = bicyclist newline print ( blue [ wear ] ) newline"
"who be airborne . airborne be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( airborne [ be ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"men be light . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = light newline print ( men [ be ] ) newline"
"suit be unknown . unknown be ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ be ] = suit newline print ( unknown [ be ] ) newline"
"quarterback be all . all be ?","if entities . find ( quarterback ) ! = None : newline newtab entities [ quarterback ] [ be ] = quarterback newline print ( all [ be ] ) newline"
"people explore white . white explore ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ explore ] = people newline print ( white [ explore ] ) newline"
"girl be laughing . laughing be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( laughing [ be ] ) newline"
"umbrella be person . umbrella be ?","if entities . find ( umbrella ) ! = None : newline newtab entities [ umbrella ] [ be ] = person newline print ( umbrella [ be ] ) newline"
"keyboard stand next . next stand ?","if entities . find ( keyboard ) ! = None : newline newtab entities [ keyboard ] [ stand ] = keyboard newline print ( next [ stand ] ) newline"
"woman be busy . busy be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( busy [ be ] ) newline"
"ninja garb white . white garb ?","if entities . find ( ninja ) ! = None : newline newtab entities [ ninja ] [ garb ] = ninja newline print ( white [ garb ] ) newline"
"jacket stand next . next stand ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ stand ] = jacket newline print ( next [ stand ] ) newline"
"people be sleeping . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = sleeping newline print ( people [ be ] ) newline"
"california run while . california run ?","if entities . find ( california ) ! = None : newline newtab entities [ california ] [ run ] = while newline print ( california [ run ] ) newline"
"man play chess . man play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = chess newline print ( man [ play ] ) newline"
"people be swinging . swinging be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( swinging [ be ] ) newline"
"woman perform music . woman perform ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ perform ] = music newline print ( woman [ perform ] ) newline"
"rider be two . rider be ?","if entities . find ( rider ) ! = None : newline newtab entities [ rider ] [ be ] = two newline print ( rider [ be ] ) newline"
"street hold white . white hold ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ hold ] = street newline print ( white [ hold ] ) newline"
"bridge decorate cardboard . cardboard decorate ?","if entities . find ( bridge ) ! = None : newline newtab entities [ bridge ] [ decorate ] = bridge newline print ( cardboard [ decorate ] ) newline"
"road splash another . another splash ?","if entities . find ( road ) ! = None : newline newtab entities [ road ] [ splash ] = road newline print ( another [ splash ] ) newline"
"child watch one . one watch ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ watch ] = child newline print ( one [ watch ] ) newline"
"silver short swinging . swinging short ?","if entities . find ( silver ) ! = None : newline newtab entities [ silver ] [ short ] = silver newline print ( swinging [ short ] ) newline"
"road hold upright . upright hold ?","if entities . find ( road ) ! = None : newline newtab entities [ road ] [ hold ] = road newline print ( upright [ hold ] ) newline"
"while walk dog . while walk ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ walk ] = dog newline print ( while [ walk ] ) newline"
"an empty room . an empty ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ empty ] = room newline print ( an [ empty ] ) newline"
"woman peruse two . woman peruse ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ peruse ] = two newline print ( woman [ peruse ] ) newline"
"bird take picture . bird take ?","if entities . find ( bird ) ! = None : newline newtab entities [ bird ] [ take ] = picture newline print ( bird [ take ] ) newline"
"people be rock . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = rock newline print ( people [ be ] ) newline"
"bus pass time . bus pass ?","if entities . find ( bus ) ! = None : newline newtab entities [ bus ] [ pass ] = time newline print ( bus [ pass ] ) newline"
"orange vest next . next vest ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ vest ] = orange newline print ( next [ vest ] ) newline"
"man wear snow . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = snow newline print ( man [ wear ] ) newline"
"palm tree white . white tree ?","if entities . find ( palm ) ! = None : newline newtab entities [ palm ] [ tree ] = palm newline print ( white [ tree ] ) newline"
"face cover area . face cover ?","if entities . find ( face ) ! = None : newline newtab entities [ face ] [ cover ] = area newline print ( face [ cover ] ) newline"
"tan coat white . white coat ?","if entities . find ( tan ) ! = None : newline newtab entities [ tan ] [ coat ] = tan newline print ( white [ coat ] ) newline"
"child hold utensil . child hold ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ hold ] = utensil newline print ( child [ hold ] ) newline"
"man be brake . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = brake newline print ( man [ be ] ) newline"
"lab jump obstacle . lab jump ?","if entities . find ( lab ) ! = None : newline newtab entities [ lab ] [ jump ] = obstacle newline print ( lab [ jump ] ) newline"
"street do ballet . street do ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ do ] = ballet newline print ( street [ do ] ) newline"
"woman be sleeping . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sleeping newline print ( woman [ be ] ) newline"
"boy walk out . out walk ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ walk ] = boy newline print ( out [ walk ] ) newline"
"helmet be white . white be ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ be ] = helmet newline print ( white [ be ] ) newline"
"fisherman be next . next be ?","if entities . find ( fisherman ) ! = None : newline newtab entities [ fisherman ] [ be ] = fisherman newline print ( next [ be ] ) newline"
"pointer rest while . pointer rest ?","if entities . find ( pointer ) ! = None : newline newtab entities [ pointer ] [ rest ] = while newline print ( pointer [ rest ] ) newline"
"girl be two . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = two newline print ( girl [ be ] ) newline"
"man dress people . man dress ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ dress ] = people newline print ( man [ dress ] ) newline"
"group be rock . group be ?","if entities . find ( group ) ! = None : newline newtab entities [ group ] [ be ] = rock newline print ( group [ be ] ) newline"
"suit be several . several be ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ be ] = suit newline print ( several [ be ] ) newline"
"choir be opening . choir be ?","if entities . find ( choir ) ! = None : newline newtab entities [ choir ] [ be ] = opening newline print ( choir [ be ] ) newline"
"who sell creative . creative sell ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ sell ] = who newline print ( creative [ sell ] ) newline"
"trunks be white . white be ?","if entities . find ( trunks ) ! = None : newline newtab entities [ trunks ] [ be ] = trunks newline print ( white [ be ] ) newline"
"woman be next . next be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( next [ be ] ) newline"
"park look out . out look ?","if entities . find ( park ) ! = None : newline newtab entities [ park ] [ look ] = park newline print ( out [ look ] ) newline"
"flag splay out . out splay ?","if entities . find ( flag ) ! = None : newline newtab entities [ flag ] [ splay ] = flag newline print ( out [ splay ] ) newline"
"men sit while . men sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = while newline print ( men [ sit ] ) newline"
"man stand camera . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = camera newline print ( man [ stand ] ) newline"
"woman sit or . woman sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = or newline print ( woman [ sit ] ) newline"
"people sit man . people sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = man newline print ( people [ sit ] ) newline"
"man prepare some . some prepare ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ prepare ] = man newline print ( some [ prepare ] ) newline"
"woman pull an . woman pull ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ pull ] = an newline print ( woman [ pull ] ) newline"
"red hat guide . red hat ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ hat ] = guide newline print ( red [ hat ] ) newline"
"circle chant two . circle chant ?","if entities . find ( circle ) ! = None : newline newtab entities [ circle ] [ chant ] = two newline print ( circle [ chant ] ) newline"
"track meet while . track meet ?","if entities . find ( track ) ! = None : newline newtab entities [ track ] [ meet ] = while newline print ( track [ meet ] ) newline"
"woman be many . many be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( many [ be ] ) newline"
"man be out . out be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( out [ be ] ) newline"
"toddler watch while . toddler watch ?","if entities . find ( toddler ) ! = None : newline newtab entities [ toddler ] [ watch ] = while newline print ( toddler [ watch ] ) newline"
"people pull face . people pull ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ pull ] = face newline print ( people [ pull ] ) newline"
"dog be sleeping . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = sleeping newline print ( dog [ be ] ) newline"
"or fill stage . or fill ?","if entities . find ( or ) ! = None : newline newtab entities [ or ] [ fill ] = stage newline print ( or [ fill ] ) newline"
"who be all . all be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( all [ be ] ) newline"
"guy hold an . guy hold ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ hold ] = an newline print ( guy [ hold ] ) newline"
"man wear an . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = an newline print ( man [ wear ] ) newline"
"member stand ready . ready stand ?","if entities . find ( member ) ! = None : newline newtab entities [ member ] [ stand ] = member newline print ( ready [ stand ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"or get air . or get ?","if entities . find ( or ) ! = None : newline newtab entities [ or ] [ get ] = air newline print ( or [ get ] ) newline"
"while surround one . one surround ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ surround ] = while newline print ( one [ surround ] ) newline"
"men be sleeping . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = sleeping newline print ( men [ be ] ) newline"
"person sit next . next sit ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ sit ] = person newline print ( next [ sit ] ) newline"
"men smile african . african smile ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ smile ] = men newline print ( african [ smile ] ) newline"
"jeans stand next . next stand ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ stand ] = jeans newline print ( next [ stand ] ) newline"
"woman be out . out be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( out [ be ] ) newline"
"maroon shirt brown . maroon shirt ?","if entities . find ( maroon ) ! = None : newline newtab entities [ maroon ] [ shirt ] = brown newline print ( maroon [ shirt ] ) newline"
"boy push some . some push ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ push ] = boy newline print ( some [ push ] ) newline"
"frisbee act out . out act ?","if entities . find ( frisbee ) ! = None : newline newtab entities [ frisbee ] [ act ] = frisbee newline print ( out [ act ] ) newline"
"girl dress out . out dress ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ dress ] = girl newline print ( out [ dress ] ) newline"
"while wear all . all wear ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ wear ] = while newline print ( all [ wear ] ) newline"
"man be hunched . hunched be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( hunched [ be ] ) newline"
"dog drink beer . dog drink ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ drink ] = beer newline print ( dog [ drink ] ) newline"
"boy hold an . boy hold ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ hold ] = an newline print ( boy [ hold ] ) newline"
"man wear black . black wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( black [ wear ] ) newline"
"friend be white . white be ?","if entities . find ( friend ) ! = None : newline newtab entities [ friend ] [ be ] = friend newline print ( white [ be ] ) newline"
"mouth be turing . mouth be ?","if entities . find ( mouth ) ! = None : newline newtab entities [ mouth ] [ be ] = turing newline print ( mouth [ be ] ) newline"
"apron prepare food . apron prepare ?","if entities . find ( apron ) ! = None : newline newtab entities [ apron ] [ prepare ] = food newline print ( apron [ prepare ] ) newline"
"people be many . many be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( many [ be ] ) newline"
"guitar handle white . white handle ?","if entities . find ( guitar ) ! = None : newline newtab entities [ guitar ] [ handle ] = guitar newline print ( white [ handle ] ) newline"
"face hold yellow . yellow hold ?","if entities . find ( face ) ! = None : newline newtab entities [ face ] [ hold ] = face newline print ( yellow [ hold ] ) newline"
"dog wear blue . blue wear ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ wear ] = dog newline print ( blue [ wear ] ) newline"
"while walk out . out walk ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ walk ] = while newline print ( out [ walk ] ) newline"
"dog be three . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = three newline print ( dog [ be ] ) newline"
"jacket hold white . white hold ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ hold ] = jacket newline print ( white [ hold ] ) newline"
"gray shirt hard . hard shirt ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ shirt ] = gray newline print ( hard [ shirt ] ) newline"
"suit walk arm . suit walk ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ walk ] = arm newline print ( suit [ walk ] ) newline"
"team play guitar . team play ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ play ] = guitar newline print ( team [ play ] ) newline"
"woman play basketball . woman play ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ play ] = basketball newline print ( woman [ play ] ) newline"
"sheep graze two . sheep graze ?","if entities . find ( sheep ) ! = None : newline newtab entities [ sheep ] [ graze ] = two newline print ( sheep [ graze ] ) newline"
"people be stupid . stupid be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( stupid [ be ] ) newline"
"man take picture . man take ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ take ] = picture newline print ( man [ take ] ) newline"
"coffee shop bazaar . coffee shop ?","if entities . find ( coffee ) ! = None : newline newtab entities [ coffee ] [ shop ] = bazaar newline print ( coffee [ shop ] ) newline"
"person be sleeping . person be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = sleeping newline print ( person [ be ] ) newline"
"woman be laughing . laughing be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( laughing [ be ] ) newline"
"jumpsuit be sorting . jumpsuit be ?","if entities . find ( jumpsuit ) ! = None : newline newtab entities [ jumpsuit ] [ be ] = sorting newline print ( jumpsuit [ be ] ) newline"
"boat moor white . white moor ?","if entities . find ( boat ) ! = None : newline newtab entities [ boat ] [ moor ] = boat newline print ( white [ moor ] ) newline"
"girl sit next . next sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = girl newline print ( next [ sit ] ) newline"
"park ride an . park ride ?","if entities . find ( park ) ! = None : newline newtab entities [ park ] [ ride ] = an newline print ( park [ ride ] ) newline"
"bench look man . bench look ?","if entities . find ( bench ) ! = None : newline newtab entities [ bench ] [ look ] = man newline print ( bench [ look ] ) newline"
"cap come tackler . cap come ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ come ] = tackler newline print ( cap [ come ] ) newline"
"sunglasses walk while . sunglasses walk ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ walk ] = while newline print ( sunglasses [ walk ] ) newline"
"officer stand knee . officer stand ?","if entities . find ( officer ) ! = None : newline newtab entities [ officer ] [ stand ] = knee newline print ( officer [ stand ] ) newline"
"park jog next . next jog ?","if entities . find ( park ) ! = None : newline newtab entities [ park ] [ jog ] = park newline print ( next [ jog ] ) newline"
"girl play electric . electric play ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ play ] = girl newline print ( electric [ play ] ) newline"
"female be belongings . female be ?","if entities . find ( female ) ! = None : newline newtab entities [ female ] [ be ] = belongings newline print ( female [ be ] ) newline"
"man be adjacent . adjacent be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( adjacent [ be ] ) newline"
"lego set while . lego set ?","if entities . find ( lego ) ! = None : newline newtab entities [ lego ] [ set ] = while newline print ( lego [ set ] ) newline"
"jacket be three . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = three newline print ( jacket [ be ] ) newline"
"man dress male . male dress ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ dress ] = man newline print ( male [ dress ] ) newline"
"blazer sit while . blazer sit ?","if entities . find ( blazer ) ! = None : newline newtab entities [ blazer ] [ sit ] = while newline print ( blazer [ sit ] ) newline"
"girl write white . white write ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ write ] = girl newline print ( white [ write ] ) newline"
"men be sleeping . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = sleeping newline print ( men [ be ] ) newline"
"biker ride stationary . stationary ride ?","if entities . find ( biker ) ! = None : newline newtab entities [ biker ] [ ride ] = biker newline print ( stationary [ ride ] ) newline"
"green bathe several . several bathe ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ bathe ] = green newline print ( several [ bathe ] ) newline"
"air balloon animal . air balloon ?","if entities . find ( air ) ! = None : newline newtab entities [ air ] [ balloon ] = animal newline print ( air [ balloon ] ) newline"
"people be available . available be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( available [ be ] ) newline"
"woman be featured . featured be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( featured [ be ] ) newline"
"boy be asleep . asleep be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( asleep [ be ] ) newline"
"kilt be snow . kilt be ?","if entities . find ( kilt ) ! = None : newline newtab entities [ kilt ] [ be ] = snow newline print ( kilt [ be ] ) newline"
"suit be three . suit be ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ be ] = three newline print ( suit [ be ] ) newline"
"red ship out . out ship ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ ship ] = red newline print ( out [ ship ] ) newline"
"woman be open . open be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( open [ be ] ) newline"
"man carry basket . man carry ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ carry ] = basket newline print ( man [ carry ] ) newline"
"team be way . team be ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ be ] = way newline print ( team [ be ] ) newline"
"pedestrian be five . pedestrian be ?","if entities . find ( pedestrian ) ! = None : newline newtab entities [ pedestrian ] [ be ] = five newline print ( pedestrian [ be ] ) newline"
"person wear blue . blue wear ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ wear ] = person newline print ( blue [ wear ] ) newline"
"boy reach an . boy reach ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ reach ] = an newline print ( boy [ reach ] ) newline"
"cap get ready . ready get ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ get ] = cap newline print ( ready [ get ] ) newline"
"child take out . out take ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ take ] = child newline print ( out [ take ] ) newline"
"men carry an . men carry ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ carry ] = an newline print ( men [ carry ] ) newline"
"center leap while . center leap ?","if entities . find ( center ) ! = None : newline newtab entities [ center ] [ leap ] = while newline print ( center [ leap ] ) newline"
"bottle be snow . bottle be ?","if entities . find ( bottle ) ! = None : newline newtab entities [ bottle ] [ be ] = snow newline print ( bottle [ be ] ) newline"
"bag stand out . out stand ?","if entities . find ( bag ) ! = None : newline newtab entities [ bag ] [ stand ] = bag newline print ( out [ stand ] ) newline"
"rider take outdoor . outdoor take ?","if entities . find ( rider ) ! = None : newline newtab entities [ rider ] [ take ] = rider newline print ( outdoor [ take ] ) newline"
"man wear gray . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = gray newline print ( man [ wear ] ) newline"
"dog run while . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = while newline print ( dog [ run ] ) newline"
"four run next . next run ?","if entities . find ( four ) ! = None : newline newtab entities [ four ] [ run ] = four newline print ( next [ run ] ) newline"
"girl run fast . fast run ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ run ] = girl newline print ( fast [ run ] ) newline"
"while wear sunglasses . while wear ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ wear ] = sunglasses newline print ( while [ wear ] ) newline"
"men assist white . white assist ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ assist ] = men newline print ( white [ assist ] ) newline"
"couple walk alone . alone walk ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ walk ] = couple newline print ( alone [ walk ] ) newline"
"spaniel be three . spaniel be ?","if entities . find ( spaniel ) ! = None : newline newtab entities [ spaniel ] [ be ] = three newline print ( spaniel [ be ] ) newline"
"man smile woman . man smile ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ smile ] = woman newline print ( man [ smile ] ) newline"
"man dress boy . man dress ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ dress ] = boy newline print ( man [ dress ] ) newline"
"woman be sleeping . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sleeping newline print ( woman [ be ] ) newline"
"boy sit while . boy sit ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ sit ] = while newline print ( boy [ sit ] ) newline"
"man be way . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = way newline print ( man [ be ] ) newline"
"barber shop late . late shop ?","if entities . find ( barber ) ! = None : newline newtab entities [ barber ] [ shop ] = barber newline print ( late [ shop ] ) newline"
"people relax next . next relax ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ relax ] = people newline print ( next [ relax ] ) newline"
"sweatshirt lean tower . sweatshirt lean ?","if entities . find ( sweatshirt ) ! = None : newline newtab entities [ sweatshirt ] [ lean ] = tower newline print ( sweatshirt [ lean ] ) newline"
"meal be out . out be ?","if entities . find ( meal ) ! = None : newline newtab entities [ meal ] [ be ] = meal newline print ( out [ be ] ) newline"
"camera rise petal . camera rise ?","if entities . find ( camera ) ! = None : newline newtab entities [ camera ] [ rise ] = petal newline print ( camera [ rise ] ) newline"
"it skip loader . it skip ?","if entities . find ( it ) ! = None : newline newtab entities [ it ] [ skip ] = loader newline print ( it [ skip ] ) newline"
"woman stand chest . woman stand ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ stand ] = chest newline print ( woman [ stand ] ) newline"
"truck be turing . truck be ?","if entities . find ( truck ) ! = None : newline newtab entities [ truck ] [ be ] = turing newline print ( truck [ be ] ) newline"
"while smile little . little smile ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ smile ] = while newline print ( little [ smile ] ) newline"
"dog have multiple . multiple have ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ have ] = dog newline print ( multiple [ have ] ) newline"
"chalk draw picture . chalk draw ?","if entities . find ( chalk ) ! = None : newline newtab entities [ chalk ] [ draw ] = picture newline print ( chalk [ draw ] ) newline"
"father look unhappy . unhappy look ?","if entities . find ( father ) ! = None : newline newtab entities [ father ] [ look ] = father newline print ( unhappy [ look ] ) newline"
"man be midair . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = midair newline print ( man [ be ] ) newline"
"gymnast be four . gymnast be ?","if entities . find ( gymnast ) ! = None : newline newtab entities [ gymnast ] [ be ] = four newline print ( gymnast [ be ] ) newline"
"people be three . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = three newline print ( people [ be ] ) newline"
"helmet be sleeping . helmet be ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ be ] = sleeping newline print ( helmet [ be ] ) newline"
"man be waist . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = waist newline print ( man [ be ] ) newline"
"boy wear orange . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = orange newline print ( boy [ wear ] ) newline"
"worker stand next . next stand ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ stand ] = worker newline print ( next [ stand ] ) newline"
"flag come tackler . flag come ?","if entities . find ( flag ) ! = None : newline newtab entities [ flag ] [ come ] = tackler newline print ( flag [ come ] ) newline"
"people sit while . people sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = while newline print ( people [ sit ] ) newline"
"straw hat next . next hat ?","if entities . find ( straw ) ! = None : newline newtab entities [ straw ] [ hat ] = straw newline print ( next [ hat ] ) newline"
"flag attach white . white attach ?","if entities . find ( flag ) ! = None : newline newtab entities [ flag ] [ attach ] = flag newline print ( white [ attach ] ) newline"
"man watch another . another watch ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ watch ] = man newline print ( another [ watch ] ) newline"
"girl walk while . girl walk ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ walk ] = while newline print ( girl [ walk ] ) newline"
"child be swinging . swinging be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( swinging [ be ] ) newline"
"boat turn backward . backward turn ?","if entities . find ( boat ) ! = None : newline newtab entities [ boat ] [ turn ] = boat newline print ( backward [ turn ] ) newline"
"guy get ready . ready get ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ get ] = guy newline print ( ready [ get ] ) newline"
"airplane fly disk . airplane fly ?","if entities . find ( airplane ) ! = None : newline newtab entities [ airplane ] [ fly ] = disk newline print ( airplane [ fly ] ) newline"
"man wear orange . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = orange newline print ( man [ wear ] ) newline"
"couple wear blue . blue wear ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ wear ] = couple newline print ( blue [ wear ] ) newline"
"sandal run man . sandal run ?","if entities . find ( sandal ) ! = None : newline newtab entities [ sandal ] [ run ] = man newline print ( sandal [ run ] ) newline"
"woman be hot . hot be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( hot [ be ] ) newline"
"girl look boy . girl look ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ look ] = boy newline print ( girl [ look ] ) newline"
"girl wear jean . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = jean newline print ( girl [ wear ] ) newline"
"track round white . white round ?","if entities . find ( track ) ! = None : newline newtab entities [ track ] [ round ] = track newline print ( white [ round ] ) newline"
"youth take some . some take ?","if entities . find ( youth ) ! = None : newline newtab entities [ youth ] [ take ] = youth newline print ( some [ take ] ) newline"
"tan coat white . white coat ?","if entities . find ( tan ) ! = None : newline newtab entities [ tan ] [ coat ] = tan newline print ( white [ coat ] ) newline"
"red robe white . white robe ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ robe ] = red newline print ( white [ robe ] ) newline"
"biker ride scooter . biker ride ?","if entities . find ( biker ) ! = None : newline newtab entities [ biker ] [ ride ] = scooter newline print ( biker [ ride ] ) newline"
"woman wear traditional . traditional wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( traditional [ wear ] ) newline"
"dog run side . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = side newline print ( dog [ run ] ) newline"
"while lean dog . while lean ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ lean ] = dog newline print ( while [ lean ] ) newline"
"woman stand sound . sound stand ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ stand ] = woman newline print ( sound [ stand ] ) newline"
"woman sell pepper . woman sell ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sell ] = pepper newline print ( woman [ sell ] ) newline"
"woman sweep debris . woman sweep ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sweep ] = debris newline print ( woman [ sweep ] ) newline"
"spray paint hard . hard paint ?","if entities . find ( spray ) ! = None : newline newtab entities [ spray ] [ paint ] = spray newline print ( hard [ paint ] ) newline"
"kid sit side . kid sit ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ sit ] = side newline print ( kid [ sit ] ) newline"
"kid be all . all be ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ be ] = kid newline print ( all [ be ] ) newline"
"brown vest wave . brown vest ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ vest ] = wave newline print ( brown [ vest ] ) newline"
"people be person . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = person newline print ( people [ be ] ) newline"
"girl be three . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = three newline print ( girl [ be ] ) newline"
"cap serve food . cap serve ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ serve ] = food newline print ( cap [ serve ] ) newline"
"boy run fast . fast run ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ run ] = boy newline print ( fast [ run ] ) newline"
"coaster hold camera . coaster hold ?","if entities . find ( coaster ) ! = None : newline newtab entities [ coaster ] [ hold ] = camera newline print ( coaster [ hold ] ) newline"
"while read next . next read ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ read ] = while newline print ( next [ read ] ) newline"
"green glass use . green glass ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ glass ] = use newline print ( green [ glass ] ) newline"
"fern leave early . early leave ?","if entities . find ( fern ) ! = None : newline newtab entities [ fern ] [ leave ] = fern newline print ( early [ leave ] ) newline"
"tattoo be underway . underway be ?","if entities . find ( tattoo ) ! = None : newline newtab entities [ tattoo ] [ be ] = tattoo newline print ( underway [ be ] ) newline"
"woman be staring . staring be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( staring [ be ] ) newline"
"girl climb out . out climb ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ climb ] = girl newline print ( out [ climb ] ) newline"
"snow cover another . another cover ?","if entities . find ( snow ) ! = None : newline newtab entities [ snow ] [ cover ] = snow newline print ( another [ cover ] ) newline"
"runner be asleep . asleep be ?","if entities . find ( runner ) ! = None : newline newtab entities [ runner ] [ be ] = runner newline print ( asleep [ be ] ) newline"
"girl be pilot . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = pilot newline print ( girl [ be ] ) newline"
"man be teaching . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = teaching newline print ( man [ be ] ) newline"
"dog be staring . staring be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( staring [ be ] ) newline"
"people walk while . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = while newline print ( people [ walk ] ) newline"
"lane try out . out try ?","if entities . find ( lane ) ! = None : newline newtab entities [ lane ] [ try ] = lane newline print ( out [ try ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"woman compete cyclist . woman compete ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ compete ] = cyclist newline print ( woman [ compete ] ) newline"
"livestock fence white . white fence ?","if entities . find ( livestock ) ! = None : newline newtab entities [ livestock ] [ fence ] = livestock newline print ( white [ fence ] ) newline"
"green grass field . green grass ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ grass ] = field newline print ( green [ grass ] ) newline"
"dog run next . next run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = dog newline print ( next [ run ] ) newline"
"table work out . out work ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ work ] = table newline print ( out [ work ] ) newline"
"woman jump obstacle . woman jump ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ jump ] = obstacle newline print ( woman [ jump ] ) newline"
"child dress all . all dress ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ dress ] = child newline print ( all [ dress ] ) newline"
"dog play percussion . dog play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = percussion newline print ( dog [ play ] ) newline"
"yard chase water . yard chase ?","if entities . find ( yard ) ! = None : newline newtab entities [ yard ] [ chase ] = water newline print ( yard [ chase ] ) newline"
"top be metalworking . top be ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ be ] = metalworking newline print ( top [ be ] ) newline"
"child be neck . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = neck newline print ( child [ be ] ) newline"
"woman be sleeping . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sleeping newline print ( woman [ be ] ) newline"
"man ride horse . man ride ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ ride ] = horse newline print ( man [ ride ] ) newline"
"man be parasailing . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = parasailing newline print ( man [ be ] ) newline"
"hair have an . hair have ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ have ] = an newline print ( hair [ have ] ) newline"
"woman discuss some . some discuss ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ discuss ] = woman newline print ( some [ discuss ] ) newline"
"person be sleeping . person be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = sleeping newline print ( person [ be ] ) newline"
"wall make some . some make ?","if entities . find ( wall ) ! = None : newline newtab entities [ wall ] [ make ] = wall newline print ( some [ make ] ) newline"
"man be hundred . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = hundred newline print ( man [ be ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"it snow white . white snow ?","if entities . find ( it ) ! = None : newline newtab entities [ it ] [ snow ] = it newline print ( white [ snow ] ) newline"
"gear be sleeping . gear be ?","if entities . find ( gear ) ! = None : newline newtab entities [ gear ] [ be ] = sleeping newline print ( gear [ be ] ) newline"
"diver be sorting . diver be ?","if entities . find ( diver ) ! = None : newline newtab entities [ diver ] [ be ] = sorting newline print ( diver [ be ] ) newline"
"purse wait next . next wait ?","if entities . find ( purse ) ! = None : newline newtab entities [ purse ] [ wait ] = purse newline print ( next [ wait ] ) newline"
"man lean out . out lean ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ lean ] = man newline print ( out [ lean ] ) newline"
"suit suspend high . high suspend ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ suspend ] = suit newline print ( high [ suspend ] ) newline"
"girl watch another . another watch ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ watch ] = girl newline print ( another [ watch ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"driver pause while . driver pause ?","if entities . find ( driver ) ! = None : newline newtab entities [ driver ] [ pause ] = while newline print ( driver [ pause ] ) newline"
"print shirt wave . print shirt ?","if entities . find ( print ) ! = None : newline newtab entities [ print ] [ shirt ] = wave newline print ( print [ shirt ] ) newline"
"worker be three . worker be ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ be ] = three newline print ( worker [ be ] ) newline"
"woman sit while . woman sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = while newline print ( woman [ sit ] ) newline"
"plaid shirt staring . staring shirt ?","if entities . find ( plaid ) ! = None : newline newtab entities [ plaid ] [ shirt ] = plaid newline print ( staring [ shirt ] ) newline"
"dog be sleeping . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = sleeping newline print ( dog [ be ] ) newline"
"men be warming . warming be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( warming [ be ] ) newline"
"girl sit next . next sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = girl newline print ( next [ sit ] ) newline"
"man be all . all be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( all [ be ] ) newline"
"arm raise another . another raise ?","if entities . find ( arm ) ! = None : newline newtab entities [ arm ] [ raise ] = arm newline print ( another [ raise ] ) newline"
"lady dress man . lady dress ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ dress ] = man newline print ( lady [ dress ] ) newline"
"dog stand next . next stand ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ stand ] = dog newline print ( next [ stand ] ) newline"
"people cross some . some cross ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ cross ] = people newline print ( some [ cross ] ) newline"
"people be painted . painted be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( painted [ be ] ) newline"
"microphone stand or . microphone stand ?","if entities . find ( microphone ) ! = None : newline newtab entities [ microphone ] [ stand ] = or newline print ( microphone [ stand ] ) newline"
"boy be five . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = five newline print ( boy [ be ] ) newline"
"jacket look out . out look ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ look ] = jacket newline print ( out [ look ] ) newline"
"man hold two . man hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = two newline print ( man [ hold ] ) newline"
"people wear red . people wear ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ wear ] = red newline print ( people [ wear ] ) newline"
"brown hang upside . brown hang ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ hang ] = upside newline print ( brown [ hang ] ) newline"
"woman be whispering . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = whispering newline print ( woman [ be ] ) newline"
"woman wear yellow . yellow wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( yellow [ wear ] ) newline"
"cheerleader cheer while . cheerleader cheer ?","if entities . find ( cheerleader ) ! = None : newline newtab entities [ cheerleader ] [ cheer ] = while newline print ( cheerleader [ cheer ] ) newline"
"boot stand while . boot stand ?","if entities . find ( boot ) ! = None : newline newtab entities [ boot ] [ stand ] = while newline print ( boot [ stand ] ) newline"
"beard be referee . beard be ?","if entities . find ( beard ) ! = None : newline newtab entities [ beard ] [ be ] = referee newline print ( beard [ be ] ) newline"
"girl smile baby . girl smile ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ smile ] = baby newline print ( girl [ smile ] ) newline"
"lady hold sandal . lady hold ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ hold ] = sandal newline print ( lady [ hold ] ) newline"
"man take out . out take ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ take ] = man newline print ( out [ take ] ) newline"
"girl be five . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = five newline print ( girl [ be ] ) newline"
"girl jump house . girl jump ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ jump ] = house newline print ( girl [ jump ] ) newline"
"cap be laughing . laughing be ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ be ] = cap newline print ( laughing [ be ] ) newline"
"man be several . several be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( several [ be ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"girl stand next . next stand ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ stand ] = girl newline print ( next [ stand ] ) newline"
"woman be parasailing . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = parasailing newline print ( woman [ be ] ) newline"
"child play acoustic . acoustic play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = child newline print ( acoustic [ play ] ) newline"
"woman look lovely . lovely look ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ look ] = woman newline print ( lovely [ look ] ) newline"
"meat cook some . some cook ?","if entities . find ( meat ) ! = None : newline newtab entities [ meat ] [ cook ] = meat newline print ( some [ cook ] ) newline"
"metal shape light . light shape ?","if entities . find ( metal ) ! = None : newline newtab entities [ metal ] [ shape ] = metal newline print ( light [ shape ] ) newline"
"child be horseback . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = horseback newline print ( child [ be ] ) newline"
"deere farm field . deere farm ?","if entities . find ( deere ) ! = None : newline newtab entities [ deere ] [ farm ] = field newline print ( deere [ farm ] ) newline"
"while strum white . white strum ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ strum ] = while newline print ( white [ strum ] ) newline"
"woman rest while . woman rest ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ rest ] = while newline print ( woman [ rest ] ) newline"
"grandson play professional . professional play ?","if entities . find ( grandson ) ! = None : newline newtab entities [ grandson ] [ play ] = grandson newline print ( professional [ play ] ) newline"
"cliff overlook scenic . scenic overlook ?","if entities . find ( cliff ) ! = None : newline newtab entities [ cliff ] [ overlook ] = cliff newline print ( scenic [ overlook ] ) newline"
"men be out . out be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( out [ be ] ) newline"
"man attempt two . man attempt ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ attempt ] = two newline print ( man [ attempt ] ) newline"
"mother sit next . next sit ?","if entities . find ( mother ) ! = None : newline newtab entities [ mother ] [ sit ] = mother newline print ( next [ sit ] ) newline"
"hair pull wagon . hair pull ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ pull ] = wagon newline print ( hair [ pull ] ) newline"
"girl play indoor . indoor play ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ play ] = girl newline print ( indoor [ play ] ) newline"
"man approach wave . man approach ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ approach ] = wave newline print ( man [ approach ] ) newline"
"jersey look reluctant . reluctant look ?","if entities . find ( jersey ) ! = None : newline newtab entities [ jersey ] [ look ] = jersey newline print ( reluctant [ look ] ) newline"
"person walk or . person walk ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ walk ] = or newline print ( person [ walk ] ) newline"
"man wear red . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = red newline print ( man [ wear ] ) newline"
"man hold two . man hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = two newline print ( man [ hold ] ) newline"
"boy bounce carnival . boy bounce ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ bounce ] = carnival newline print ( boy [ bounce ] ) newline"
"people seem two . people seem ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ seem ] = two newline print ( people [ seem ] ) newline"
"man be opening . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = opening newline print ( man [ be ] ) newline"
"office be mouth . office be ?","if entities . find ( office ) ! = None : newline newtab entities [ office ] [ be ] = mouth newline print ( office [ be ] ) newline"
"suit pull two . suit pull ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ pull ] = two newline print ( suit [ pull ] ) newline"
"girl wear life . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = life newline print ( girl [ wear ] ) newline"
"red tie dyed . dyed tie ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ tie ] = red newline print ( dyed [ tie ] ) newline"
"bowler be asleep . asleep be ?","if entities . find ( bowler ) ! = None : newline newtab entities [ bowler ] [ be ] = bowler newline print ( asleep [ be ] ) newline"
"favorite bicycle next . next bicycle ?","if entities . find ( favorite ) ! = None : newline newtab entities [ favorite ] [ bicycle ] = favorite newline print ( next [ bicycle ] ) newline"
"top be an . top be ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ be ] = an newline print ( top [ be ] ) newline"
"man paddle out . out paddle ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ paddle ] = man newline print ( out [ paddle ] ) newline"
"people ride camel . people ride ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ ride ] = camel newline print ( people [ ride ] ) newline"
"person carry bag . person carry ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ carry ] = bag newline print ( person [ carry ] ) newline"
"baseball bat high . high bat ?","if entities . find ( baseball ) ! = None : newline newtab entities [ baseball ] [ bat ] = baseball newline print ( high [ bat ] ) newline"
"woman be some . some be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( some [ be ] ) newline"
"two be two . two be ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ be ] = two newline print ( two [ be ] ) newline"
"couple dance next . next dance ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ dance ] = couple newline print ( next [ dance ] ) newline"
"outfit be disinterested . disinterested be ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ be ] = outfit newline print ( disinterested [ be ] ) newline"
"bench watch some . some watch ?","if entities . find ( bench ) ! = None : newline newtab entities [ bench ] [ watch ] = bench newline print ( some [ watch ] ) newline"
"man be two . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = two newline print ( man [ be ] ) newline"
"men wear all . all wear ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ wear ] = men newline print ( all [ wear ] ) newline"
"suit hold red . suit hold ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ hold ] = red newline print ( suit [ hold ] ) newline"
"kid be yawning . yawning be ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ be ] = kid newline print ( yawning [ be ] ) newline"
"red shirt ready . ready shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( ready [ shirt ] ) newline"
"toddler be high . high be ?","if entities . find ( toddler ) ! = None : newline newtab entities [ toddler ] [ be ] = toddler newline print ( high [ be ] ) newline"
"mic play instrument . mic play ?","if entities . find ( mic ) ! = None : newline newtab entities [ mic ] [ play ] = instrument newline print ( mic [ play ] ) newline"
"youth march white . white march ?","if entities . find ( youth ) ! = None : newline newtab entities [ youth ] [ march ] = youth newline print ( white [ march ] ) newline"
"climber be laughing . laughing be ?","if entities . find ( climber ) ! = None : newline newtab entities [ climber ] [ be ] = climber newline print ( laughing [ be ] ) newline"
"rider jump out . out jump ?","if entities . find ( rider ) ! = None : newline newtab entities [ rider ] [ jump ] = rider newline print ( out [ jump ] ) newline"
"protester be sleeping . protester be ?","if entities . find ( protester ) ! = None : newline newtab entities [ protester ] [ be ] = sleeping newline print ( protester [ be ] ) newline"
"kid play some . some play ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ play ] = kid newline print ( some [ play ] ) newline"
"people watch another . another watch ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ watch ] = people newline print ( another [ watch ] ) newline"
"lady wear tuxedo . lady wear ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ wear ] = tuxedo newline print ( lady [ wear ] ) newline"
"red dress man . red dress ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ dress ] = man newline print ( red [ dress ] ) newline"
"ball be sleeping . ball be ?","if entities . find ( ball ) ! = None : newline newtab entities [ ball ] [ be ] = sleeping newline print ( ball [ be ] ) newline"
"jumper be sleeping . jumper be ?","if entities . find ( jumper ) ! = None : newline newtab entities [ jumper ] [ be ] = sleeping newline print ( jumper [ be ] ) newline"
"flower cart full . full cart ?","if entities . find ( flower ) ! = None : newline newtab entities [ flower ] [ cart ] = flower newline print ( full [ cart ] ) newline"
"while try two . while try ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ try ] = two newline print ( while [ try ] ) newline"
"woman hold yellow . yellow hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = woman newline print ( yellow [ hold ] ) newline"
"family hold cardboard . cardboard hold ?","if entities . find ( family ) ! = None : newline newtab entities [ family ] [ hold ] = family newline print ( cardboard [ hold ] ) newline"
"dog soak wet . wet soak ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ soak ] = dog newline print ( wet [ soak ] ) newline"
"chair look out . out look ?","if entities . find ( chair ) ! = None : newline newtab entities [ chair ] [ look ] = chair newline print ( out [ look ] ) newline"
"tattoo be spray . tattoo be ?","if entities . find ( tattoo ) ! = None : newline newtab entities [ tattoo ] [ be ] = spray newline print ( tattoo [ be ] ) newline"
"safety vest while . safety vest ?","if entities . find ( safety ) ! = None : newline newtab entities [ safety ] [ vest ] = while newline print ( safety [ vest ] ) newline"
"tent serve food . tent serve ?","if entities . find ( tent ) ! = None : newline newtab entities [ tent ] [ serve ] = food newline print ( tent [ serve ] ) newline"
"jacket play basketball . jacket play ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ play ] = basketball newline print ( jacket [ play ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"child wear red . child wear ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wear ] = red newline print ( child [ wear ] ) newline"
"athlete make strange . strange make ?","if entities . find ( athlete ) ! = None : newline newtab entities [ athlete ] [ make ] = athlete newline print ( strange [ make ] ) newline"
"head cover wall . head cover ?","if entities . find ( head ) ! = None : newline newtab entities [ head ] [ cover ] = wall newline print ( head [ cover ] ) newline"
"brown shirt half . half shirt ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ shirt ] = brown newline print ( half [ shirt ] ) newline"
"person wear turban . person wear ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ wear ] = turban newline print ( person [ wear ] ) newline"
"woman be full . full be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( full [ be ] ) newline"
"girl pose an . girl pose ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ pose ] = an newline print ( girl [ pose ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"it jump out . out jump ?","if entities . find ( it ) ! = None : newline newtab entities [ it ] [ jump ] = it newline print ( out [ jump ] ) newline"
"people walk arm . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = arm newline print ( people [ walk ] ) newline"
"group be staring . staring be ?","if entities . find ( group ) ! = None : newline newtab entities [ group ] [ be ] = group newline print ( staring [ be ] ) newline"
"people be sleeping . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = sleeping newline print ( people [ be ] ) newline"
"vendor sell cotton . vendor sell ?","if entities . find ( vendor ) ! = None : newline newtab entities [ vendor ] [ sell ] = cotton newline print ( vendor [ sell ] ) newline"
"people stand next . next stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( next [ stand ] ) newline"
"bikini be full . full be ?","if entities . find ( bikini ) ! = None : newline newtab entities [ bikini ] [ be ] = bikini newline print ( full [ be ] ) newline"
"basket stand guard . basket stand ?","if entities . find ( basket ) ! = None : newline newtab entities [ basket ] [ stand ] = guard newline print ( basket [ stand ] ) newline"
"officer stand while . officer stand ?","if entities . find ( officer ) ! = None : newline newtab entities [ officer ] [ stand ] = while newline print ( officer [ stand ] ) newline"
"men sit next . next sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = men newline print ( next [ sit ] ) newline"
"man stare two . man stare ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stare ] = two newline print ( man [ stare ] ) newline"
"basketball block wall . basketball block ?","if entities . find ( basketball ) ! = None : newline newtab entities [ basketball ] [ block ] = wall newline print ( basketball [ block ] ) newline"
"man wear different . different wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( different [ wear ] ) newline"
"girl dress little . little dress ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ dress ] = girl newline print ( little [ dress ] ) newline"
"man wear yellow . yellow wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( yellow [ wear ] ) newline"
"spectator watch two . spectator watch ?","if entities . find ( spectator ) ! = None : newline newtab entities [ spectator ] [ watch ] = two newline print ( spectator [ watch ] ) newline"
"swimsuit hold flag . swimsuit hold ?","if entities . find ( swimsuit ) ! = None : newline newtab entities [ swimsuit ] [ hold ] = flag newline print ( swimsuit [ hold ] ) newline"
"child walk or . child walk ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ walk ] = or newline print ( child [ walk ] ) newline"
"cellphone hold two . cellphone hold ?","if entities . find ( cellphone ) ! = None : newline newtab entities [ cellphone ] [ hold ] = two newline print ( cellphone [ hold ] ) newline"
"woman be an . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = an newline print ( woman [ be ] ) newline"
"costume stand man . costume stand ?","if entities . find ( costume ) ! = None : newline newtab entities [ costume ] [ stand ] = man newline print ( costume [ stand ] ) newline"
"man carry flower . man carry ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ carry ] = flower newline print ( man [ carry ] ) newline"
"dog be all . all be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( all [ be ] ) newline"
"top be swinging . swinging be ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ be ] = top newline print ( swinging [ be ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"apron cook counter . apron cook ?","if entities . find ( apron ) ! = None : newline newtab entities [ apron ] [ cook ] = counter newline print ( apron [ cook ] ) newline"
"helmet stand or . helmet stand ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ stand ] = or newline print ( helmet [ stand ] ) newline"
"equipment be screaming . screaming be ?","if entities . find ( equipment ) ! = None : newline newtab entities [ equipment ] [ be ] = equipment newline print ( screaming [ be ] ) newline"
"american garb white . white garb ?","if entities . find ( american ) ! = None : newline newtab entities [ american ] [ garb ] = american newline print ( white [ garb ] ) newline"
"umbrella be laughing . laughing be ?","if entities . find ( umbrella ) ! = None : newline newtab entities [ umbrella ] [ be ] = umbrella newline print ( laughing [ be ] ) newline"
"player attempt two . player attempt ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ attempt ] = two newline print ( player [ attempt ] ) newline"
"while smile girl . while smile ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ smile ] = girl newline print ( while [ smile ] ) newline"
"player celebrate two . player celebrate ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ celebrate ] = two newline print ( player [ celebrate ] ) newline"
"worker wear an . worker wear ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ wear ] = an newline print ( worker [ wear ] ) newline"
"child hold two . child hold ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ hold ] = two newline print ( child [ hold ] ) newline"
"wakeboard attempt white . white attempt ?","if entities . find ( wakeboard ) ! = None : newline newtab entities [ wakeboard ] [ attempt ] = wakeboard newline print ( white [ attempt ] ) newline"
"boy hold both . both hold ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ hold ] = boy newline print ( both [ hold ] ) newline"
"soccer wear clean . clean wear ?","if entities . find ( soccer ) ! = None : newline newtab entities [ soccer ] [ wear ] = soccer newline print ( clean [ wear ] ) newline"
"an attempt white . white attempt ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ attempt ] = an newline print ( white [ attempt ] ) newline"
"child wear black . black wear ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wear ] = child newline print ( black [ wear ] ) newline"
"man be an . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = an newline print ( man [ be ] ) newline"
"jacket be people . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = people newline print ( jacket [ be ] ) newline"
"woman be whispering . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = whispering newline print ( woman [ be ] ) newline"
"man hold white . white hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = man newline print ( white [ hold ] ) newline"
"game be an . game be ?","if entities . find ( game ) ! = None : newline newtab entities [ game ] [ be ] = an newline print ( game [ be ] ) newline"
"dog be writer . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = writer newline print ( dog [ be ] ) newline"
"team watch air . team watch ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ watch ] = air newline print ( team [ watch ] ) newline"
"man be unhappy . unhappy be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( unhappy [ be ] ) newline"
"bike fly out . out fly ?","if entities . find ( bike ) ! = None : newline newtab entities [ bike ] [ fly ] = bike newline print ( out [ fly ] ) newline"
"bag walk home . bag walk ?","if entities . find ( bag ) ! = None : newline newtab entities [ bag ] [ walk ] = home newline print ( bag [ walk ] ) newline"
"gray shirt scoop . gray shirt ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ shirt ] = scoop newline print ( gray [ shirt ] ) newline"
"woman walk man . woman walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = man newline print ( woman [ walk ] ) newline"
"student sit dog . student sit ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ sit ] = dog newline print ( student [ sit ] ) newline"
"people be swinging . swinging be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( swinging [ be ] ) newline"
"dirt hike white . white hike ?","if entities . find ( dirt ) ! = None : newline newtab entities [ dirt ] [ hike ] = dirt newline print ( white [ hike ] ) newline"
"coffee shop late . late shop ?","if entities . find ( coffee ) ! = None : newline newtab entities [ coffee ] [ shop ] = coffee newline print ( late [ shop ] ) newline"
"woman walk while . woman walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = while newline print ( woman [ walk ] ) newline"
"who be horseback . who be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = horseback newline print ( who [ be ] ) newline"
"couple wear black . black wear ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ wear ] = couple newline print ( black [ wear ] ) newline"
"gray be food . gray be ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ be ] = food newline print ( gray [ be ] ) newline"
"woman fix gear . woman fix ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ fix ] = gear newline print ( woman [ fix ] ) newline"
"stone step stone . stone step ?","if entities . find ( stone ) ! = None : newline newtab entities [ stone ] [ step ] = stone newline print ( stone [ step ] ) newline"
"bra be rock . bra be ?","if entities . find ( bra ) ! = None : newline newtab entities [ bra ] [ be ] = rock newline print ( bra [ be ] ) newline"
"player try out . out try ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ try ] = player newline print ( out [ try ] ) newline"
"girl be six . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = six newline print ( girl [ be ] ) newline"
"wife head little . little head ?","if entities . find ( wife ) ! = None : newline newtab entities [ wife ] [ head ] = wife newline print ( little [ head ] ) newline"
"woman look redhead . woman look ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ look ] = redhead newline print ( woman [ look ] ) newline"
"gentleman be staring . staring be ?","if entities . find ( gentleman ) ! = None : newline newtab entities [ gentleman ] [ be ] = gentleman newline print ( staring [ be ] ) newline"
"boy get control . boy get ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ get ] = control newline print ( boy [ get ] ) newline"
"people be distance . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = distance newline print ( people [ be ] ) newline"
"orange shirt swinging . swinging shirt ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ shirt ] = orange newline print ( swinging [ shirt ] ) newline"
"boy play soccer . boy play ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ play ] = soccer newline print ( boy [ play ] ) newline"
"dog be sleeping . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = sleeping newline print ( dog [ be ] ) newline"
"green shirt half . half shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = green newline print ( half [ shirt ] ) newline"
"child sit next . next sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = child newline print ( next [ sit ] ) newline"
"it run next . next run ?","if entities . find ( it ) ! = None : newline newtab entities [ it ] [ run ] = it newline print ( next [ run ] ) newline"
"dad fix blond . dad fix ?","if entities . find ( dad ) ! = None : newline newtab entities [ dad ] [ fix ] = blond newline print ( dad [ fix ] ) newline"
"snow goggle head . snow goggle ?","if entities . find ( snow ) ! = None : newline newtab entities [ snow ] [ goggle ] = head newline print ( snow [ goggle ] ) newline"
"man be four . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = four newline print ( man [ be ] ) newline"
"he be visible . visible be ?","if entities . find ( he ) ! = None : newline newtab entities [ he ] [ be ] = he newline print ( visible [ be ] ) newline"
"man try out . out try ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ try ] = man newline print ( out [ try ] ) newline"
"man wear headphone . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = headphone newline print ( man [ wear ] ) newline"
"flautist play instrument . flautist play ?","if entities . find ( flautist ) ! = None : newline newtab entities [ flautist ] [ play ] = instrument newline print ( flautist [ play ] ) newline"
"woman be hula . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = hula newline print ( woman [ be ] ) newline"
"family watch another . another watch ?","if entities . find ( family ) ! = None : newline newtab entities [ family ] [ watch ] = family newline print ( another [ watch ] ) newline"
"ice block another . another block ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ block ] = ice newline print ( another [ block ] ) newline"
"mouth sit while . mouth sit ?","if entities . find ( mouth ) ! = None : newline newtab entities [ mouth ] [ sit ] = while newline print ( mouth [ sit ] ) newline"
"man photograph while . man photograph ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ photograph ] = while newline print ( man [ photograph ] ) newline"
"woman be airborne . airborne be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( airborne [ be ] ) newline"
"dog swim underwater . underwater swim ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ swim ] = dog newline print ( underwater [ swim ] ) newline"
"man cast long . long cast ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ cast ] = man newline print ( long [ cast ] ) newline"
"vehicle make out . out make ?","if entities . find ( vehicle ) ! = None : newline newtab entities [ vehicle ] [ make ] = vehicle newline print ( out [ make ] ) newline"
"spanish ruin white . white ruin ?","if entities . find ( spanish ) ! = None : newline newtab entities [ spanish ] [ ruin ] = spanish newline print ( white [ ruin ] ) newline"
"three police officer . three police ?","if entities . find ( three ) ! = None : newline newtab entities [ three ] [ police ] = officer newline print ( three [ police ] ) newline"
"dog play soccer . dog play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = soccer newline print ( dog [ play ] ) newline"
"men wear red . men wear ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ wear ] = red newline print ( men [ wear ] ) newline"
"two police station . two police ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ police ] = station newline print ( two [ police ] ) newline"
"man be sorting . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sorting newline print ( man [ be ] ) newline"
"coastguard be out . out be ?","if entities . find ( coastguard ) ! = None : newline newtab entities [ coastguard ] [ be ] = coastguard newline print ( out [ be ] ) newline"
"can be three . can be ?","if entities . find ( can ) ! = None : newline newtab entities [ can ] [ be ] = three newline print ( can [ be ] ) newline"
"jacket lay dog . jacket lay ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ lay ] = dog newline print ( jacket [ lay ] ) newline"
"beard repair bronze . bronze repair ?","if entities . find ( beard ) ! = None : newline newtab entities [ beard ] [ repair ] = beard newline print ( bronze [ repair ] ) newline"
"hair chisel an . hair chisel ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ chisel ] = an newline print ( hair [ chisel ] ) newline"
"red play some . some play ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ play ] = red newline print ( some [ play ] ) newline"
"woman look redhead . woman look ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ look ] = redhead newline print ( woman [ look ] ) newline"
"room wear headphone . room wear ?","if entities . find ( room ) ! = None : newline newtab entities [ room ] [ wear ] = headphone newline print ( room [ wear ] ) newline"
"boy make out . out make ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ make ] = boy newline print ( out [ make ] ) newline"
"officer flip another . another flip ?","if entities . find ( officer ) ! = None : newline newtab entities [ officer ] [ flip ] = officer newline print ( another [ flip ] ) newline"
"men sit guy . men sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = guy newline print ( men [ sit ] ) newline"
"player try out . out try ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ try ] = player newline print ( out [ try ] ) newline"
"man ride horse . man ride ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ ride ] = horse newline print ( man [ ride ] ) newline"
"cap pick vegetable . cap pick ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ pick ] = vegetable newline print ( cap [ pick ] ) newline"
"boy be shielding . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = shielding newline print ( boy [ be ] ) newline"
"people pose next . next pose ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ pose ] = people newline print ( next [ pose ] ) newline"
"woman be airborne . airborne be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( airborne [ be ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"area be sumo . area be ?","if entities . find ( area ) ! = None : newline newtab entities [ area ] [ be ] = sumo newline print ( area [ be ] ) newline"
"dancer perform yoga . dancer perform ?","if entities . find ( dancer ) ! = None : newline newtab entities [ dancer ] [ perform ] = yoga newline print ( dancer [ perform ] ) newline"
"man wear skate . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = skate newline print ( man [ wear ] ) newline"
"girl wear orange . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = orange newline print ( girl [ wear ] ) newline"
"people stand side . people stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = side newline print ( people [ stand ] ) newline"
"people wave small . small wave ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ wave ] = people newline print ( small [ wave ] ) newline"
"bike leap high . high leap ?","if entities . find ( bike ) ! = None : newline newtab entities [ bike ] [ leap ] = bike newline print ( high [ leap ] ) newline"
"racer celebrate some . some celebrate ?","if entities . find ( racer ) ! = None : newline newtab entities [ racer ] [ celebrate ] = racer newline print ( some [ celebrate ] ) newline"
"jacket walk bike . jacket walk ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ walk ] = bike newline print ( jacket [ walk ] ) newline"
"guy take outdoor . outdoor take ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ take ] = guy newline print ( outdoor [ take ] ) newline"
"people look men . people look ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ look ] = men newline print ( people [ look ] ) newline"
"people walk while . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = while newline print ( people [ walk ] ) newline"
"people be two . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = two newline print ( people [ be ] ) newline"
"jacket wear black . black wear ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ wear ] = jacket newline print ( black [ wear ] ) newline"
"life size brown . life size ?","if entities . find ( life ) ! = None : newline newtab entities [ life ] [ size ] = brown newline print ( life [ size ] ) newline"
"german shepherd dog . german shepherd ?","if entities . find ( german ) ! = None : newline newtab entities [ german ] [ shepherd ] = dog newline print ( german [ shepherd ] ) newline"
"child walk out . out walk ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ walk ] = child newline print ( out [ walk ] ) newline"
"woman stand while . woman stand ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ stand ] = while newline print ( woman [ stand ] ) newline"
"wheelchair sit while . wheelchair sit ?","if entities . find ( wheelchair ) ! = None : newline newtab entities [ wheelchair ] [ sit ] = while newline print ( wheelchair [ sit ] ) newline"
"pole be neck . pole be ?","if entities . find ( pole ) ! = None : newline newtab entities [ pole ] [ be ] = neck newline print ( pole [ be ] ) newline"
"image project while . image project ?","if entities . find ( image ) ! = None : newline newtab entities [ image ] [ project ] = while newline print ( image [ project ] ) newline"
"dog jump midair . dog jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = midair newline print ( dog [ jump ] ) newline"
"people walk hand . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = hand newline print ( people [ walk ] ) newline"
"sunglasses sit or . sunglasses sit ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ sit ] = or newline print ( sunglasses [ sit ] ) newline"
"man be two . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = two newline print ( man [ be ] ) newline"
"quarterback be many . many be ?","if entities . find ( quarterback ) ! = None : newline newtab entities [ quarterback ] [ be ] = quarterback newline print ( many [ be ] ) newline"
"cellphone be an . cellphone be ?","if entities . find ( cellphone ) ! = None : newline newtab entities [ cellphone ] [ be ] = an newline print ( cellphone [ be ] ) newline"
"people sit court . people sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = court newline print ( people [ sit ] ) newline"
"woman work glove . woman work ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ work ] = glove newline print ( woman [ work ] ) newline"
"man take picture . man take ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ take ] = picture newline print ( man [ take ] ) newline"
"girl pose next . next pose ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ pose ] = girl newline print ( next [ pose ] ) newline"
"dancer do different . different do ?","if entities . find ( dancer ) ! = None : newline newtab entities [ dancer ] [ do ] = dancer newline print ( different [ do ] ) newline"
"orange color uniform . uniform color ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ color ] = orange newline print ( uniform [ color ] ) newline"
"member play out . out play ?","if entities . find ( member ) ! = None : newline newtab entities [ member ] [ play ] = member newline print ( out [ play ] ) newline"
"dog watch people . dog watch ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ watch ] = people newline print ( dog [ watch ] ) newline"
"while wear sunglasses . while wear ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ wear ] = sunglasses newline print ( while [ wear ] ) newline"
"child enjoy it . child enjoy ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ enjoy ] = it newline print ( child [ enjoy ] ) newline"
"bus stop sign . bus stop ?","if entities . find ( bus ) ! = None : newline newtab entities [ bus ] [ stop ] = sign newline print ( bus [ stop ] ) newline"
"boy have multiple . multiple have ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ have ] = boy newline print ( multiple [ have ] ) newline"
"people eat out . out eat ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ eat ] = people newline print ( out [ eat ] ) newline"
"child be next . next be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( next [ be ] ) newline"
"boy be way . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = way newline print ( boy [ be ] ) newline"
"scooter be sleeping . scooter be ?","if entities . find ( scooter ) ! = None : newline newtab entities [ scooter ] [ be ] = sleeping newline print ( scooter [ be ] ) newline"
"three dress all . all dress ?","if entities . find ( three ) ! = None : newline newtab entities [ three ] [ dress ] = three newline print ( all [ dress ] ) newline"
"green grass field . green grass ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ grass ] = field newline print ( green [ grass ] ) newline"
"rock climb large . large climb ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ climb ] = rock newline print ( large [ climb ] ) newline"
"bicyclist wear yellow . yellow wear ?","if entities . find ( bicyclist ) ! = None : newline newtab entities [ bicyclist ] [ wear ] = bicyclist newline print ( yellow [ wear ] ) newline"
"brown coat while . brown coat ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ coat ] = while newline print ( brown [ coat ] ) newline"
"person be fun . person be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = fun newline print ( person [ be ] ) newline"
"people be two . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = two newline print ( people [ be ] ) newline"
"sleeve be sleeping . sleeve be ?","if entities . find ( sleeve ) ! = None : newline newtab entities [ sleeve ] [ be ] = sleeping newline print ( sleeve [ be ] ) newline"
"dog jump tent . dog jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = tent newline print ( dog [ jump ] ) newline"
"orange drill team . orange drill ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ drill ] = team newline print ( orange [ drill ] ) newline"
"people play hockey . people play ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ play ] = hockey newline print ( people [ play ] ) newline"
"girl be colorful . colorful be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( colorful [ be ] ) newline"
"boy hold cardboard . cardboard hold ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ hold ] = boy newline print ( cardboard [ hold ] ) newline"
"policeman be many . many be ?","if entities . find ( policeman ) ! = None : newline newtab entities [ policeman ] [ be ] = policeman newline print ( many [ be ] ) newline"
"classroom try some . some try ?","if entities . find ( classroom ) ! = None : newline newtab entities [ classroom ] [ try ] = classroom newline print ( some [ try ] ) newline"
"girl be open . open be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( open [ be ] ) newline"
"soldier stand guard . soldier stand ?","if entities . find ( soldier ) ! = None : newline newtab entities [ soldier ] [ stand ] = guard newline print ( soldier [ stand ] ) newline"
"id decorate blue . blue decorate ?","if entities . find ( id ) ! = None : newline newtab entities [ id ] [ decorate ] = id newline print ( blue [ decorate ] ) newline"
"pool wrap female . female wrap ?","if entities . find ( pool ) ! = None : newline newtab entities [ pool ] [ wrap ] = pool newline print ( female [ wrap ] ) newline"
"an even light . light even ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ even ] = an newline print ( light [ even ] ) newline"
"people be people . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( people [ be ] ) newline"
"while carry plastic . plastic carry ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ carry ] = while newline print ( plastic [ carry ] ) newline"
"soldier march band . soldier march ?","if entities . find ( soldier ) ! = None : newline newtab entities [ soldier ] [ march ] = band newline print ( soldier [ march ] ) newline"
"red coat white . white coat ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ coat ] = red newline print ( white [ coat ] ) newline"
"visitor read fashion . visitor read ?","if entities . find ( visitor ) ! = None : newline newtab entities [ visitor ] [ read ] = fashion newline print ( visitor [ read ] ) newline"
"couple sit next . next sit ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ sit ] = couple newline print ( next [ sit ] ) newline"
"top stand or . top stand ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ stand ] = or newline print ( top [ stand ] ) newline"
"man dress man . man dress ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ dress ] = man newline print ( man [ dress ] ) newline"
"donkey pull another . another pull ?","if entities . find ( donkey ) ! = None : newline newtab entities [ donkey ] [ pull ] = donkey newline print ( another [ pull ] ) newline"
"people be sleeping . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = sleeping newline print ( people [ be ] ) newline"
"band be all . all be ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ be ] = band newline print ( all [ be ] ) newline"
"outfit hold lottery . outfit hold ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ hold ] = lottery newline print ( outfit [ hold ] ) newline"
"dog leap while . dog leap ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ leap ] = while newline print ( dog [ leap ] ) newline"
"woman stand next . next stand ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ stand ] = woman newline print ( next [ stand ] ) newline"
"man wear black . black wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( black [ wear ] ) newline"
"woman stand next . next stand ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ stand ] = woman newline print ( next [ stand ] ) newline"
"dog be sleeping . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = sleeping newline print ( dog [ be ] ) newline"
"man look out . out look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = man newline print ( out [ look ] ) newline"
"kitchen prepare colorful . colorful prepare ?","if entities . find ( kitchen ) ! = None : newline newtab entities [ kitchen ] [ prepare ] = kitchen newline print ( colorful [ prepare ] ) newline"
"sausage dress all . all dress ?","if entities . find ( sausage ) ! = None : newline newtab entities [ sausage ] [ dress ] = sausage newline print ( all [ dress ] ) newline"
"station wait while . station wait ?","if entities . find ( station ) ! = None : newline newtab entities [ station ] [ wait ] = while newline print ( station [ wait ] ) newline"
"distance be wooded . wooded be ?","if entities . find ( distance ) ! = None : newline newtab entities [ distance ] [ be ] = distance newline print ( wooded [ be ] ) newline"
"spectator watch people . spectator watch ?","if entities . find ( spectator ) ! = None : newline newtab entities [ spectator ] [ watch ] = people newline print ( spectator [ watch ] ) newline"
"bowler be people . bowler be ?","if entities . find ( bowler ) ! = None : newline newtab entities [ bowler ] [ be ] = people newline print ( bowler [ be ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"green shirt half . half shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = green newline print ( half [ shirt ] ) newline"
"palm tree white . white tree ?","if entities . find ( palm ) ! = None : newline newtab entities [ palm ] [ tree ] = palm newline print ( white [ tree ] ) newline"
"apple wear colorful . colorful wear ?","if entities . find ( apple ) ! = None : newline newtab entities [ apple ] [ wear ] = apple newline print ( colorful [ wear ] ) newline"
"woman be an . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = an newline print ( woman [ be ] ) newline"
"mother be distance . mother be ?","if entities . find ( mother ) ! = None : newline newtab entities [ mother ] [ be ] = distance newline print ( mother [ be ] ) newline"
"man carry tattered . tattered carry ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ carry ] = man newline print ( tattered [ carry ] ) newline"
"dog shake water . dog shake ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ shake ] = water newline print ( dog [ shake ] ) newline"
"while ride camel . while ride ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ ride ] = camel newline print ( while [ ride ] ) newline"
"woman be three . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = three newline print ( woman [ be ] ) newline"
"boy be swinging . swinging be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( swinging [ be ] ) newline"
"violinist play music . violinist play ?","if entities . find ( violinist ) ! = None : newline newtab entities [ violinist ] [ play ] = music newline print ( violinist [ play ] ) newline"
"two fry chinese . chinese fry ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ fry ] = two newline print ( chinese [ fry ] ) newline"
"mouth be asleep . asleep be ?","if entities . find ( mouth ) ! = None : newline newtab entities [ mouth ] [ be ] = mouth newline print ( asleep [ be ] ) newline"
"man push another . another push ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ push ] = man newline print ( another [ push ] ) newline"
"instrument play various . various play ?","if entities . find ( instrument ) ! = None : newline newtab entities [ instrument ] [ play ] = instrument newline print ( various [ play ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"bus open another . another open ?","if entities . find ( bus ) ! = None : newline newtab entities [ bus ] [ open ] = bus newline print ( another [ open ] ) newline"
"woman play electric . electric play ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ play ] = woman newline print ( electric [ play ] ) newline"
"boy pour out . out pour ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ pour ] = boy newline print ( out [ pour ] ) newline"
"red be napping . napping be ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ be ] = red newline print ( napping [ be ] ) newline"
"baby be out . out be ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ be ] = baby newline print ( out [ be ] ) newline"
"people be yawning . yawning be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( yawning [ be ] ) newline"
"child be sleeping . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = sleeping newline print ( child [ be ] ) newline"
"woman watch laptop . woman watch ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ watch ] = laptop newline print ( woman [ watch ] ) newline"
"orange short both . both short ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ short ] = orange newline print ( both [ short ] ) newline"
"woman sit or . woman sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = or newline print ( woman [ sit ] ) newline"
"red shirt swinging . swinging shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( swinging [ shirt ] ) newline"
"man look professional . professional look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = man newline print ( professional [ look ] ) newline"
"umbrella sit while . umbrella sit ?","if entities . find ( umbrella ) ! = None : newline newtab entities [ umbrella ] [ sit ] = while newline print ( umbrella [ sit ] ) newline"
"chipmunk stand or . chipmunk stand ?","if entities . find ( chipmunk ) ! = None : newline newtab entities [ chipmunk ] [ stand ] = or newline print ( chipmunk [ stand ] ) newline"
"cap look out . out look ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ look ] = cap newline print ( out [ look ] ) newline"
"boy be hard . hard be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( hard [ be ] ) newline"
"who be fun . who be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = fun newline print ( who [ be ] ) newline"
"mound be sleeping . mound be ?","if entities . find ( mound ) ! = None : newline newtab entities [ mound ] [ be ] = sleeping newline print ( mound [ be ] ) newline"
"park wear blue . blue wear ?","if entities . find ( park ) ! = None : newline newtab entities [ park ] [ wear ] = park newline print ( blue [ wear ] ) newline"
"individual hang out . out hang ?","if entities . find ( individual ) ! = None : newline newtab entities [ individual ] [ hang ] = individual newline print ( out [ hang ] ) newline"
"woman be high . high be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( high [ be ] ) newline"
"table create battery . table create ?","if entities . find ( table ) ! = None : newline newtab entities [ table ] [ create ] = battery newline print ( table [ create ] ) newline"
"woman talk while . woman talk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ talk ] = while newline print ( woman [ talk ] ) newline"
"dog run past . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = past newline print ( dog [ run ] ) newline"
"men stand next . next stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = men newline print ( next [ stand ] ) newline"
"girl be sleeping . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = sleeping newline print ( girl [ be ] ) newline"
"dog play makeshift . makeshift play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = dog newline print ( makeshift [ play ] ) newline"
"people cross competition . people cross ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ cross ] = competition newline print ( people [ cross ] ) newline"
"while stand while . while stand ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ stand ] = while newline print ( while [ stand ] ) newline"
"camera sling white . white sling ?","if entities . find ( camera ) ! = None : newline newtab entities [ camera ] [ sling ] = camera newline print ( white [ sling ] ) newline"
"people stand chest . people stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = chest newline print ( people [ stand ] ) newline"
"people play video . people play ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ play ] = video newline print ( people [ play ] ) newline"
"couple enjoy an . couple enjoy ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ enjoy ] = an newline print ( couple [ enjoy ] ) newline"
"boy stand next . next stand ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ stand ] = boy newline print ( next [ stand ] ) newline"
"man accept white . white accept ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ accept ] = man newline print ( white [ accept ] ) newline"
"man have eyebrow . man have ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ have ] = eyebrow newline print ( man [ have ] ) newline"
"suit jump dog . suit jump ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ jump ] = dog newline print ( suit [ jump ] ) newline"
"boy ride tricycle . boy ride ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ ride ] = tricycle newline print ( boy [ ride ] ) newline"
"vendor stand next . next stand ?","if entities . find ( vendor ) ! = None : newline newtab entities [ vendor ] [ stand ] = vendor newline print ( next [ stand ] ) newline"
"woman be upside . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = upside newline print ( woman [ be ] ) newline"
"businessman wear green . businessman wear ?","if entities . find ( businessman ) ! = None : newline newtab entities [ businessman ] [ wear ] = green newline print ( businessman [ wear ] ) newline"
"boy move several . several move ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ move ] = boy newline print ( several [ move ] ) newline"
"men be two . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = two newline print ( men [ be ] ) newline"
"red shirt vacuum . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = vacuum newline print ( red [ shirt ] ) newline"
"boy sit next . next sit ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ sit ] = boy newline print ( next [ sit ] ) newline"
"couple be three . couple be ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ be ] = three newline print ( couple [ be ] ) newline"
"guy look out . out look ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ look ] = guy newline print ( out [ look ] ) newline"
"jacket walk an . jacket walk ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ walk ] = an newline print ( jacket [ walk ] ) newline"
"bowler be one . one be ?","if entities . find ( bowler ) ! = None : newline newtab entities [ bowler ] [ be ] = bowler newline print ( one [ be ] ) newline"
"while hold blue . blue hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = while newline print ( blue [ hold ] ) newline"
"woman perform arts . woman perform ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ perform ] = arts newline print ( woman [ perform ] ) newline"
"field hold flower . field hold ?","if entities . find ( field ) ! = None : newline newtab entities [ field ] [ hold ] = flower newline print ( field [ hold ] ) newline"
"couple stand guard . couple stand ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ stand ] = guard newline print ( couple [ stand ] ) newline"
"person walk out . out walk ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ walk ] = person newline print ( out [ walk ] ) newline"
"green bicycle one . one bicycle ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ bicycle ] = green newline print ( one [ bicycle ] ) newline"
"fabric hang out . out hang ?","if entities . find ( fabric ) ! = None : newline newtab entities [ fabric ] [ hang ] = fabric newline print ( out [ hang ] ) newline"
"man be swinging . swinging be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( swinging [ be ] ) newline"
"lady run next . next run ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ run ] = lady newline print ( next [ run ] ) newline"
"man lift an . man lift ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ lift ] = an newline print ( man [ lift ] ) newline"
"man ride high . high ride ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ ride ] = man newline print ( high [ ride ] ) newline"
"men work computer . men work ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ work ] = computer newline print ( men [ work ] ) newline"
"style dance while . style dance ?","if entities . find ( style ) ! = None : newline newtab entities [ style ] [ dance ] = while newline print ( style [ dance ] ) newline"
"baby walk bridge . baby walk ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ walk ] = bridge newline print ( baby [ walk ] ) newline"
"man wear an . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = an newline print ( man [ wear ] ) newline"
"man hold em . man hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = em newline print ( man [ hold ] ) newline"
"baby be sleeping . baby be ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ be ] = sleeping newline print ( baby [ be ] ) newline"
"people be rock . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = rock newline print ( people [ be ] ) newline"
"person be rock . person be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = rock newline print ( person [ be ] ) newline"
"woman play tennis . woman play ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ play ] = tennis newline print ( woman [ play ] ) newline"
"gray shirt half . half shirt ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ shirt ] = gray newline print ( half [ shirt ] ) newline"
"while suspend high . high suspend ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ suspend ] = while newline print ( high [ suspend ] ) newline"
"teenager be full . full be ?","if entities . find ( teenager ) ! = None : newline newtab entities [ teenager ] [ be ] = teenager newline print ( full [ be ] ) newline"
"man be asleep . asleep be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( asleep [ be ] ) newline"
"dog stand next . next stand ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ stand ] = dog newline print ( next [ stand ] ) newline"
"who be swinging . swinging be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( swinging [ be ] ) newline"
"guard rail guard . guard rail ?","if entities . find ( guard ) ! = None : newline newtab entities [ guard ] [ rail ] = guard newline print ( guard [ rail ] ) newline"
"florist shop bazaar . florist shop ?","if entities . find ( florist ) ! = None : newline newtab entities [ florist ] [ shop ] = bazaar newline print ( florist [ shop ] ) newline"
"girl be time . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = time newline print ( girl [ be ] ) newline"
"man wear green . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = green newline print ( man [ wear ] ) newline"
"chin strap white . white strap ?","if entities . find ( chin ) ! = None : newline newtab entities [ chin ] [ strap ] = chin newline print ( white [ strap ] ) newline"
"water raft white . white raft ?","if entities . find ( water ) ! = None : newline newtab entities [ water ] [ raft ] = water newline print ( white [ raft ] ) newline"
"graffiti tag out . out tag ?","if entities . find ( graffiti ) ! = None : newline newtab entities [ graffiti ] [ tag ] = graffiti newline print ( out [ tag ] ) newline"
"green shirt while . green shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = while newline print ( green [ shirt ] ) newline"
"while wear high . high wear ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ wear ] = while newline print ( high [ wear ] ) newline"
"candle dress all . all dress ?","if entities . find ( candle ) ! = None : newline newtab entities [ candle ] [ dress ] = candle newline print ( all [ dress ] ) newline"
"child walk hand . child walk ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ walk ] = hand newline print ( child [ walk ] ) newline"
"girl eat food . girl eat ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ eat ] = food newline print ( girl [ eat ] ) newline"
"food look out . out look ?","if entities . find ( food ) ! = None : newline newtab entities [ food ] [ look ] = food newline print ( out [ look ] ) newline"
"men be an . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = an newline print ( men [ be ] ) newline"
"orange vest men . orange vest ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ vest ] = men newline print ( orange [ vest ] ) newline"
"sign be black . black be ?","if entities . find ( sign ) ! = None : newline newtab entities [ sign ] [ be ] = sign newline print ( black [ be ] ) newline"
"tennis prepare colorful . colorful prepare ?","if entities . find ( tennis ) ! = None : newline newtab entities [ tennis ] [ prepare ] = tennis newline print ( colorful [ prepare ] ) newline"
"knee pray mantis . knee pray ?","if entities . find ( knee ) ! = None : newline newtab entities [ knee ] [ pray ] = mantis newline print ( knee [ pray ] ) newline"
"boy be baby . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = baby newline print ( boy [ be ] ) newline"
"someone ride stationary . stationary ride ?","if entities . find ( someone ) ! = None : newline newtab entities [ someone ] [ ride ] = someone newline print ( stationary [ ride ] ) newline"
"bib climb out . out climb ?","if entities . find ( bib ) ! = None : newline newtab entities [ bib ] [ climb ] = bib newline print ( out [ climb ] ) newline"
"kid be opening . kid be ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ be ] = opening newline print ( kid [ be ] ) newline"
"dog be one . one be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( one [ be ] ) newline"
"head mask individual . individual mask ?","if entities . find ( head ) ! = None : newline newtab entities [ head ] [ mask ] = head newline print ( individual [ mask ] ) newline"
"woman dress swinging . swinging dress ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dress ] = woman newline print ( swinging [ dress ] ) newline"
"man sit while . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = while newline print ( man [ sit ] ) newline"
"polka dot umbrella . polka dot ?","if entities . find ( polka ) ! = None : newline newtab entities [ polka ] [ dot ] = umbrella newline print ( polka [ dot ] ) newline"
"park relax while . park relax ?","if entities . find ( park ) ! = None : newline newtab entities [ park ] [ relax ] = while newline print ( park [ relax ] ) newline"
"green grass background . green grass ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ grass ] = background newline print ( green [ grass ] ) newline"
"red fly out . out fly ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ fly ] = red newline print ( out [ fly ] ) newline"
"photographer take some . some take ?","if entities . find ( photographer ) ! = None : newline newtab entities [ photographer ] [ take ] = photographer newline print ( some [ take ] ) newline"
"street wear neon . street wear ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ wear ] = neon newline print ( street [ wear ] ) newline"
"boy wear fluorescent . fluorescent wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = boy newline print ( fluorescent [ wear ] ) newline"
"red be laughing . laughing be ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ be ] = red newline print ( laughing [ be ] ) newline"
"red shirt smoke . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = smoke newline print ( red [ shirt ] ) newline"
"people be swinging . swinging be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( swinging [ be ] ) newline"
"player jump dog . player jump ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ jump ] = dog newline print ( player [ jump ] ) newline"
"worker be sleeping . worker be ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ be ] = sleeping newline print ( worker [ be ] ) newline"
"dog sit alone . alone sit ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ sit ] = dog newline print ( alone [ sit ] ) newline"
"room be tackler . room be ?","if entities . find ( room ) ! = None : newline newtab entities [ room ] [ be ] = tackler newline print ( room [ be ] ) newline"
"man wear tutu . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = tutu newline print ( man [ wear ] ) newline"
"lady watch some . some watch ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ watch ] = lady newline print ( some [ watch ] ) newline"
"dog try two . dog try ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ try ] = two newline print ( dog [ try ] ) newline"
"student be out . out be ?","if entities . find ( student ) ! = None : newline newtab entities [ student ] [ be ] = student newline print ( out [ be ] ) newline"
"baby wear blue . blue wear ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ wear ] = baby newline print ( blue [ wear ] ) newline"
"man sit while . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = while newline print ( man [ sit ] ) newline"
"male smile while . male smile ?","if entities . find ( male ) ! = None : newline newtab entities [ male ] [ smile ] = while newline print ( male [ smile ] ) newline"
"alley appear two . alley appear ?","if entities . find ( alley ) ! = None : newline newtab entities [ alley ] [ appear ] = two newline print ( alley [ appear ] ) newline"
"boy be ready . ready be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( ready [ be ] ) newline"
"men leap out . out leap ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ leap ] = men newline print ( out [ leap ] ) newline"
"girl pull an . girl pull ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ pull ] = an newline print ( girl [ pull ] ) newline"
"woman be smoke . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = smoke newline print ( woman [ be ] ) newline"
"bikers be four . bikers be ?","if entities . find ( bikers ) ! = None : newline newtab entities [ bikers ] [ be ] = four newline print ( bikers [ be ] ) newline"
"men be upside . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = upside newline print ( men [ be ] ) newline"
"cafe have fun . cafe have ?","if entities . find ( cafe ) ! = None : newline newtab entities [ cafe ] [ have ] = fun newline print ( cafe [ have ] ) newline"
"glassblower be white . white be ?","if entities . find ( glassblower ) ! = None : newline newtab entities [ glassblower ] [ be ] = glassblower newline print ( white [ be ] ) newline"
"goalie jump suite . goalie jump ?","if entities . find ( goalie ) ! = None : newline newtab entities [ goalie ] [ jump ] = suite newline print ( goalie [ jump ] ) newline"
"people walk while . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = while newline print ( people [ walk ] ) newline"
"air balloon art . air balloon ?","if entities . find ( air ) ! = None : newline newtab entities [ air ] [ balloon ] = art newline print ( air [ balloon ] ) newline"
"two police car . two police ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ police ] = car newline print ( two [ police ] ) newline"
"dog jump dog . dog jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = dog newline print ( dog [ jump ] ) newline"
"man stand or . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = or newline print ( man [ stand ] ) newline"
"pencil skirt all . all skirt ?","if entities . find ( pencil ) ! = None : newline newtab entities [ pencil ] [ skirt ] = pencil newline print ( all [ skirt ] ) newline"
"dog be two . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = two newline print ( dog [ be ] ) newline"
"woman hold some . some hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = woman newline print ( some [ hold ] ) newline"
"businessmen stand side . businessmen stand ?","if entities . find ( businessmen ) ! = None : newline newtab entities [ businessmen ] [ stand ] = side newline print ( businessmen [ stand ] ) newline"
"an excite couple . an excite ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ excite ] = couple newline print ( an [ excite ] ) newline"
"man wear apron . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = apron newline print ( man [ wear ] ) newline"
"biker be power . biker be ?","if entities . find ( biker ) ! = None : newline newtab entities [ biker ] [ be ] = power newline print ( biker [ be ] ) newline"
"man wear converse . converse wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( converse [ wear ] ) newline"
"people be swinging . swinging be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( swinging [ be ] ) newline"
"men act two . men act ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ act ] = two newline print ( men [ act ] ) newline"
"boy look woman . boy look ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ look ] = woman newline print ( boy [ look ] ) newline"
"red shirt brush . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = brush newline print ( red [ shirt ] ) newline"
"man work station . man work ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ work ] = station newline print ( man [ work ] ) newline"
"someone be smoke . someone be ?","if entities . find ( someone ) ! = None : newline newtab entities [ someone ] [ be ] = smoke newline print ( someone [ be ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"jeans work construction . jeans work ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ work ] = construction newline print ( jeans [ work ] ) newline"
"orange shirt hard . hard shirt ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ shirt ] = orange newline print ( hard [ shirt ] ) newline"
"suit be three . suit be ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ be ] = three newline print ( suit [ be ] ) newline"
"people ride camel . people ride ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ ride ] = camel newline print ( people [ ride ] ) newline"
"poncho be many . many be ?","if entities . find ( poncho ) ! = None : newline newtab entities [ poncho ] [ be ] = poncho newline print ( many [ be ] ) newline"
"laptop smile next . next smile ?","if entities . find ( laptop ) ! = None : newline newtab entities [ laptop ] [ smile ] = laptop newline print ( next [ smile ] ) newline"
"bag be ready . ready be ?","if entities . find ( bag ) ! = None : newline newtab entities [ bag ] [ be ] = bag newline print ( ready [ be ] ) newline"
"man look out . out look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = man newline print ( out [ look ] ) newline"
"people be laughing . laughing be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( laughing [ be ] ) newline"
"quarterback fall branch . quarterback fall ?","if entities . find ( quarterback ) ! = None : newline newtab entities [ quarterback ] [ fall ] = branch newline print ( quarterback [ fall ] ) newline"
"life vest wave . life vest ?","if entities . find ( life ) ! = None : newline newtab entities [ life ] [ vest ] = wave newline print ( life [ vest ] ) newline"
"guy be clustered . clustered be ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ be ] = guy newline print ( clustered [ be ] ) newline"
"guy wear denim . guy wear ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ wear ] = denim newline print ( guy [ wear ] ) newline"
"woman be several . several be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( several [ be ] ) newline"
"man hold slip . man hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = slip newline print ( man [ hold ] ) newline"
"boy wear black . black wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = boy newline print ( black [ wear ] ) newline"
"court smile brunette . brunette smile ?","if entities . find ( court ) ! = None : newline newtab entities [ court ] [ smile ] = court newline print ( brunette [ smile ] ) newline"
"man wear red . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = red newline print ( man [ wear ] ) newline"
"truck be asleep . asleep be ?","if entities . find ( truck ) ! = None : newline newtab entities [ truck ] [ be ] = truck newline print ( asleep [ be ] ) newline"
"lady slice piece . lady slice ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ slice ] = piece newline print ( lady [ slice ] ) newline"
"boy climb wall . boy climb ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ climb ] = wall newline print ( boy [ climb ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"men gather paper . men gather ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ gather ] = paper newline print ( men [ gather ] ) newline"
"artist paint similar . similar paint ?","if entities . find ( artist ) ! = None : newline newtab entities [ artist ] [ paint ] = artist newline print ( similar [ paint ] ) newline"
"cap walk hand . cap walk ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ walk ] = hand newline print ( cap [ walk ] ) newline"
"parent get air . parent get ?","if entities . find ( parent ) ! = None : newline newtab entities [ parent ] [ get ] = air newline print ( parent [ get ] ) newline"
"bird cup water . bird cup ?","if entities . find ( bird ) ! = None : newline newtab entities [ bird ] [ cup ] = water newline print ( bird [ cup ] ) newline"
"people stand market . people stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = market newline print ( people [ stand ] ) newline"
"man paint an . man paint ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ paint ] = an newline print ( man [ paint ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"professional sit next . next sit ?","if entities . find ( professional ) ! = None : newline newtab entities [ professional ] [ sit ] = professional newline print ( next [ sit ] ) newline"
"people watch other . other watch ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ watch ] = people newline print ( other [ watch ] ) newline"
"stone build human . human build ?","if entities . find ( stone ) ! = None : newline newtab entities [ stone ] [ build ] = stone newline print ( human [ build ] ) newline"
"bandanna be happy . happy be ?","if entities . find ( bandanna ) ! = None : newline newtab entities [ bandanna ] [ be ] = bandanna newline print ( happy [ be ] ) newline"
"dog be laughing . laughing be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( laughing [ be ] ) newline"
"boat ride horse . boat ride ?","if entities . find ( boat ) ! = None : newline newtab entities [ boat ] [ ride ] = horse newline print ( boat [ ride ] ) newline"
"dog wear sunglasses . dog wear ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ wear ] = sunglasses newline print ( dog [ wear ] ) newline"
"band mate who . band mate ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ mate ] = who newline print ( band [ mate ] ) newline"
"dog be swinging . swinging be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( swinging [ be ] ) newline"
"dog be many . many be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( many [ be ] ) newline"
"boy give another . another give ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ give ] = boy newline print ( another [ give ] ) newline"
"graffiti color outfit . graffiti color ?","if entities . find ( graffiti ) ! = None : newline newtab entities [ graffiti ] [ color ] = outfit newline print ( graffiti [ color ] ) newline"
"ambulance be unclear . unclear be ?","if entities . find ( ambulance ) ! = None : newline newtab entities [ ambulance ] [ be ] = ambulance newline print ( unclear [ be ] ) newline"
"sunset sky blue . blue sky ?","if entities . find ( sunset ) ! = None : newline newtab entities [ sunset ] [ sky ] = sunset newline print ( blue [ sky ] ) newline"
"guy be turing . guy be ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ be ] = turing newline print ( guy [ be ] ) newline"
"red pant clean . clean pant ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ pant ] = red newline print ( clean [ pant ] ) newline"
"men carry bag . men carry ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ carry ] = bag newline print ( men [ carry ] ) newline"
"people play basketball . people play ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ play ] = basketball newline print ( people [ play ] ) newline"
"boy be busy . busy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( busy [ be ] ) newline"
"people swim pool . people swim ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ swim ] = pool newline print ( people [ swim ] ) newline"
"jeans run fast . fast run ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ run ] = jeans newline print ( fast [ run ] ) newline"
"field hold fresh . fresh hold ?","if entities . find ( field ) ! = None : newline newtab entities [ field ] [ hold ] = field newline print ( fresh [ hold ] ) newline"
"man wear black . black wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( black [ wear ] ) newline"
"girl wait room . girl wait ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wait ] = room newline print ( girl [ wait ] ) newline"
"brown slack two . brown slack ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ slack ] = two newline print ( brown [ slack ] ) newline"
"person swim underwater . underwater swim ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ swim ] = person newline print ( underwater [ swim ] ) newline"
"dog hold another . another hold ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ hold ] = dog newline print ( another [ hold ] ) newline"
"girl pull out . out pull ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ pull ] = girl newline print ( out [ pull ] ) newline"
"restaurant smoke car . restaurant smoke ?","if entities . find ( restaurant ) ! = None : newline newtab entities [ restaurant ] [ smoke ] = car newline print ( restaurant [ smoke ] ) newline"
"cowboy stand next . next stand ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ stand ] = cowboy newline print ( next [ stand ] ) newline"
"men be rock . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = rock newline print ( men [ be ] ) newline"
"athlete play instrument . athlete play ?","if entities . find ( athlete ) ! = None : newline newtab entities [ athlete ] [ play ] = instrument newline print ( athlete [ play ] ) newline"
"woman walk arm . woman walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = arm newline print ( woman [ walk ] ) newline"
"green clean windows . green clean ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ clean ] = windows newline print ( green [ clean ] ) newline"
"store wait area . store wait ?","if entities . find ( store ) ! = None : newline newtab entities [ store ] [ wait ] = area newline print ( store [ wait ] ) newline"
"woman smile next . next smile ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ smile ] = woman newline print ( next [ smile ] ) newline"
"people stand center . people stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = center newline print ( people [ stand ] ) newline"
"top use old . old use ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ use ] = top newline print ( old [ use ] ) newline"
"people walk guard . people walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = guard newline print ( people [ walk ] ) newline"
"sandal draw colorful . colorful draw ?","if entities . find ( sandal ) ! = None : newline newtab entities [ sandal ] [ draw ] = sandal newline print ( colorful [ draw ] ) newline"
"dancer be five . dancer be ?","if entities . find ( dancer ) ! = None : newline newtab entities [ dancer ] [ be ] = five newline print ( dancer [ be ] ) newline"
"person wear jeans . person wear ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ wear ] = jeans newline print ( person [ wear ] ) newline"
"woman be five . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = five newline print ( woman [ be ] ) newline"
"man dress man . man dress ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ dress ] = man newline print ( man [ dress ] ) newline"
"people party white . white party ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ party ] = people newline print ( white [ party ] ) newline"
"hair sit low . low sit ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ sit ] = hair newline print ( low [ sit ] ) newline"
"while rest head . while rest ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ rest ] = head newline print ( while [ rest ] ) newline"
"woman wear sunglasses . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = sunglasses newline print ( woman [ wear ] ) newline"
"performer ride uniform . uniform ride ?","if entities . find ( performer ) ! = None : newline newtab entities [ performer ] [ ride ] = performer newline print ( uniform [ ride ] ) newline"
"woman be many . many be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( many [ be ] ) newline"
"green bucket full . full bucket ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ bucket ] = green newline print ( full [ bucket ] ) newline"
"woman hold small . small hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = woman newline print ( small [ hold ] ) newline"
"men be referee . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = referee newline print ( men [ be ] ) newline"
"woman wear basket . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = basket newline print ( woman [ wear ] ) newline"
"girl hold bag . girl hold ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ hold ] = bag newline print ( girl [ hold ] ) newline"
"bamboo fence white . white fence ?","if entities . find ( bamboo ) ! = None : newline newtab entities [ bamboo ] [ fence ] = bamboo newline print ( white [ fence ] ) newline"
"bonnet stand man . bonnet stand ?","if entities . find ( bonnet ) ! = None : newline newtab entities [ bonnet ] [ stand ] = man newline print ( bonnet [ stand ] ) newline"
"woman wear baseball . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = baseball newline print ( woman [ wear ] ) newline"
"red shirt sheep . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = sheep newline print ( red [ shirt ] ) newline"
"device swim underwater . underwater swim ?","if entities . find ( device ) ! = None : newline newtab entities [ device ] [ swim ] = device newline print ( underwater [ swim ] ) newline"
"dog pull out . out pull ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ pull ] = dog newline print ( out [ pull ] ) newline"
"woman hang upside . woman hang ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hang ] = upside newline print ( woman [ hang ] ) newline"
"child be swinging . swinging be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( swinging [ be ] ) newline"
"playground sit next . next sit ?","if entities . find ( playground ) ! = None : newline newtab entities [ playground ] [ sit ] = playground newline print ( next [ sit ] ) newline"
"girl play electric . electric play ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ play ] = girl newline print ( electric [ play ] ) newline"
"teacher be colorful . colorful be ?","if entities . find ( teacher ) ! = None : newline newtab entities [ teacher ] [ be ] = teacher newline print ( colorful [ be ] ) newline"
"guy hold one . one hold ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ hold ] = guy newline print ( one [ hold ] ) newline"
"woman cook food . woman cook ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ cook ] = food newline print ( woman [ cook ] ) newline"
"dog play hopscotch . dog play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = hopscotch newline print ( dog [ play ] ) newline"
"skateboarder fly high . high fly ?","if entities . find ( skateboarder ) ! = None : newline newtab entities [ skateboarder ] [ fly ] = skateboarder newline print ( high [ fly ] ) newline"
"man be referee . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = referee newline print ( man [ be ] ) newline"
"skier receive some . some receive ?","if entities . find ( skier ) ! = None : newline newtab entities [ skier ] [ receive ] = skier newline print ( some [ receive ] ) newline"
"gentleman be open . open be ?","if entities . find ( gentleman ) ! = None : newline newtab entities [ gentleman ] [ be ] = gentleman newline print ( open [ be ] ) newline"
"girl be airborne . airborne be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( airborne [ be ] ) newline"
"worker be upside . worker be ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ be ] = upside newline print ( worker [ be ] ) newline"
"dog jump two . dog jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = two newline print ( dog [ jump ] ) newline"
"guy wear black . black wear ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ wear ] = guy newline print ( black [ wear ] ) newline"
"dolly cart it . dolly cart ?","if entities . find ( dolly ) ! = None : newline newtab entities [ dolly ] [ cart ] = it newline print ( dolly [ cart ] ) newline"
"woman walk while . woman walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = while newline print ( woman [ walk ] ) newline"
"people be laughing . laughing be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( laughing [ be ] ) newline"
"woman be hot . hot be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( hot [ be ] ) newline"
"woman wear an . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = an newline print ( woman [ wear ] ) newline"
"boy compete cyclist . boy compete ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ compete ] = cyclist newline print ( boy [ compete ] ) newline"
"child get someone . child get ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ get ] = someone newline print ( child [ get ] ) newline"
"woman ride bike . woman ride ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ ride ] = bike newline print ( woman [ ride ] ) newline"
"man wear thick . thick wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( thick [ wear ] ) newline"
"team kick another . another kick ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ kick ] = team newline print ( another [ kick ] ) newline"
"stone build next . next build ?","if entities . find ( stone ) ! = None : newline newtab entities [ stone ] [ build ] = stone newline print ( next [ build ] ) newline"
"car be asleep . asleep be ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ be ] = car newline print ( asleep [ be ] ) newline"
"two police officer . two police ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ police ] = officer newline print ( two [ police ] ) newline"
"bystander be rock . bystander be ?","if entities . find ( bystander ) ! = None : newline newtab entities [ bystander ] [ be ] = rock newline print ( bystander [ be ] ) newline"
"dog be swinging . swinging be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( swinging [ be ] ) newline"
"girl look child . girl look ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ look ] = child newline print ( girl [ look ] ) newline"
"man sit while . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = while newline print ( man [ sit ] ) newline"
"player chase it . player chase ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ chase ] = it newline print ( player [ chase ] ) newline"
"while hike trip . while hike ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hike ] = trip newline print ( while [ hike ] ) newline"
"child be whispering . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = whispering newline print ( child [ be ] ) newline"
"two sunbathe next . next sunbathe ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ sunbathe ] = two newline print ( next [ sunbathe ] ) newline"
"hand walk while . hand walk ?","if entities . find ( hand ) ! = None : newline newtab entities [ hand ] [ walk ] = while newline print ( hand [ walk ] ) newline"
"people look blond . people look ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ look ] = blond newline print ( people [ look ] ) newline"
"mustang shirt button . mustang shirt ?","if entities . find ( mustang ) ! = None : newline newtab entities [ mustang ] [ shirt ] = button newline print ( mustang [ shirt ] ) newline"
"couple walk alone . alone walk ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ walk ] = couple newline print ( alone [ walk ] ) newline"
"while hold yellow . yellow hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = while newline print ( yellow [ hold ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"guard stand applause . guard stand ?","if entities . find ( guard ) ! = None : newline newtab entities [ guard ] [ stand ] = applause newline print ( guard [ stand ] ) newline"
"bull be napping . napping be ?","if entities . find ( bull ) ! = None : newline newtab entities [ bull ] [ be ] = bull newline print ( napping [ be ] ) newline"
"child be number . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = number newline print ( child [ be ] ) newline"
"woman observe two . woman observe ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ observe ] = two newline print ( woman [ observe ] ) newline"
"man be staring . staring be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( staring [ be ] ) newline"
"family be out . out be ?","if entities . find ( family ) ! = None : newline newtab entities [ family ] [ be ] = family newline print ( out [ be ] ) newline"
"chair be laughing . laughing be ?","if entities . find ( chair ) ! = None : newline newtab entities [ chair ] [ be ] = chair newline print ( laughing [ be ] ) newline"
"snowboarder wear all . all wear ?","if entities . find ( snowboarder ) ! = None : newline newtab entities [ snowboarder ] [ wear ] = snowboarder newline print ( all [ wear ] ) newline"
"people be ready . ready be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( ready [ be ] ) newline"
"guitarist play some . some play ?","if entities . find ( guitarist ) ! = None : newline newtab entities [ guitarist ] [ play ] = guitarist newline print ( some [ play ] ) newline"
"water try two . water try ?","if entities . find ( water ) ! = None : newline newtab entities [ water ] [ try ] = two newline print ( water [ try ] ) newline"
"people look chair . people look ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ look ] = chair newline print ( people [ look ] ) newline"
"helmet ride bike . helmet ride ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ ride ] = bike newline print ( helmet [ ride ] ) newline"
"onlooker watch another . another watch ?","if entities . find ( onlooker ) ! = None : newline newtab entities [ onlooker ] [ watch ] = onlooker newline print ( another [ watch ] ) newline"
"catcher celebrate some . some celebrate ?","if entities . find ( catcher ) ! = None : newline newtab entities [ catcher ] [ celebrate ] = catcher newline print ( some [ celebrate ] ) newline"
"member be all . all be ?","if entities . find ( member ) ! = None : newline newtab entities [ member ] [ be ] = member newline print ( all [ be ] ) newline"
"green shirt swinging . swinging shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = green newline print ( swinging [ shirt ] ) newline"
"boy sit next . next sit ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ sit ] = boy newline print ( next [ sit ] ) newline"
"girl fix gear . girl fix ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ fix ] = gear newline print ( girl [ fix ] ) newline"
"man be napping . napping be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( napping [ be ] ) newline"
"piece will lead . piece will ?","if entities . find ( piece ) ! = None : newline newtab entities [ piece ] [ will ] = lead newline print ( piece [ will ] ) newline"
"hair be wind . hair be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = wind newline print ( hair [ be ] ) newline"
"man lay dog . man lay ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ lay ] = dog newline print ( man [ lay ] ) newline"
"girl wear blue . blue wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = girl newline print ( blue [ wear ] ) newline"
"people face many . many face ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ face ] = people newline print ( many [ face ] ) newline"
"people sit next . next sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = people newline print ( next [ sit ] ) newline"
"woman dress man . woman dress ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dress ] = man newline print ( woman [ dress ] ) newline"
"two police officer . two police ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ police ] = officer newline print ( two [ police ] ) newline"
"market weigh fruit . market weigh ?","if entities . find ( market ) ! = None : newline newtab entities [ market ] [ weigh ] = fruit newline print ( market [ weigh ] ) newline"
"girl perform karate . girl perform ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ perform ] = karate newline print ( girl [ perform ] ) newline"
"man play acoustic . acoustic play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = man newline print ( acoustic [ play ] ) newline"
"it jump horse . it jump ?","if entities . find ( it ) ! = None : newline newtab entities [ it ] [ jump ] = horse newline print ( it [ jump ] ) newline"
"hiker pose an . hiker pose ?","if entities . find ( hiker ) ! = None : newline newtab entities [ hiker ] [ pose ] = an newline print ( hiker [ pose ] ) newline"
"surfer do various . various do ?","if entities . find ( surfer ) ! = None : newline newtab entities [ surfer ] [ do ] = surfer newline print ( various [ do ] ) newline"
"street hold numerous . numerous hold ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ hold ] = street newline print ( numerous [ hold ] ) newline"
"woman walk while . woman walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = while newline print ( woman [ walk ] ) newline"
"gear look woman . gear look ?","if entities . find ( gear ) ! = None : newline newtab entities [ gear ] [ look ] = woman newline print ( gear [ look ] ) newline"
"people talk next . next talk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ talk ] = people newline print ( next [ talk ] ) newline"
"player be sleeping . player be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = sleeping newline print ( player [ be ] ) newline"
"race be spray . race be ?","if entities . find ( race ) ! = None : newline newtab entities [ race ] [ be ] = spray newline print ( race [ be ] ) newline"
"kid be sleeping . kid be ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ be ] = sleeping newline print ( kid [ be ] ) newline"
"player dress all . all dress ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ dress ] = player newline print ( all [ dress ] ) newline"
"boy wear cowboy . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = cowboy newline print ( boy [ wear ] ) newline"
"dog be painted . painted be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( painted [ be ] ) newline"
"dog swim underwater . underwater swim ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ swim ] = dog newline print ( underwater [ swim ] ) newline"
"hairstyle wait female . hairstyle wait ?","if entities . find ( hairstyle ) ! = None : newline newtab entities [ hairstyle ] [ wait ] = female newline print ( hairstyle [ wait ] ) newline"
"men sit next . next sit ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ sit ] = men newline print ( next [ sit ] ) newline"
"woman be airborne . airborne be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( airborne [ be ] ) newline"
"child hold an . child hold ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ hold ] = an newline print ( child [ hold ] ) newline"
"runner compete white . white compete ?","if entities . find ( runner ) ! = None : newline newtab entities [ runner ] [ compete ] = runner newline print ( white [ compete ] ) newline"
"people smile little . little smile ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ smile ] = people newline print ( little [ smile ] ) newline"
"wrestler be some . some be ?","if entities . find ( wrestler ) ! = None : newline newtab entities [ wrestler ] [ be ] = wrestler newline print ( some [ be ] ) newline"
"while paint hard . hard paint ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ paint ] = while newline print ( hard [ paint ] ) newline"
"man be out . out be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( out [ be ] ) newline"
"helmet be bored . bored be ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ be ] = helmet newline print ( bored [ be ] ) newline"
"people be painted . painted be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( painted [ be ] ) newline"
"coverall sit next . next sit ?","if entities . find ( coverall ) ! = None : newline newtab entities [ coverall ] [ sit ] = coverall newline print ( next [ sit ] ) newline"
"girl be airborne . airborne be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( airborne [ be ] ) newline"
"team be rock . team be ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ be ] = rock newline print ( team [ be ] ) newline"
"baby look out . out look ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ look ] = baby newline print ( out [ look ] ) newline"
"water spout two . water spout ?","if entities . find ( water ) ! = None : newline newtab entities [ water ] [ spout ] = two newline print ( water [ spout ] ) newline"
"orange attire swinging . swinging attire ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ attire ] = orange newline print ( swinging [ attire ] ) newline"
"lady sit while . lady sit ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ sit ] = while newline print ( lady [ sit ] ) newline"
"girl dress all . all dress ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ dress ] = girl newline print ( all [ dress ] ) newline"
"dog play monopoly . dog play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = monopoly newline print ( dog [ play ] ) newline"
"while hold heart . while hold ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ hold ] = heart newline print ( while [ hold ] ) newline"
"people be airborne . airborne be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( airborne [ be ] ) newline"
"toddler be featured . featured be ?","if entities . find ( toddler ) ! = None : newline newtab entities [ toddler ] [ be ] = toddler newline print ( featured [ be ] ) newline"
"lady be laughing . laughing be ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ be ] = lady newline print ( laughing [ be ] ) newline"
"red bicycle rental . rental bicycle ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ bicycle ] = red newline print ( rental [ bicycle ] ) newline"
"hair be belongings . hair be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = belongings newline print ( hair [ be ] ) newline"
"girl sit next . next sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = girl newline print ( next [ sit ] ) newline"
"stage dance one . one dance ?","if entities . find ( stage ) ! = None : newline newtab entities [ stage ] [ dance ] = stage newline print ( one [ dance ] ) newline"
"or bucket two . or bucket ?","if entities . find ( or ) ! = None : newline newtab entities [ or ] [ bucket ] = two newline print ( or [ bucket ] ) newline"
"gentleman be swinging . swinging be ?","if entities . find ( gentleman ) ! = None : newline newtab entities [ gentleman ] [ be ] = gentleman newline print ( swinging [ be ] ) newline"
"boy be taste . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = taste newline print ( boy [ be ] ) newline"
"boy dress laughing . laughing dress ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ dress ] = boy newline print ( laughing [ dress ] ) newline"
"men stand while . men stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = while newline print ( men [ stand ] ) newline"
"child sit or . child sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = or newline print ( child [ sit ] ) newline"
"nike hat carousing . carousing hat ?","if entities . find ( nike ) ! = None : newline newtab entities [ nike ] [ hat ] = nike newline print ( carousing [ hat ] ) newline"
"people be all . all be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( all [ be ] ) newline"
"girl be four . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = four newline print ( girl [ be ] ) newline"
"camera wear black . black wear ?","if entities . find ( camera ) ! = None : newline newtab entities [ camera ] [ wear ] = camera newline print ( black [ wear ] ) newline"
"suit pass out . out pass ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ pass ] = suit newline print ( out [ pass ] ) newline"
"firework show jumper . firework show ?","if entities . find ( firework ) ! = None : newline newtab entities [ firework ] [ show ] = jumper newline print ( firework [ show ] ) newline"
"people be belongings . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = belongings newline print ( people [ be ] ) newline"
"worker move dirt . worker move ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ move ] = dirt newline print ( worker [ move ] ) newline"
"man sit next . next sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( next [ sit ] ) newline"
"derby wear hard . hard wear ?","if entities . find ( derby ) ! = None : newline newtab entities [ derby ] [ wear ] = derby newline print ( hard [ wear ] ) newline"
"people be staring . staring be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( staring [ be ] ) newline"
"woman examine fern . woman examine ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ examine ] = fern newline print ( woman [ examine ] ) newline"
"green ride horse . green ride ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ ride ] = horse newline print ( green [ ride ] ) newline"
"while use plastic . plastic use ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ use ] = while newline print ( plastic [ use ] ) newline"
"red motorcycle rider . red motorcycle ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ motorcycle ] = rider newline print ( red [ motorcycle ] ) newline"
"man be all . all be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( all [ be ] ) newline"
"jacket reach out . out reach ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ reach ] = jacket newline print ( out [ reach ] ) newline"
"people pose while . people pose ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ pose ] = while newline print ( people [ pose ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"child take some . some take ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ take ] = child newline print ( some [ take ] ) newline"
"woman hold newborn . newborn hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = woman newline print ( newborn [ hold ] ) newline"
"man eat an . man eat ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ eat ] = an newline print ( man [ eat ] ) newline"
"man ride camel . man ride ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ ride ] = camel newline print ( man [ ride ] ) newline"
"boy wear headphone . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = headphone newline print ( boy [ wear ] ) newline"
"child wear thick . thick wear ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ wear ] = child newline print ( thick [ wear ] ) newline"
"people dress all . all dress ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ dress ] = people newline print ( all [ dress ] ) newline"
"man take part . man take ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ take ] = part newline print ( man [ take ] ) newline"
"dog jump out . out jump ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ jump ] = dog newline print ( out [ jump ] ) newline"
"boy be an . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = an newline print ( boy [ be ] ) newline"
"girl sit next . next sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = girl newline print ( next [ sit ] ) newline"
"image have tribal . tribal have ?","if entities . find ( image ) ! = None : newline newtab entities [ image ] [ have ] = image newline print ( tribal [ have ] ) newline"
"guy attend white . white attend ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ attend ] = guy newline print ( white [ attend ] ) newline"
"jersey try out . out try ?","if entities . find ( jersey ) ! = None : newline newtab entities [ jersey ] [ try ] = jersey newline print ( out [ try ] ) newline"
"cowboy hat while . cowboy hat ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ hat ] = while newline print ( cowboy [ hat ] ) newline"
"men stand next . next stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = men newline print ( next [ stand ] ) newline"
"guy ski cap . guy ski ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ ski ] = cap newline print ( guy [ ski ] ) newline"
"man hammer white . white hammer ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hammer ] = man newline print ( white [ hammer ] ) newline"
"man sit while . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = while newline print ( man [ sit ] ) newline"
"who be parasailing . who be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = parasailing newline print ( who [ be ] ) newline"
"man pause white . white pause ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ pause ] = man newline print ( white [ pause ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"man ride public . public ride ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ ride ] = man newline print ( public [ ride ] ) newline"
"boy have white . white have ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ have ] = boy newline print ( white [ have ] ) newline"
"girl be several . several be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = girl newline print ( several [ be ] ) newline"
"girl wear jean . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = jean newline print ( girl [ wear ] ) newline"
"prevention vest men . prevention vest ?","if entities . find ( prevention ) ! = None : newline newtab entities [ prevention ] [ vest ] = men newline print ( prevention [ vest ] ) newline"
"an empty bottle . an empty ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ empty ] = bottle newline print ( an [ empty ] ) newline"
"dog be textile . textile be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( textile [ be ] ) newline"
"dog be white . white be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( white [ be ] ) newline"
"boot be chinese . chinese be ?","if entities . find ( boot ) ! = None : newline newtab entities [ boot ] [ be ] = boot newline print ( chinese [ be ] ) newline"
"people stand next . next stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( next [ stand ] ) newline"
"plane fly low . low fly ?","if entities . find ( plane ) ! = None : newline newtab entities [ plane ] [ fly ] = plane newline print ( low [ fly ] ) newline"
"girl go live . live go ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ go ] = girl newline print ( live [ go ] ) newline"
"restaurant set while . restaurant set ?","if entities . find ( restaurant ) ! = None : newline newtab entities [ restaurant ] [ set ] = while newline print ( restaurant [ set ] ) newline"
"man sit alone . alone sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( alone [ sit ] ) newline"
"chef hat next . next hat ?","if entities . find ( chef ) ! = None : newline newtab entities [ chef ] [ hat ] = chef newline print ( next [ hat ] ) newline"
"tan coat gesture . tan coat ?","if entities . find ( tan ) ! = None : newline newtab entities [ tan ] [ coat ] = gesture newline print ( tan [ coat ] ) newline"
"man show girl . man show ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ show ] = girl newline print ( man [ show ] ) newline"
"girl be three . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = three newline print ( girl [ be ] ) newline"
"who have it . who have ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ have ] = it newline print ( who [ have ] ) newline"
"giant pair white . white pair ?","if entities . find ( giant ) ! = None : newline newtab entities [ giant ] [ pair ] = giant newline print ( white [ pair ] ) newline"
"man set sun . man set ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ set ] = sun newline print ( man [ set ] ) newline"
"window dress woman . window dress ?","if entities . find ( window ) ! = None : newline newtab entities [ window ] [ dress ] = woman newline print ( window [ dress ] ) newline"
"onlooker watch while . onlooker watch ?","if entities . find ( onlooker ) ! = None : newline newtab entities [ onlooker ] [ watch ] = while newline print ( onlooker [ watch ] ) newline"
"woman hold an . woman hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = an newline print ( woman [ hold ] ) newline"
"firefighter be out . out be ?","if entities . find ( firefighter ) ! = None : newline newtab entities [ firefighter ] [ be ] = firefighter newline print ( out [ be ] ) newline"
"hair stand man . hair stand ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ stand ] = man newline print ( hair [ stand ] ) newline"
"part ride orange . part ride ?","if entities . find ( part ) ! = None : newline newtab entities [ part ] [ ride ] = orange newline print ( part [ ride ] ) newline"
"bench play electric . electric play ?","if entities . find ( bench ) ! = None : newline newtab entities [ bench ] [ play ] = bench newline print ( electric [ play ] ) newline"
"red bucket full . full bucket ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ bucket ] = red newline print ( full [ bucket ] ) newline"
"guard rail yard . guard rail ?","if entities . find ( guard ) ! = None : newline newtab entities [ guard ] [ rail ] = yard newline print ( guard [ rail ] ) newline"
"dog chase sheep . dog chase ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ chase ] = sheep newline print ( dog [ chase ] ) newline"
"people be yawning . yawning be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( yawning [ be ] ) newline"
"kid be staring . staring be ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ be ] = kid newline print ( staring [ be ] ) newline"
"mountain try two . mountain try ?","if entities . find ( mountain ) ! = None : newline newtab entities [ mountain ] [ try ] = two newline print ( mountain [ try ] ) newline"
"player be ready . ready be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = player newline print ( ready [ be ] ) newline"
"men be numerous . numerous be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( numerous [ be ] ) newline"
"lady be airborne . airborne be ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ be ] = lady newline print ( airborne [ be ] ) newline"
"person be visible . visible be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = person newline print ( visible [ be ] ) newline"
"woman wear olive . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = olive newline print ( woman [ wear ] ) newline"
"dog tug white . white tug ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ tug ] = dog newline print ( white [ tug ] ) newline"
"person ski ball . person ski ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ ski ] = ball newline print ( person [ ski ] ) newline"
"while play instrument . while play ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ play ] = instrument newline print ( while [ play ] ) newline"
"girl wear various . various wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = girl newline print ( various [ wear ] ) newline"
"boy hold yellow . yellow hold ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ hold ] = boy newline print ( yellow [ hold ] ) newline"
"people watch battery . people watch ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ watch ] = battery newline print ( people [ watch ] ) newline"
"people buy food . people buy ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ buy ] = food newline print ( people [ buy ] ) newline"
"country drape white . white drape ?","if entities . find ( country ) ! = None : newline newtab entities [ country ] [ drape ] = country newline print ( white [ drape ] ) newline"
"woman walk don . woman walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = don newline print ( woman [ walk ] ) newline"
"girl sit court . girl sit ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ sit ] = court newline print ( girl [ sit ] ) newline"
"man be several . several be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( several [ be ] ) newline"
"belt be laughing . laughing be ?","if entities . find ( belt ) ! = None : newline newtab entities [ belt ] [ be ] = belt newline print ( laughing [ be ] ) newline"
"board be full . full be ?","if entities . find ( board ) ! = None : newline newtab entities [ board ] [ be ] = board newline print ( full [ be ] ) newline"
"costume sing live . live sing ?","if entities . find ( costume ) ! = None : newline newtab entities [ costume ] [ sing ] = costume newline print ( live [ sing ] ) newline"
"hair be painted . painted be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = hair newline print ( painted [ be ] ) newline"
"dog run while . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = while newline print ( dog [ run ] ) newline"
"couple be part . couple be ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ be ] = part newline print ( couple [ be ] ) newline"
"boy run out . out run ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ run ] = boy newline print ( out [ run ] ) newline"
"adult stand next . next stand ?","if entities . find ( adult ) ! = None : newline newtab entities [ adult ] [ stand ] = adult newline print ( next [ stand ] ) newline"
"man adjust music . man adjust ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ adjust ] = music newline print ( man [ adjust ] ) newline"
"red shirt swinging . swinging shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( swinging [ shirt ] ) newline"
"family look redhead . family look ?","if entities . find ( family ) ! = None : newline newtab entities [ family ] [ look ] = redhead newline print ( family [ look ] ) newline"
"snow tube white . white tube ?","if entities . find ( snow ) ! = None : newline newtab entities [ snow ] [ tube ] = snow newline print ( white [ tube ] ) newline"
"conference create pottery . conference create ?","if entities . find ( conference ) ! = None : newline newtab entities [ conference ] [ create ] = pottery newline print ( conference [ create ] ) newline"
"red rally decal . red rally ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ rally ] = decal newline print ( red [ rally ] ) newline"
"family come out . out come ?","if entities . find ( family ) ! = None : newline newtab entities [ family ] [ come ] = family newline print ( out [ come ] ) newline"
"snowboarder jump high . high jump ?","if entities . find ( snowboarder ) ! = None : newline newtab entities [ snowboarder ] [ jump ] = snowboarder newline print ( high [ jump ] ) newline"
"lady be sorting . lady be ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ be ] = sorting newline print ( lady [ be ] ) newline"
"bench talk radio . bench talk ?","if entities . find ( bench ) ! = None : newline newtab entities [ bench ] [ talk ] = radio newline print ( bench [ talk ] ) newline"
"father read another . another read ?","if entities . find ( father ) ! = None : newline newtab entities [ father ] [ read ] = father newline print ( another [ read ] ) newline"
"child climb stone . child climb ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ climb ] = stone newline print ( child [ climb ] ) newline"
"jeans look out . out look ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ look ] = jeans newline print ( out [ look ] ) newline"
"boy be ready . ready be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( ready [ be ] ) newline"
"street offer sample . street offer ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ offer ] = sample newline print ( street [ offer ] ) newline"
"red paddle boat . red paddle ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ paddle ] = boat newline print ( red [ paddle ] ) newline"
"fisherman hold silver . fisherman hold ?","if entities . find ( fisherman ) ! = None : newline newtab entities [ fisherman ] [ hold ] = silver newline print ( fisherman [ hold ] ) newline"
"couple interact white . white interact ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ interact ] = couple newline print ( white [ interact ] ) newline"
"arcade be tackler . arcade be ?","if entities . find ( arcade ) ! = None : newline newtab entities [ arcade ] [ be ] = tackler newline print ( arcade [ be ] ) newline"
"young buy white . white buy ?","if entities . find ( young ) ! = None : newline newtab entities [ young ] [ buy ] = young newline print ( white [ buy ] ) newline"
"woman be asleep . asleep be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( asleep [ be ] ) newline"
"rock climb wall . rock climb ?","if entities . find ( rock ) ! = None : newline newtab entities [ rock ] [ climb ] = wall newline print ( rock [ climb ] ) newline"
"man hold yellow . yellow hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = man newline print ( yellow [ hold ] ) newline"
"two bucket two . two bucket ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ bucket ] = two newline print ( two [ bucket ] ) newline"
"people gather paper . people gather ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ gather ] = paper newline print ( people [ gather ] ) newline"
"brown shirt swinging . swinging shirt ?","if entities . find ( brown ) ! = None : newline newtab entities [ brown ] [ shirt ] = brown newline print ( swinging [ shirt ] ) newline"
"ice cream out . out cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = ice newline print ( out [ cream ] ) newline"
"history build while . history build ?","if entities . find ( history ) ! = None : newline newtab entities [ history ] [ build ] = while newline print ( history [ build ] ) newline"
"tourist be rock . tourist be ?","if entities . find ( tourist ) ! = None : newline newtab entities [ tourist ] [ be ] = rock newline print ( tourist [ be ] ) newline"
"dog be two . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = two newline print ( dog [ be ] ) newline"
"child raise platform . child raise ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ raise ] = platform newline print ( child [ raise ] ) newline"
"girl wear headphone . girl wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = headphone newline print ( girl [ wear ] ) newline"
"bus stop sign . bus stop ?","if entities . find ( bus ) ! = None : newline newtab entities [ bus ] [ stop ] = sign newline print ( bus [ stop ] ) newline"
"man lay dog . man lay ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ lay ] = dog newline print ( man [ lay ] ) newline"
"people wear jeans . people wear ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ wear ] = jeans newline print ( people [ wear ] ) newline"
"child be two . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = two newline print ( child [ be ] ) newline"
"woman hold one . one hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = woman newline print ( one [ hold ] ) newline"
"man do different . different do ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ do ] = man newline print ( different [ do ] ) newline"
"girl swim underwater . underwater swim ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ swim ] = girl newline print ( underwater [ swim ] ) newline"
"people stand knee . people stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = knee newline print ( people [ stand ] ) newline"
"child be nature . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = nature newline print ( child [ be ] ) newline"
"someone climb wooden . wooden climb ?","if entities . find ( someone ) ! = None : newline newtab entities [ someone ] [ climb ] = someone newline print ( wooden [ climb ] ) newline"
"man windsurf two . man windsurf ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ windsurf ] = two newline print ( man [ windsurf ] ) newline"
"people be opening . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = opening newline print ( people [ be ] ) newline"
"corp fort white . white fort ?","if entities . find ( corp ) ! = None : newline newtab entities [ corp ] [ fort ] = corp newline print ( white [ fort ] ) newline"
"men be thursday . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = thursday newline print ( men [ be ] ) newline"
"baby wear jean . baby wear ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ wear ] = jean newline print ( baby [ wear ] ) newline"
"ring protrude two . ring protrude ?","if entities . find ( ring ) ! = None : newline newtab entities [ ring ] [ protrude ] = two newline print ( ring [ protrude ] ) newline"
"guy be white . white be ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ be ] = guy newline print ( white [ be ] ) newline"
"brick build while . brick build ?","if entities . find ( brick ) ! = None : newline newtab entities [ brick ] [ build ] = while newline print ( brick [ build ] ) newline"
"man be asleep . asleep be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( asleep [ be ] ) newline"
"jersey sit or . jersey sit ?","if entities . find ( jersey ) ! = None : newline newtab entities [ jersey ] [ sit ] = or newline print ( jersey [ sit ] ) newline"
"hotdog cart full . full cart ?","if entities . find ( hotdog ) ! = None : newline newtab entities [ hotdog ] [ cart ] = hotdog newline print ( full [ cart ] ) newline"
"while sit next . next sit ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ sit ] = while newline print ( next [ sit ] ) newline"
"green uniform one . one uniform ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ uniform ] = green newline print ( one [ uniform ] ) newline"
"helmet weld some . some weld ?","if entities . find ( helmet ) ! = None : newline newtab entities [ helmet ] [ weld ] = helmet newline print ( some [ weld ] ) newline"
"player be sleeping . player be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = sleeping newline print ( player [ be ] ) newline"
"sheepdog be swinging . swinging be ?","if entities . find ( sheepdog ) ! = None : newline newtab entities [ sheepdog ] [ be ] = sheepdog newline print ( swinging [ be ] ) newline"
"suit sit next . next sit ?","if entities . find ( suit ) ! = None : newline newtab entities [ suit ] [ sit ] = suit newline print ( next [ sit ] ) newline"
"hair jump foot . hair jump ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ jump ] = foot newline print ( hair [ jump ] ) newline"
"man look man . man look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = man newline print ( man [ look ] ) newline"
"two cop direction . two cop ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ cop ] = direction newline print ( two [ cop ] ) newline"
"girl wear dark . dark wear ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ wear ] = girl newline print ( dark [ wear ] ) newline"
"woman play acoustic . acoustic play ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ play ] = woman newline print ( acoustic [ play ] ) newline"
"man hold sign . man hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = sign newline print ( man [ hold ] ) newline"
"people watch some . some watch ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ watch ] = people newline print ( some [ watch ] ) newline"
"girl be red . girl be ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ be ] = red newline print ( girl [ be ] ) newline"
"dirt ramp while . dirt ramp ?","if entities . find ( dirt ) ! = None : newline newtab entities [ dirt ] [ ramp ] = while newline print ( dirt [ ramp ] ) newline"
"woman try out . out try ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ try ] = woman newline print ( out [ try ] ) newline"
"sunglasses be colorful . colorful be ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ be ] = sunglasses newline print ( colorful [ be ] ) newline"
"man hold both . both hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = man newline print ( both [ hold ] ) newline"
"guy wear suspender . guy wear ?","if entities . find ( guy ) ! = None : newline newtab entities [ guy ] [ wear ] = suspender newline print ( guy [ wear ] ) newline"
"young buy white . white buy ?","if entities . find ( young ) ! = None : newline newtab entities [ young ] [ buy ] = young newline print ( white [ buy ] ) newline"
"tourist stand next . next stand ?","if entities . find ( tourist ) ! = None : newline newtab entities [ tourist ] [ stand ] = tourist newline print ( next [ stand ] ) newline"
"dog play music . dog play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = music newline print ( dog [ play ] ) newline"
"woman perform trick . woman perform ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ perform ] = trick newline print ( woman [ perform ] ) newline"
"man sweep debris . man sweep ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sweep ] = debris newline print ( man [ sweep ] ) newline"
"people sit youth . people sit ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ sit ] = youth newline print ( people [ sit ] ) newline"
"parade float wooden . wooden float ?","if entities . find ( parade ) ! = None : newline newtab entities [ parade ] [ float ] = parade newline print ( wooden [ float ] ) newline"
"dog be mouth . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = mouth newline print ( dog [ be ] ) newline"
"man squat next . next squat ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ squat ] = man newline print ( next [ squat ] ) newline"
"someone skate white . white skate ?","if entities . find ( someone ) ! = None : newline newtab entities [ someone ] [ skate ] = someone newline print ( white [ skate ] ) newline"
"men stand out . out stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = men newline print ( out [ stand ] ) newline"
"orange shirt while . orange shirt ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ shirt ] = while newline print ( orange [ shirt ] ) newline"
"woman wear blue . blue wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( blue [ wear ] ) newline"
"man jump brown . man jump ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ jump ] = brown newline print ( man [ jump ] ) newline"
"haircut stand next . next stand ?","if entities . find ( haircut ) ! = None : newline newtab entities [ haircut ] [ stand ] = haircut newline print ( next [ stand ] ) newline"
"gray shirt while . gray shirt ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ shirt ] = while newline print ( gray [ shirt ] ) newline"
"dog be yawning . yawning be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = dog newline print ( yawning [ be ] ) newline"
"picture be napping . napping be ?","if entities . find ( picture ) ! = None : newline newtab entities [ picture ] [ be ] = picture newline print ( napping [ be ] ) newline"
"people stand next . next stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( next [ stand ] ) newline"
"baby swing laugh . baby swing ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ swing ] = laugh newline print ( baby [ swing ] ) newline"
"boy share white . white share ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ share ] = boy newline print ( white [ share ] ) newline"
"woman stand next . next stand ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ stand ] = woman newline print ( next [ stand ] ) newline"
"couple sit next . next sit ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ sit ] = couple newline print ( next [ sit ] ) newline"
"gear climb stairs . gear climb ?","if entities . find ( gear ) ! = None : newline newtab entities [ gear ] [ climb ] = stairs newline print ( gear [ climb ] ) newline"
"dog be opening . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = opening newline print ( dog [ be ] ) newline"
"dog chase it . dog chase ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ chase ] = it newline print ( dog [ chase ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"sign gather next . next gather ?","if entities . find ( sign ) ! = None : newline newtab entities [ sign ] [ gather ] = sign newline print ( next [ gather ] ) newline"
"bag fill out . out fill ?","if entities . find ( bag ) ! = None : newline newtab entities [ bag ] [ fill ] = bag newline print ( out [ fill ] ) newline"
"woman look happy . happy look ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ look ] = woman newline print ( happy [ look ] ) newline"
"dog lie half . half lie ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ lie ] = dog newline print ( half [ lie ] ) newline"
"man stand while . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = while newline print ( man [ stand ] ) newline"
"man dress swinging . swinging dress ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ dress ] = man newline print ( swinging [ dress ] ) newline"
"child pose next . next pose ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ pose ] = child newline print ( next [ pose ] ) newline"
"red shirt out . out shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( out [ shirt ] ) newline"
"neon clothe next . next clothe ?","if entities . find ( neon ) ! = None : newline newtab entities [ neon ] [ clothe ] = neon newline print ( next [ clothe ] ) newline"
"boy experience white . white experience ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ experience ] = boy newline print ( white [ experience ] ) newline"
"surfer do some . some do ?","if entities . find ( surfer ) ! = None : newline newtab entities [ surfer ] [ do ] = surfer newline print ( some [ do ] ) newline"
"dog wear sandal . dog wear ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ wear ] = sandal newline print ( dog [ wear ] ) newline"
"woman be underway . underway be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( underway [ be ] ) newline"
"men play some . some play ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ play ] = men newline print ( some [ play ] ) newline"
"woman hold some . some hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = woman newline print ( some [ hold ] ) newline"
"hair have fun . hair have ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ have ] = fun newline print ( hair [ have ] ) newline"
"men work out . out work ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ work ] = men newline print ( out [ work ] ) newline"
"an injure cat . an injure ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ injure ] = cat newline print ( an [ injure ] ) newline"
"woman sing while . woman sing ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sing ] = while newline print ( woman [ sing ] ) newline"
"bike be napping . napping be ?","if entities . find ( bike ) ! = None : newline newtab entities [ bike ] [ be ] = bike newline print ( napping [ be ] ) newline"
"couple sit while . couple sit ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ sit ] = while newline print ( couple [ sit ] ) newline"
"sweatshirt adjust blue . blue adjust ?","if entities . find ( sweatshirt ) ! = None : newline newtab entities [ sweatshirt ] [ adjust ] = sweatshirt newline print ( blue [ adjust ] ) newline"
"event hold out . out hold ?","if entities . find ( event ) ! = None : newline newtab entities [ event ] [ hold ] = event newline print ( out [ hold ] ) newline"
"person dress wardrobe . person dress ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ dress ] = wardrobe newline print ( person [ dress ] ) newline"
"man be both . both be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( both [ be ] ) newline"
"team be staring . staring be ?","if entities . find ( team ) ! = None : newline newtab entities [ team ] [ be ] = team newline print ( staring [ be ] ) newline"
"men be active . active be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = men newline print ( active [ be ] ) newline"
"green shirt swinging . swinging shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = green newline print ( swinging [ shirt ] ) newline"
"green shirt swinging . swinging shirt ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ shirt ] = green newline print ( swinging [ shirt ] ) newline"
"men wear orange . men wear ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ wear ] = orange newline print ( men [ wear ] ) newline"
"woman wear cowboy . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = cowboy newline print ( woman [ wear ] ) newline"
"man sit while . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = while newline print ( man [ sit ] ) newline"
"game be laughing . laughing be ?","if entities . find ( game ) ! = None : newline newtab entities [ game ] [ be ] = game newline print ( laughing [ be ] ) newline"
"jersey appear two . jersey appear ?","if entities . find ( jersey ) ! = None : newline newtab entities [ jersey ] [ appear ] = two newline print ( jersey [ appear ] ) newline"
"man stand next . next stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = man newline print ( next [ stand ] ) newline"
"woman try out . out try ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ try ] = woman newline print ( out [ try ] ) newline"
"christmas tree white . white tree ?","if entities . find ( christmas ) ! = None : newline newtab entities [ christmas ] [ tree ] = christmas newline print ( white [ tree ] ) newline"
"sunglasses be sleeping . sunglasses be ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ be ] = sleeping newline print ( sunglasses [ be ] ) newline"
"man travel white . white travel ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ travel ] = man newline print ( white [ travel ] ) newline"
"men stand or . men stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = or newline print ( men [ stand ] ) newline"
"man work out . out work ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ work ] = man newline print ( out [ work ] ) newline"
"woman have dinner . woman have ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ have ] = dinner newline print ( woman [ have ] ) newline"
"while relax line . while relax ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ relax ] = line newline print ( while [ relax ] ) newline"
"man walk or . man walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = or newline print ( man [ walk ] ) newline"
"worker stand upside . worker stand ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ stand ] = upside newline print ( worker [ stand ] ) newline"
"guitar drink out . out drink ?","if entities . find ( guitar ) ! = None : newline newtab entities [ guitar ] [ drink ] = guitar newline print ( out [ drink ] ) newline"
"who be laughing . laughing be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( laughing [ be ] ) newline"
"man be sleeping . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = sleeping newline print ( man [ be ] ) newline"
"jersey be indoor . indoor be ?","if entities . find ( jersey ) ! = None : newline newtab entities [ jersey ] [ be ] = jersey newline print ( indoor [ be ] ) newline"
"person be next . next be ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ be ] = person newline print ( next [ be ] ) newline"
"it come out . out come ?","if entities . find ( it ) ! = None : newline newtab entities [ it ] [ come ] = it newline print ( out [ come ] ) newline"
"biker be hunched . hunched be ?","if entities . find ( biker ) ! = None : newline newtab entities [ biker ] [ be ] = biker newline print ( hunched [ be ] ) newline"
"man grab low . low grab ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ grab ] = man newline print ( low [ grab ] ) newline"
"man work while . man work ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ work ] = while newline print ( man [ work ] ) newline"
"tourist be unable . unable be ?","if entities . find ( tourist ) ! = None : newline newtab entities [ tourist ] [ be ] = tourist newline print ( unable [ be ] ) newline"
"child take picture . child take ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ take ] = picture newline print ( child [ take ] ) newline"
"car drive next . next drive ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ drive ] = car newline print ( next [ drive ] ) newline"
"child sit guy . child sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = guy newline print ( child [ sit ] ) newline"
"head walk while . head walk ?","if entities . find ( head ) ! = None : newline newtab entities [ head ] [ walk ] = while newline print ( head [ walk ] ) newline"
"man walk next . next walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = man newline print ( next [ walk ] ) newline"
"green goggle while . green goggle ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ goggle ] = while newline print ( green [ goggle ] ) newline"
"woman wear an . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = an newline print ( woman [ wear ] ) newline"
"bulldozer be all . all be ?","if entities . find ( bulldozer ) ! = None : newline newtab entities [ bulldozer ] [ be ] = bulldozer newline print ( all [ be ] ) newline"
"red bathe suit . red bathe ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ bathe ] = suit newline print ( red [ bathe ] ) newline"
"while look out . out look ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ look ] = while newline print ( out [ look ] ) newline"
"man sit woman . man sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = woman newline print ( man [ sit ] ) newline"
"boy be two . boy be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = two newline print ( boy [ be ] ) newline"
"woman hold different . different hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = woman newline print ( different [ hold ] ) newline"
"child be both . both be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( both [ be ] ) newline"
"toddler smear white . white smear ?","if entities . find ( toddler ) ! = None : newline newtab entities [ toddler ] [ smear ] = toddler newline print ( white [ smear ] ) newline"
"man wear apron . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = apron newline print ( man [ wear ] ) newline"
"swimmer leap while . swimmer leap ?","if entities . find ( swimmer ) ! = None : newline newtab entities [ swimmer ] [ leap ] = while newline print ( swimmer [ leap ] ) newline"
"red shift two . red shift ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shift ] = two newline print ( red [ shift ] ) newline"
"mustang shirt out . out shirt ?","if entities . find ( mustang ) ! = None : newline newtab entities [ mustang ] [ shirt ] = mustang newline print ( out [ shirt ] ) newline"
"boy do some . some do ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ do ] = boy newline print ( some [ do ] ) newline"
"headphone hold some . some hold ?","if entities . find ( headphone ) ! = None : newline newtab entities [ headphone ] [ hold ] = headphone newline print ( some [ hold ] ) newline"
"kid stand or . kid stand ?","if entities . find ( kid ) ! = None : newline newtab entities [ kid ] [ stand ] = or newline print ( kid [ stand ] ) newline"
"outfit be part . outfit be ?","if entities . find ( outfit ) ! = None : newline newtab entities [ outfit ] [ be ] = part newline print ( outfit [ be ] ) newline"
"woman wait next . next wait ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wait ] = woman newline print ( next [ wait ] ) newline"
"man wear black . black wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( black [ wear ] ) newline"
"boy wear headphone . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = headphone newline print ( boy [ wear ] ) newline"
"two wear blue . blue wear ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ wear ] = two newline print ( blue [ wear ] ) newline"
"laundromat look out . out look ?","if entities . find ( laundromat ) ! = None : newline newtab entities [ laundromat ] [ look ] = laundromat newline print ( out [ look ] ) newline"
"people look man . people look ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ look ] = man newline print ( people [ look ] ) newline"
"cyclist be people . cyclist be ?","if entities . find ( cyclist ) ! = None : newline newtab entities [ cyclist ] [ be ] = people newline print ( cyclist [ be ] ) newline"
"woman be next . next be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( next [ be ] ) newline"
"trunks be number . trunks be ?","if entities . find ( trunks ) ! = None : newline newtab entities [ trunks ] [ be ] = number newline print ( trunks [ be ] ) newline"
"child be shielding . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = shielding newline print ( child [ be ] ) newline"
"men be pole . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = pole newline print ( men [ be ] ) newline"
"horse hold two . horse hold ?","if entities . find ( horse ) ! = None : newline newtab entities [ horse ] [ hold ] = two newline print ( horse [ hold ] ) newline"
"boy wear red . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = red newline print ( boy [ wear ] ) newline"
"sunglasses be opening . sunglasses be ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ be ] = opening newline print ( sunglasses [ be ] ) newline"
"plaid shirt swinging . swinging shirt ?","if entities . find ( plaid ) ! = None : newline newtab entities [ plaid ] [ shirt ] = plaid newline print ( swinging [ shirt ] ) newline"
"red shirt who . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = who newline print ( red [ shirt ] ) newline"
"man smile underwater . underwater smile ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ smile ] = man newline print ( underwater [ smile ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"dog be sleeping . dog be ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ be ] = sleeping newline print ( dog [ be ] ) newline"
"scooter pass some . some pass ?","if entities . find ( scooter ) ! = None : newline newtab entities [ scooter ] [ pass ] = scooter newline print ( some [ pass ] ) newline"
"man be swinging . swinging be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( swinging [ be ] ) newline"
"boy wear jeans . boy wear ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ wear ] = jeans newline print ( boy [ wear ] ) newline"
"two smile little . little smile ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ smile ] = two newline print ( little [ smile ] ) newline"
"bermuda short both . both short ?","if entities . find ( bermuda ) ! = None : newline newtab entities [ bermuda ] [ short ] = bermuda newline print ( both [ short ] ) newline"
"while walk out . out walk ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ walk ] = while newline print ( out [ walk ] ) newline"
"man interact two . man interact ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ interact ] = two newline print ( man [ interact ] ) newline"
"jacket jump dog . jacket jump ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ jump ] = dog newline print ( jacket [ jump ] ) newline"
"apron clean rock . apron clean ?","if entities . find ( apron ) ! = None : newline newtab entities [ apron ] [ clean ] = rock newline print ( apron [ clean ] ) newline"
"woman dress all . all dress ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ dress ] = woman newline print ( all [ dress ] ) newline"
"dog run side . dog run ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ run ] = side newline print ( dog [ run ] ) newline"
"woman wear black . black wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = woman newline print ( black [ wear ] ) newline"
"man push hard . hard push ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ push ] = man newline print ( hard [ push ] ) newline"
"man be out . out be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( out [ be ] ) newline"
"person wear blue . blue wear ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ wear ] = person newline print ( blue [ wear ] ) newline"
"man carry tattered . tattered carry ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ carry ] = man newline print ( tattered [ carry ] ) newline"
"child be swinging . swinging be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( swinging [ be ] ) newline"
"girl hold small . small hold ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ hold ] = girl newline print ( small [ hold ] ) newline"
"people be ready . ready be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( ready [ be ] ) newline"
"hair make coffee . hair make ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ make ] = coffee newline print ( hair [ make ] ) newline"
"two sunbathe people . two sunbathe ?","if entities . find ( two ) ! = None : newline newtab entities [ two ] [ sunbathe ] = people newline print ( two [ sunbathe ] ) newline"
"child stand alone . alone stand ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ stand ] = child newline print ( alone [ stand ] ) newline"
"woman be people . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = people newline print ( woman [ be ] ) newline"
"child be spray . child be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = spray newline print ( child [ be ] ) newline"
"paddler wear green . paddler wear ?","if entities . find ( paddler ) ! = None : newline newtab entities [ paddler ] [ wear ] = green newline print ( paddler [ wear ] ) newline"
"brick build while . brick build ?","if entities . find ( brick ) ! = None : newline newtab entities [ brick ] [ build ] = while newline print ( brick [ build ] ) newline"
"man reenact white . white reenact ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ reenact ] = man newline print ( white [ reenact ] ) newline"
"gray shirt release . gray shirt ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ shirt ] = release newline print ( gray [ shirt ] ) newline"
"jacket be laughing . laughing be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = jacket newline print ( laughing [ be ] ) newline"
"player be three . player be ?","if entities . find ( player ) ! = None : newline newtab entities [ player ] [ be ] = three newline print ( player [ be ] ) newline"
"woman walk next . next walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = woman newline print ( next [ walk ] ) newline"
"hand be three . hand be ?","if entities . find ( hand ) ! = None : newline newtab entities [ hand ] [ be ] = three newline print ( hand [ be ] ) newline"
"men drape white . white drape ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ drape ] = men newline print ( white [ drape ] ) newline"
"man wear gray . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = gray newline print ( man [ wear ] ) newline"
"girl move brick . girl move ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ move ] = brick newline print ( girl [ move ] ) newline"
"child play soccer . child play ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ play ] = soccer newline print ( child [ play ] ) newline"
"man sit alone . alone sit ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ sit ] = man newline print ( alone [ sit ] ) newline"
"woman put yellow . yellow put ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ put ] = woman newline print ( yellow [ put ] ) newline"
"person sit bride . person sit ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ sit ] = bride newline print ( person [ sit ] ) newline"
"woman mix music . woman mix ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ mix ] = music newline print ( woman [ mix ] ) newline"
"man wear all . all wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( all [ wear ] ) newline"
"air parallel white . white parallel ?","if entities . find ( air ) ! = None : newline newtab entities [ air ] [ parallel ] = air newline print ( white [ parallel ] ) newline"
"man look out . out look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = man newline print ( out [ look ] ) newline"
"woman look cup . woman look ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ look ] = cup newline print ( woman [ look ] ) newline"
"jeans be painted . painted be ?","if entities . find ( jeans ) ! = None : newline newtab entities [ jeans ] [ be ] = jeans newline print ( painted [ be ] ) newline"
"man be all . all be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( all [ be ] ) newline"
"man wear all . all wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = man newline print ( all [ wear ] ) newline"
"couple hold cardboard . cardboard hold ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ hold ] = couple newline print ( cardboard [ hold ] ) newline"
"people wrestle while . people wrestle ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ wrestle ] = while newline print ( people [ wrestle ] ) newline"
"worker work man . worker work ?","if entities . find ( worker ) ! = None : newline newtab entities [ worker ] [ work ] = man newline print ( worker [ work ] ) newline"
"orange vest wave . orange vest ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ vest ] = wave newline print ( orange [ vest ] ) newline"
"woman be an . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = an newline print ( woman [ be ] ) newline"
"cowboy hat while . cowboy hat ?","if entities . find ( cowboy ) ! = None : newline newtab entities [ cowboy ] [ hat ] = while newline print ( cowboy [ hat ] ) newline"
"man be midair . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = midair newline print ( man [ be ] ) newline"
"it be next . next be ?","if entities . find ( it ) ! = None : newline newtab entities [ it ] [ be ] = it newline print ( next [ be ] ) newline"
"male smile while . male smile ?","if entities . find ( male ) ! = None : newline newtab entities [ male ] [ smile ] = while newline print ( male [ smile ] ) newline"
"people be black . black be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = people newline print ( black [ be ] ) newline"
"net sit while . net sit ?","if entities . find ( net ) ! = None : newline newtab entities [ net ] [ sit ] = while newline print ( net [ sit ] ) newline"
"dog shew white . white shew ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ shew ] = dog newline print ( white [ shew ] ) newline"
"magician be full . full be ?","if entities . find ( magician ) ! = None : newline newtab entities [ magician ] [ be ] = magician newline print ( full [ be ] ) newline"
"restaurant be sleeping . restaurant be ?","if entities . find ( restaurant ) ! = None : newline newtab entities [ restaurant ] [ be ] = sleeping newline print ( restaurant [ be ] ) newline"
"stadium watch an . stadium watch ?","if entities . find ( stadium ) ! = None : newline newtab entities [ stadium ] [ watch ] = an newline print ( stadium [ watch ] ) newline"
"men be light . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = light newline print ( men [ be ] ) newline"
"diver be laughing . laughing be ?","if entities . find ( diver ) ! = None : newline newtab entities [ diver ] [ be ] = diver newline print ( laughing [ be ] ) newline"
"turquoise vest next . next vest ?","if entities . find ( turquoise ) ! = None : newline newtab entities [ turquoise ] [ vest ] = turquoise newline print ( next [ vest ] ) newline"
"authorities keep pace . authorities keep ?","if entities . find ( authorities ) ! = None : newline newtab entities [ authorities ] [ keep ] = pace newline print ( authorities [ keep ] ) newline"
"it look garden . it look ?","if entities . find ( it ) ! = None : newline newtab entities [ it ] [ look ] = garden newline print ( it [ look ] ) newline"
"girl contort white . white contort ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ contort ] = girl newline print ( white [ contort ] ) newline"
"beard wear black . black wear ?","if entities . find ( beard ) ! = None : newline newtab entities [ beard ] [ wear ] = beard newline print ( black [ wear ] ) newline"
"people be sleeping . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = sleeping newline print ( people [ be ] ) newline"
"teammate be asleep . asleep be ?","if entities . find ( teammate ) ! = None : newline newtab entities [ teammate ] [ be ] = teammate newline print ( asleep [ be ] ) newline"
"bicyclist drive next . next drive ?","if entities . find ( bicyclist ) ! = None : newline newtab entities [ bicyclist ] [ drive ] = bicyclist newline print ( next [ drive ] ) newline"
"red shirt worker . red shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = worker newline print ( red [ shirt ] ) newline"
"cap be sleeping . cap be ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ be ] = sleeping newline print ( cap [ be ] ) newline"
"gray shirt while . gray shirt ?","if entities . find ( gray ) ! = None : newline newtab entities [ gray ] [ shirt ] = while newline print ( gray [ shirt ] ) newline"
"dancer wear red . dancer wear ?","if entities . find ( dancer ) ! = None : newline newtab entities [ dancer ] [ wear ] = red newline print ( dancer [ wear ] ) newline"
"age gather various . various gather ?","if entities . find ( age ) ! = None : newline newtab entities [ age ] [ gather ] = age newline print ( various [ gather ] ) newline"
"people be three . people be ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ be ] = three newline print ( people [ be ] ) newline"
"while pose next . next pose ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ pose ] = while newline print ( next [ pose ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"photographer be staring . staring be ?","if entities . find ( photographer ) ! = None : newline newtab entities [ photographer ] [ be ] = photographer newline print ( staring [ be ] ) newline"
"street face cotton . street face ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ face ] = cotton newline print ( street [ face ] ) newline"
"man work old . old work ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ work ] = man newline print ( old [ work ] ) newline"
"people walk out . out walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( out [ walk ] ) newline"
"bag be all . all be ?","if entities . find ( bag ) ! = None : newline newtab entities [ bag ] [ be ] = bag newline print ( all [ be ] ) newline"
"lady be hard . hard be ?","if entities . find ( lady ) ! = None : newline newtab entities [ lady ] [ be ] = lady newline print ( hard [ be ] ) newline"
"while sit or . while sit ?","if entities . find ( while ) ! = None : newline newtab entities [ while ] [ sit ] = or newline print ( while [ sit ] ) newline"
"family have some . some have ?","if entities . find ( family ) ! = None : newline newtab entities [ family ] [ have ] = family newline print ( some [ have ] ) newline"
"jacket ride white . white ride ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ ride ] = jacket newline print ( white [ ride ] ) newline"
"bottle run while . bottle run ?","if entities . find ( bottle ) ! = None : newline newtab entities [ bottle ] [ run ] = while newline print ( bottle [ run ] ) newline"
"man lean out . out lean ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ lean ] = man newline print ( out [ lean ] ) newline"
"boy be asleep . asleep be ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ be ] = boy newline print ( asleep [ be ] ) newline"
"person ride elephant . person ride ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ ride ] = elephant newline print ( person [ ride ] ) newline"
"ice skate rink . ice skate ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ skate ] = rink newline print ( ice [ skate ] ) newline"
"who be both . both be ?","if entities . find ( who ) ! = None : newline newtab entities [ who ] [ be ] = who newline print ( both [ be ] ) newline"
"snowboarder launch white . white launch ?","if entities . find ( snowboarder ) ! = None : newline newtab entities [ snowboarder ] [ launch ] = snowboarder newline print ( white [ launch ] ) newline"
"man be upside . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = upside newline print ( man [ be ] ) newline"
"wrestler throw another . another throw ?","if entities . find ( wrestler ) ! = None : newline newtab entities [ wrestler ] [ throw ] = wrestler newline print ( another [ throw ] ) newline"
"hair be miniature . hair be ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ be ] = miniature newline print ( hair [ be ] ) newline"
"cement step next . next step ?","if entities . find ( cement ) ! = None : newline newtab entities [ cement ] [ step ] = cement newline print ( next [ step ] ) newline"
"people walk alone . alone walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( alone [ walk ] ) newline"
"dog play basketball . dog play ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ play ] = basketball newline print ( dog [ play ] ) newline"
"woman walk out . out walk ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ walk ] = woman newline print ( out [ walk ] ) newline"
"construction work out . out work ?","if entities . find ( construction ) ! = None : newline newtab entities [ construction ] [ work ] = construction newline print ( out [ work ] ) newline"
"man toss plastic . plastic toss ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ toss ] = man newline print ( plastic [ toss ] ) newline"
"man wear suspender . man wear ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ wear ] = suspender newline print ( man [ wear ] ) newline"
"man be out . out be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = man newline print ( out [ be ] ) newline"
"ice cream cone . ice cream ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ cream ] = cone newline print ( ice [ cream ] ) newline"
"hijab be swinging . swinging be ?","if entities . find ( hijab ) ! = None : newline newtab entities [ hijab ] [ be ] = hijab newline print ( swinging [ be ] ) newline"
"boy stand man . boy stand ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ stand ] = man newline print ( boy [ stand ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"person take picture . person take ?","if entities . find ( person ) ! = None : newline newtab entities [ person ] [ take ] = picture newline print ( person [ take ] ) newline"
"construction project white . white project ?","if entities . find ( construction ) ! = None : newline newtab entities [ construction ] [ project ] = construction newline print ( white [ project ] ) newline"
"woman have painted . painted have ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ have ] = woman newline print ( painted [ have ] ) newline"
"man take one . one take ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ take ] = man newline print ( one [ take ] ) newline"
"ice enter large . large enter ?","if entities . find ( ice ) ! = None : newline newtab entities [ ice ] [ enter ] = ice newline print ( large [ enter ] ) newline"
"people walk out . out walk ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ walk ] = people newline print ( out [ walk ] ) newline"
"chief make silly . silly make ?","if entities . find ( chief ) ! = None : newline newtab entities [ chief ] [ make ] = chief newline print ( silly [ make ] ) newline"
"individual move out . out move ?","if entities . find ( individual ) ! = None : newline newtab entities [ individual ] [ move ] = individual newline print ( out [ move ] ) newline"
"man play acoustic . acoustic play ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ play ] = man newline print ( acoustic [ play ] ) newline"
"green grass while . green grass ?","if entities . find ( green ) ! = None : newline newtab entities [ green ] [ grass ] = while newline print ( green [ grass ] ) newline"
"man record studio . man record ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ record ] = studio newline print ( man [ record ] ) newline"
"cap be beer . cap be ?","if entities . find ( cap ) ! = None : newline newtab entities [ cap ] [ be ] = beer newline print ( cap [ be ] ) newline"
"people enjoy time . people enjoy ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ enjoy ] = time newline print ( people [ enjoy ] ) newline"
"woman carry instrument . woman carry ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ carry ] = instrument newline print ( woman [ carry ] ) newline"
"flautist play music . flautist play ?","if entities . find ( flautist ) ! = None : newline newtab entities [ flautist ] [ play ] = music newline print ( flautist [ play ] ) newline"
"hair play basketball . hair play ?","if entities . find ( hair ) ! = None : newline newtab entities [ hair ] [ play ] = basketball newline print ( hair [ play ] ) newline"
"girl play acoustic . acoustic play ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ play ] = girl newline print ( acoustic [ play ] ) newline"
"child sit next . next sit ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ sit ] = child newline print ( next [ sit ] ) newline"
"woman sit next . next sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = woman newline print ( next [ sit ] ) newline"
"orange work site . orange work ?","if entities . find ( orange ) ! = None : newline newtab entities [ orange ] [ work ] = site newline print ( orange [ work ] ) newline"
"man look unhappy . unhappy look ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ look ] = man newline print ( unhappy [ look ] ) newline"
"street be two . street be ?","if entities . find ( street ) ! = None : newline newtab entities [ street ] [ be ] = two newline print ( street [ be ] ) newline"
"field take picture . field take ?","if entities . find ( field ) ! = None : newline newtab entities [ field ] [ take ] = picture newline print ( field [ take ] ) newline"
"red shirt staring . staring shirt ?","if entities . find ( red ) ! = None : newline newtab entities [ red ] [ shirt ] = red newline print ( staring [ shirt ] ) newline"
"woman prepare food . woman prepare ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ prepare ] = food newline print ( woman [ prepare ] ) newline"
"man juggle some . some juggle ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ juggle ] = man newline print ( some [ juggle ] ) newline"
"baby be full . full be ?","if entities . find ( baby ) ! = None : newline newtab entities [ baby ] [ be ] = baby newline print ( full [ be ] ) newline"
"men be midair . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = midair newline print ( men [ be ] ) newline"
"man stand while . man stand ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ stand ] = while newline print ( man [ stand ] ) newline"
"men be opening . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = opening newline print ( men [ be ] ) newline"
"farmer be laughing . laughing be ?","if entities . find ( farmer ) ! = None : newline newtab entities [ farmer ] [ be ] = farmer newline print ( laughing [ be ] ) newline"
"jacket be two . jacket be ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ be ] = two newline print ( jacket [ be ] ) newline"
"girl fill out . out fill ?","if entities . find ( girl ) ! = None : newline newtab entities [ girl ] [ fill ] = girl newline print ( out [ fill ] ) newline"
"sunglasses sit while . sunglasses sit ?","if entities . find ( sunglasses ) ! = None : newline newtab entities [ sunglasses ] [ sit ] = while newline print ( sunglasses [ sit ] ) newline"
"car look out . out look ?","if entities . find ( car ) ! = None : newline newtab entities [ car ] [ look ] = car newline print ( out [ look ] ) newline"
"toddler play street . toddler play ?","if entities . find ( toddler ) ! = None : newline newtab entities [ toddler ] [ play ] = street newline print ( toddler [ play ] ) newline"
"man make it . man make ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ make ] = it newline print ( man [ make ] ) newline"
"woman be prominent . prominent be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( prominent [ be ] ) newline"
"somebody dig site . somebody dig ?","if entities . find ( somebody ) ! = None : newline newtab entities [ somebody ] [ dig ] = site newline print ( somebody [ dig ] ) newline"
"men be rock . men be ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ be ] = rock newline print ( men [ be ] ) newline"
"boy look out . out look ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ look ] = boy newline print ( out [ look ] ) newline"
"woman sit side . woman sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = side newline print ( woman [ sit ] ) newline"
"visitor read while . visitor read ?","if entities . find ( visitor ) ! = None : newline newtab entities [ visitor ] [ read ] = while newline print ( visitor [ read ] ) newline"
"man be snow . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = snow newline print ( man [ be ] ) newline"
"skateboarder be nude . skateboarder be ?","if entities . find ( skateboarder ) ! = None : newline newtab entities [ skateboarder ] [ be ] = nude newline print ( skateboarder [ be ] ) newline"
"it be able . able be ?","if entities . find ( it ) ! = None : newline newtab entities [ it ] [ be ] = it newline print ( able [ be ] ) newline"
"woman balance several . several balance ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ balance ] = woman newline print ( several [ balance ] ) newline"
"bag be busy . busy be ?","if entities . find ( bag ) ! = None : newline newtab entities [ bag ] [ be ] = bag newline print ( busy [ be ] ) newline"
"three work computer . three work ?","if entities . find ( three ) ! = None : newline newtab entities [ three ] [ work ] = computer newline print ( three [ work ] ) newline"
"jacket climb dirt . jacket climb ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ climb ] = dirt newline print ( jacket [ climb ] ) newline"
"child be asleep . asleep be ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ be ] = child newline print ( asleep [ be ] ) newline"
"umpire call screaming . screaming call ?","if entities . find ( umpire ) ! = None : newline newtab entities [ umpire ] [ call ] = umpire newline print ( screaming [ call ] ) newline"
"adult be sleeping . adult be ?","if entities . find ( adult ) ! = None : newline newtab entities [ adult ] [ be ] = sleeping newline print ( adult [ be ] ) newline"
"top take picture . top take ?","if entities . find ( top ) ! = None : newline newtab entities [ top ] [ take ] = picture newline print ( top [ take ] ) newline"
"sleeve be swinging . swinging be ?","if entities . find ( sleeve ) ! = None : newline newtab entities [ sleeve ] [ be ] = sleeve newline print ( swinging [ be ] ) newline"
"artist work man . artist work ?","if entities . find ( artist ) ! = None : newline newtab entities [ artist ] [ work ] = man newline print ( artist [ work ] ) newline"
"man be three . man be ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ be ] = three newline print ( man [ be ] ) newline"
"child cover another . another cover ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ cover ] = child newline print ( another [ cover ] ) newline"
"band be girl . band be ?","if entities . find ( band ) ! = None : newline newtab entities [ band ] [ be ] = girl newline print ( band [ be ] ) newline"
"dog swim pool . dog swim ?","if entities . find ( dog ) ! = None : newline newtab entities [ dog ] [ swim ] = pool newline print ( dog [ swim ] ) newline"
"an empty cardboard . cardboard empty ?","if entities . find ( an ) ! = None : newline newtab entities [ an ] [ empty ] = an newline print ( cardboard [ empty ] ) newline"
"jacket play various . various play ?","if entities . find ( jacket ) ! = None : newline newtab entities [ jacket ] [ play ] = jacket newline print ( various [ play ] ) newline"
"woman smile ear . woman smile ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ smile ] = ear newline print ( woman [ smile ] ) newline"
"woman be out . out be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = woman newline print ( out [ be ] ) newline"
"man walk little . little walk ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ walk ] = man newline print ( little [ walk ] ) newline"
"friend pose next . next pose ?","if entities . find ( friend ) ! = None : newline newtab entities [ friend ] [ pose ] = friend newline print ( next [ pose ] ) newline"
"couple enjoy some . some enjoy ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ enjoy ] = couple newline print ( some [ enjoy ] ) newline"
"man hold sign . man hold ?","if entities . find ( man ) ! = None : newline newtab entities [ man ] [ hold ] = sign newline print ( man [ hold ] ) newline"
"kilt throw confetti . kilt throw ?","if entities . find ( kilt ) ! = None : newline newtab entities [ kilt ] [ throw ] = confetti newline print ( kilt [ throw ] ) newline"
"child share headphone . child share ?","if entities . find ( child ) ! = None : newline newtab entities [ child ] [ share ] = headphone newline print ( child [ share ] ) newline"
"safety vest next . next vest ?","if entities . find ( safety ) ! = None : newline newtab entities [ safety ] [ vest ] = safety newline print ( next [ vest ] ) newline"
"boy play long . long play ?","if entities . find ( boy ) ! = None : newline newtab entities [ boy ] [ play ] = boy newline print ( long [ play ] ) newline"
"boxer attempt two . boxer attempt ?","if entities . find ( boxer ) ! = None : newline newtab entities [ boxer ] [ attempt ] = two newline print ( boxer [ attempt ] ) newline"
"woman wear sunglasses . woman wear ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ wear ] = sunglasses newline print ( woman [ wear ] ) newline"
"container perch two . container perch ?","if entities . find ( container ) ! = None : newline newtab entities [ container ] [ perch ] = two newline print ( container [ perch ] ) newline"
"men dress all . all dress ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ dress ] = men newline print ( all [ dress ] ) newline"
"woman hold several . several hold ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ hold ] = woman newline print ( several [ hold ] ) newline"
"woman be sleeping . woman be ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ be ] = sleeping newline print ( woman [ be ] ) newline"
"couple dance next . next dance ?","if entities . find ( couple ) ! = None : newline newtab entities [ couple ] [ dance ] = couple newline print ( next [ dance ] ) newline"
"school uniform one . one uniform ?","if entities . find ( school ) ! = None : newline newtab entities [ school ] [ uniform ] = school newline print ( one [ uniform ] ) newline"
"road cross legged . legged cross ?","if entities . find ( road ) ! = None : newline newtab entities [ road ] [ cross ] = road newline print ( legged [ cross ] ) newline"
"men stand next . next stand ?","if entities . find ( men ) ! = None : newline newtab entities [ men ] [ stand ] = men newline print ( next [ stand ] ) newline"
"sign offer sample . sign offer ?","if entities . find ( sign ) ! = None : newline newtab entities [ sign ] [ offer ] = sample newline print ( sign [ offer ] ) newline"
"woman sit dog . woman sit ?","if entities . find ( woman ) ! = None : newline newtab entities [ woman ] [ sit ] = dog newline print ( woman [ sit ] ) newline"
"window dress man . window dress ?","if entities . find ( window ) ! = None : newline newtab entities [ window ] [ dress ] = man newline print ( window [ dress ] ) newline"
"people stand hunched . hunched stand ?","if entities . find ( people ) ! = None : newline newtab entities [ people ] [ stand ] = people newline print ( hunched [ stand ] ) newline"
